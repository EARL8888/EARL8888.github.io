<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>农民艺术家</title>
  <subtitle>Keep Calm and Carry On</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://xinliu.vip/"/>
  <updated>2018-03-30T17:15:50.917Z</updated>
  <id>http://xinliu.vip/</id>
  
  <author>
    <name>earl</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CSS工程初建</title>
    <link href="http://xinliu.vip/xinliu/acffa0d5/"/>
    <id>http://xinliu.vip/xinliu/acffa0d5/</id>
    <published>2018-03-31T10:00:19.000Z</published>
    <updated>2018-03-30T17:15:50.917Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、站点"><a href="#1、站点" class="headerlink" title="1、站点"></a>1、站点</h2><p>我们的网页都应该放到一个文件夹内。站点 —— 本地文件夹</p><h2 id="2、页面规划"><a href="#2、页面规划" class="headerlink" title="2、页面规划"></a>2、页面规划</h2><pre>
 项目文件夹
    1、首页 
            |------ index.html
    2、样式 css文件夹 
            |------ css文件 相同样式（全局样式 公共样式）
                    base.css（基本样式）global.css（全局样式） 
    3、图片文件夹
            |------ images 文件
    4、特效 js文件夹
            |------ js文件
    5、lib文件夹
            |------ 各种类库文件
</pre><h2 id="3、css初始化"><a href="#3、css初始化" class="headerlink" title="3、css初始化"></a>3、css初始化</h2><pre>
@charset "UTF-8";
/*css 初始化 */
html, body, ul, li, ol, dl, dd, dt, p, h1, h2, h3, h4, h5, h6, form, fieldset, legend, img { margin:0; padding:0; }
fieldset, img,input,button { border:none; padding:0;margin:0;outline-style:none; }
ul, ol { list-style:none; }
input { padding-top:0; padding-bottom:0; font-family: "SimSun","宋体";}
select, input { vertical-align:middle; }
select, input, textarea { font-size:12px; margin:0; }
textarea { resize:none; } /*防止拖动*/
img {border:0; vertical-align:middle; }  /*去掉图片低测默认的3像素空白缝隙*/
table { border-collapse:collapse; }
body {
    font:12px/150% Arial,Verdana,"\5b8b\4f53";
    color:#666;
    background:#fff
}
.clearfix:before,.clearfix:after{
    content:"";
    display:table;
}
.clearfix:after{clear:both;}
.clearfix{
    *zoom:1;/*IE/7/6*/
}
a{color:#666; text-decoration:none; }
a:hover{color:#C81623;}
h1,h2,h3,h4,h5,h6{text-decoration:none;font-weight:normal;font-size:100%;}
s,i,em{font-style:normal;text-decoration:none;}
.col-red{color: #C81623!important;}

/*公共类*/
.w {  /*版心 提取 */
    width: 1210px;margin:0 auto;
}
.fl {
    float:left
}
.fr {
    float:right
}
.al {
    text-align:left
}
.ac {
    text-align:center
}
.ar {
    text-align:right
}
.hide {
    display:none
}
</pre><h2 id="4、进入css文件"><a href="#4、进入css文件" class="headerlink" title="4、进入css文件"></a>4、进入css文件</h2><p><img src="https://github.com/EARL8888/SrcPath/blob/master/Hexo/FBF4718D-F959-497D-A132-97DF45CC8C46.png?raw=true" alt=""></p><h2 id="5、Favicon-图标"><a href="#5、Favicon-图标" class="headerlink" title="5、Favicon 图标"></a>5、Favicon 图标</h2><p><code>&lt;link rel=&quot;shortcut icon&quot; href=&quot;favicon.ico&quot; /&gt;</code></p><p><img src="https://github.com/EARL8888/SrcPath/blob/master/Hexo/A00A95FD31403629D92A48F10CA4866C.jpg?raw=true" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1、站点&quot;&gt;&lt;a href=&quot;#1、站点&quot; class=&quot;headerlink&quot; title=&quot;1、站点&quot;&gt;&lt;/a&gt;1、站点&lt;/h2&gt;&lt;p&gt;我们的网页都应该放到一个文件夹内。站点 —— 本地文件夹&lt;/p&gt;&lt;h2 id=&quot;2、页面规划&quot;&gt;&lt;a href=&quot;#2、页面
    
    </summary>
    
      <category term="CSS" scheme="http://xinliu.vip/categories/CSS/"/>
    
    
      <category term="CSS" scheme="http://xinliu.vip/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>hexo常用命令笔记</title>
    <link href="http://xinliu.vip/xinliu/cf1e7f74/"/>
    <id>http://xinliu.vip/xinliu/cf1e7f74/</id>
    <published>2018-03-20T04:16:32.000Z</published>
    <updated>2018-03-30T15:54:02.911Z</updated>
    
    <content type="html"><![CDATA[<h2 id="hexo"><a href="#hexo" class="headerlink" title="hexo"></a>hexo</h2><pre>
npm install hexo -g #安装  
npm update hexo -g #升级  
hexo init #初始化
</pre><h2 id="简写"><a href="#简写" class="headerlink" title="简写"></a>简写</h2><pre>
hexo n "我的博客" == hexo new "我的博客" #新建文章
hexo p == hexo publish
hexo g == hexo generate#生成
hexo s == hexo server #启动服务预览
hexo d == hexo deploy#部署
</pre><h2 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h2><pre>
hexo server #Hexo 会监视文件变动并自动更新，您无须重启服务器。
hexo server -s #静态模式
hexo server -p 5000 #更改端口
hexo server -i 192.168.1.1 #自定义 IP
hexo clean #清除缓存 网页正常情况下可以忽略此条命令
hexo g #生成静态网页
hexo d #开始部署
</pre><h2 id="监视文件变动"><a href="#监视文件变动" class="headerlink" title="监视文件变动"></a>监视文件变动</h2><pre>
hexo generate #使用 Hexo 生成静态文件快速而且简单
hexo generate --watch #监视文件变动
</pre><h2 id="草稿"><a href="#草稿" class="headerlink" title="草稿"></a>草稿</h2><pre>
hexo publish [layout] &lt;title&gt;
</pre><h2 id="模版"><a href="#模版" class="headerlink" title="模版"></a>模版</h2><pre>
hexo new "postName" #新建文章
hexo new page "pageName" #新建页面
hexo generate #生成静态页面至public目录
hexo server #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）
hexo deploy #将.deploy目录部署到GitHub
hexo new [layout] &lt;title&gt;
hexo new photo "My Gallery"
hexo new "Hello World" --lang tw
</pre><pre>
<table>
    <tr>
        <th>变量</th>
        <th>描述</th>
    </tr>
    <tr>
        <td>layout</td>
        <td>布局</td>
    </tr>
     <tr>
        <td>title</td>
        <td>标题</td>
    </tr>
     <tr>
        <td>date</td>
        <td>文件建立日期</td>
    </tr>
</table>
</pre><h4 id="用例"><a href="#用例" class="headerlink" title="用例"></a>用例</h4><pre>
title: 使用Hexo搭建个人博客
layout: post
date: 2014-03-03 19:07:43
comments: true
categories: Blog
tags: [Hexo]
keywords: Hexo, Blog
description: 生命在于折腾，又把博客折腾到Hexo了。给Hexo点赞。
</pre><h2 id="模版（Scaffold）"><a href="#模版（Scaffold）" class="headerlink" title="模版（Scaffold）"></a>模版（Scaffold）</h2><pre>
hexo new photo "My Gallery"
</pre><pre>
<table>
    <tr>
        <th>变量</th>
        <th>描述</th>
    </tr>
    <tr>
        <td>layout</td>
        <td>布局</td>
    </tr>
     <tr>
        <td>title</td>
        <td>标题</td>
    </tr>
     <tr>
        <td>date</td>
        <td>文件建立日期</td>
    </tr>
</table>
</pre><h2 id="设置文章摘要"><a href="#设置文章摘要" class="headerlink" title="设置文章摘要"></a>设置文章摘要</h2><pre>以上是文章摘要  &lt;!--more--&gt; 以下是余下全文 </pre><h2 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h2><pre>
hexo new page &lt;title&gt;
hexo new post &lt;title&gt;
</pre><pre>
<table>
    <tr>
        <th>变量</th>
        <th>描述</th>
    </tr>
    <tr>
        <td>:title    </td>
        <td>标题</td>
    </tr>
     <tr>
        <td>:year</td>
        <td>建立的年份（4 位数）</td>
    </tr>
     <tr>
        <td>:month</td>
        <td>建立的月份（2 位数）</td>
    </tr>
     <tr>
        <td>:i_month</td>
        <td>建立的月份（去掉开头的零）</td>
    </tr>
     <tr>
        <td>:day</td>
        <td>建立的日期（2 位数）</td>
    </tr>
     <tr>
        <td>:i_day</td>
        <td>建立的日期（去掉开头的零）</td>
    </tr>
</table>
</pre><h2 id="推送到服务器上"><a href="#推送到服务器上" class="headerlink" title="推送到服务器上"></a>推送到服务器上</h2><pre>
hexo n #写文章
hexo g #生成
hexo d #部署 #可与hexo g合并为 hexo d -g
</pre><h2 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h2><h3 id="1、找不到git部署"><a href="#1、找不到git部署" class="headerlink" title="1、找不到git部署"></a>1、找不到git部署</h3><pre>
ERROR Deployer not found: git
</pre><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><pre>
npm install hexo-deployer-git --save
</pre><h3 id="2、部署类型设置git"><a href="#2、部署类型设置git" class="headerlink" title="2、部署类型设置git"></a>2、部署类型设置git</h3><p>hexo 3.0 部署类型不再是github，_config.yml 中修改</p><pre>
# Deployment
## Docs: http://hexo.io/docs/deployment.html
deploy:
  type: git
  repository: git@***.github.com:***/***.github.io.git
  branch: master
</pre><h3 id="3、xcodebuild"><a href="#3、xcodebuild" class="headerlink" title="3、xcodebuild"></a>3、xcodebuild</h3><pre>
xcode-select: error: tool 'xcodebuild' requires Xcode, 
but active developer directory '/Library/Developer/CommandLineTools' 
is a command line tools instance
</pre><h4 id="解决方法-1"><a href="#解决方法-1" class="headerlink" title="解决方法"></a>解决方法</h4><pre>
npm install bcrypt
</pre><h3 id="4、RSS不显示"><a href="#4、RSS不显示" class="headerlink" title="4、RSS不显示"></a>4、RSS不显示</h3><h4 id="安装RSS插件"><a href="#安装RSS插件" class="headerlink" title="安装RSS插件"></a>安装RSS插件</h4><pre>
npm install hexo-generator-feed --save
</pre><h4 id="开启RSS功能"><a href="#开启RSS功能" class="headerlink" title="开启RSS功能"></a>开启RSS功能</h4><p>编辑hexo/_config.yml，添加如下代码：</p><pre>
rss: /atom.xml #rss地址  默认即可
</pre><h3 id="5、hexo工程-上传git"><a href="#5、hexo工程-上传git" class="headerlink" title="5、hexo工程 上传git"></a>5、hexo工程 上传git</h3><pre>
Error: fatal: multiple stage entries for merged file 'fancybox'
</pre><h4 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h4><pre>
rm .deploy_git/.git/index  #在命令行运行 
</pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;hexo&quot;&gt;&lt;a href=&quot;#hexo&quot; class=&quot;headerlink&quot; title=&quot;hexo&quot;&gt;&lt;/a&gt;hexo&lt;/h2&gt;&lt;pre&gt;
npm install hexo -g #安装  
npm update hexo -g #升级  
hexo ini
    
    </summary>
    
      <category term="hexo" scheme="http://xinliu.vip/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://xinliu.vip/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>AngularJS_01常用插件与指令收集</title>
    <link href="http://xinliu.vip/xinliu/9399a53d/"/>
    <id>http://xinliu.vip/xinliu/9399a53d/</id>
    <published>2018-01-18T06:35:55.000Z</published>
    <updated>2018-03-30T14:45:29.762Z</updated>
    
    <content type="html"><![CDATA[<p>这是angularjs 1x，前前后后也用了不少库和指令，整理了一下，分成四大类列出。有demo地址的，就直接连接到demo地址，其它的直接链到github托管库中。</p><p><strong>图片视频类</strong></p><ul><li><a href="http://passy.github.io/angular-masonry/" title="angular-maxonry" target="_blank" rel="external">angular-maxonry</a> 图片墙效果插件，可以将图片组织成类似于瀑布流的效果，依赖于jQuery、<a href="https://imagesloaded.desandro.com/" title="imageloaded" target="_blank" rel="external">imageloaded</a>和<a href="https://masonry.desandro.com/" title="Masonry" target="_blank" rel="external">Masonry</a></li><li>angular-deckgrid 另一个照片瀑布流解决方案</li><li><a href="https://github.com/alexk111/ngImgCrop" title="ngImgCrop" target="_blank" rel="external">ngImgCrop</a> 图片剪裁工具</li><li><a href="https://github.com/Wildhoney/ngVideo" title="ngVideo" target="_blank" rel="external">ngVideo</a> 播放器，直接播放指定地址的mp4，控制按钮美观度远甩朝内99.99%的视频站</li><li><a href="https://github.com/stiekel/angular-image-404" title="angular-image-404" target="_blank" rel="external">angular-image-404</a> 当 img 元素的图片无法正常获取时，使用这个指令可以显示占位图片，可以自定义占位图，也可以使用默认的占位图</li></ul><p><strong>输入控件类</strong></p><ul><li><a href="https://github.com/fatlinesofcode/ngDraggable" title="ngDraggable" target="_blank" rel="external">ngDraggable</a> 控制元素拖动的控件，<a href="http://htmlpreview.github.io/?https://github.com/fatlinesofcode/ngDraggable/blob/master/example.html" title="Demo" target="_blank" rel="external">Demo</a></li><li><a href="https://github.com/angular-ui/ui-sortable/" title="ui-sortable" target="_blank" rel="external">ui-sortable</a> 以拖动的方式调整数组中元素的索引和位置，依赖 jQuery 和 jQuery-ui。<a href="http://angular-ui.github.io/ui-sortable/" title="Demo" target="_blank" rel="external">Demo</a></li><li><a href="https://github.com/wpalahnuk/ngAutocomplete" title="ngAutocomplete" target="_blank" rel="external">ngAutocomplete</a> 喜闻乐见的自动补完</li><li><a href="http://textangular.com/" title="textAngular" target="_blank" rel="external">textAngular</a> 文本编辑器，更简洁，更漂亮</li><li><a href="http://mbenford.github.io/ngTagsInput/" title="ngTagsInput" target="_blank" rel="external">ngTagsInput</a> 以标签的方式来组织输入</li><li><a href="http://prajwalkman.github.io/angular-slider/" title="Angular-slider" target="_blank" rel="external">Angular-slider</a> 以拖动方式输入值的控件</li><li><a href="http://itslenny.github.io/angular-slidezilla/" title="Angular Slidezilla" target="_blank" rel="external">Angular Slidezilla</a> 与Angular-slider功能一样，只不过设计风格不一样</li><li><a href="https://vitalets.github.io/checklist-model/" title="Checklist-model" target="_blank" rel="external">Checklist-model</a> AngularJS 多选框输入的值处理得并不好，通过这个指令，可以方便的将多选框的值直接组织成数组</li></ul><p><strong>文本编辑器</strong></p><ul><li><a href="https://github.com/fraywing/textAngular" title="textAngular" target="_blank" rel="external">textAngular</a> 在 Github 中排名第一的 HTML 编辑器， <a href="http://textangular.com/" title="Demo" target="_blank" rel="external">Demo</a>（需FQ）</li><li><a href="https://www.froala.com/wysiwyg-editor" title="Angular Froala" target="_blank" rel="external">Angular Froala</a> 非常好用的另外一个 HTML 编辑器，而且支持 inline 编辑，比 textAngular 漂亮，Github<br>angular-umeditor 百度umeditor的AngularJS扩展，umeditor从界面上讲并不够现代化，但却总有人喜欢它</li></ul><p><strong>界面类</strong></p><ul><li><a href="https://angular-ui.github.io/bootstrap/" title="ui-bootstrap" target="_blank" rel="external">ui-bootstrap</a> 官方扩展，在AngularJS中方便的以指令的方式使用Bootstrap</li><li><a href="http://angular-ui.github.io/ui-map/" title="ui-map" target="_blank" rel="external">ui-map</a> 用于在页面中集成Google Maps</li><li>NG-Grid 官方提供的表格插件，支持表格的主题、排序、直接编辑、多行选择等操作，而且使用非常简单，只需要一行HTML代码，但是，比较难看，适合于不讲究外观但要求功能强大的场合，像后台工具、管理系统之类</li><li><a href="http://samu.github.io/angular-table/examples/examples.html" title="angular-table" target="_blank" rel="external">angular-table</a> 第三方表格工具，适合于需要对表格进行高度定制的场合</li><li><a href="http://ng-table.com/#/" title="ng-table" target="_blank" rel="external">ng-table</a> 在易用性和外观上对上面两个进行折衷的解</li></ul><p><strong>决方案</strong></p><ul><li><a href="https://angular-ui.github.io/" title="AngularUI" target="_blank" rel="external">AngularUI</a> 上面的ui-bootstrap、ui-map就是它的一部分，官方提供的常用扩展集，除了这两个，还有ui-router、ui-select等，注意，它使用的是Bootstrap 2.x</li><li><a href="http://adaptv.github.io/adapt-strap/" title="Adapt-Strap" target="_blank" rel="external">Adapt-Strap</a> 第三方Bootstrap插件，而且是基于扁平化的Bootstrap 3，更美观</li><li><a href="https://gabiaxel.github.io/ng-polymer-elements/" title="ng-polymer-elements Polymer" target="_blank" rel="external">ng-polymer-elements Polymer</a>风格的AngularJS指令，Material Design设计，值得尝试</li><li><a href="http://chieffancypants.github.io/angular-loading-bar/" title="Angular Loading Bar" target="_blank" rel="external">Angular Loading Bar</a> 可用于在页面顶部增加一个漂亮的进度条</li><li><a href="http://ngmodules.org/modules/angular-busy" title="angular-busy" target="_blank" rel="external">angular-busy</a> 与Angular Loading Bar有点类似，主要用于处理$http通信时候的动画</li><li><a href="http://ngmodules.org/modules/ngInfiniteScroll" title="ngInfiniteScroll" target="_blank" rel="external">ngInfiniteScroll</a> 从名字可以看出来，它是一个用于组织瀑布流和时间线的扩展</li><li><a href="https://github.com/iameugenejo/ngScrollTo" title="ngScrollTo" target="_blank" rel="external">ngScrollTo</a> 页内滚动工具，可以将页面滚动到指定id的元素位置</li><li><a href="http://likeastore.github.io/ngDialog/" title="ngDialog" target="_blank" rel="external">ngDialog</a> 比Bootstrap更简单，更好用，更漂亮的网页对话框</li><li><a href="https://github.com/eu81273/angular.treeview" title="Angular Treeview" target="_blank" rel="external">Angular Treeview</a> 树状目录组织扩展，使用相当方便，而且不依赖于jQuery</li><li><a href="https://github.com/Marcorinck/angular-growl" title="angular-growl" target="_blank" rel="external">angular-growl</a> 用于在页面上显示警告框，可以设置显示时间，还可以直接显示$http中收到的警告</li><li><a href="http://sparkalow.github.io/angular-truncate/" title="angular-truncate" target="_blank" rel="external">angular-truncate</a> 当文字过多过长时，显示部分文字的插件，可以按文字总长度来控制，也可以按单词数量来控制</li><li><a href="https://github.com/sebasrodriguez/angular-fallback-image" title="angular-fallback-image" target="_blank" rel="external">angular-fallback-image</a> 当你的图片地址返回的是 404 的时候，使用这个插件可以将其替换为另外的占位图</li></ul><p><strong>其它工具类</strong></p><ul><li><a href="https://angular-translate.github.io/" title="angular-translate" target="_blank" rel="external">angular-translate</a> AngularJS的i18n扩展</li><li><a href="https://satellizer.herokuapp.com/" title="Satellizer" target="_blank" rel="external">Satellizer</a> 可以方便的在AngularJS中集成第三方账号登陆，支持国际主流社交网站账号，支持协议有OAuth 1.0/2.0</li><li><a href="https://github.com/gsklee/ngStorage" title="ngStorage" target="_blank" rel="external">ngStorage</a> 本在存储插件，用于处理localStorage和sessionStorage</li><li><a href="https://github.com/asafdav/ng-csv" title="ng-csv" target="_blank" rel="external">ng-csv</a> 导出csv的扩展</li><li><a href="https://github.com/tadeuszwojcik/angular-once" title="angular-once" target="_blank" rel="external">angular-once</a> 双向绑定虽然方便，但如果数据太多，会造成一些性能问题。angular-once的解决方案是，对于不涉及到修改的数据，不要使用双向绑定，而是使用angular-once提供的once-text、once-src等等。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是angularjs 1x，前前后后也用了不少库和指令，整理了一下，分成四大类列出。有demo地址的，就直接连接到demo地址，其它的直接链到github托管库中。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;图片视频类&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http
    
    </summary>
    
      <category term="AngularJS_01" scheme="http://xinliu.vip/categories/AngularJS-01/"/>
    
    
      <category term="AngularJS_01" scheme="http://xinliu.vip/tags/AngularJS-01/"/>
    
  </entry>
  
  <entry>
    <title>设置popupWindow显示位置以及点击其他位置取消弹出</title>
    <link href="http://xinliu.vip/xinliu/9f0bd99/"/>
    <id>http://xinliu.vip/xinliu/9f0bd99/</id>
    <published>2018-01-18T06:35:55.000Z</published>
    <updated>2018-03-30T14:45:29.766Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、什么是WebView"><a href="#一、什么是WebView" class="headerlink" title="一、什么是WebView"></a><strong>一、什么是WebView</strong></h3><p>Android 中的WebView（网络视图），可以这么去理解，就是一个内置的浏览器。它使用了WebKit渲染引擎加载显示网页。</p><h3 id="二、WebView的使用方式"><a href="#二、WebView的使用方式" class="headerlink" title="二、WebView的使用方式"></a><strong>二、WebView的使用方式</strong></h3><h4 id="1-实例化一个WebView"><a href="#1-实例化一个WebView" class="headerlink" title="1. 实例化一个WebView"></a>1. 实例化一个WebView</h4><h4 id="2-调用WebView的loadUrl-方法，设置WevView要显示的网页："><a href="#2-调用WebView的loadUrl-方法，设置WevView要显示的网页：" class="headerlink" title="2. 调用WebView的loadUrl()方法，设置WevView要显示的网页："></a>2. 调用WebView的loadUrl()方法，设置WevView要显示的网页：</h4><p>互联网用：webView.loadUrl(“<a href="http://www.baidu.com" target="_blank" rel="external">http://www.baidu.com</a>“);<br>本地文件用：webView.loadUrl(“file:///android_asset/XX.html”); 此本地文件存放于assets 文件中</p><h4 id="3-需要在AndroidManifest-xml文件中添加权限，否则会出现Web-page-not-available错误"><a href="#3-需要在AndroidManifest-xml文件中添加权限，否则会出现Web-page-not-available错误" class="headerlink" title="3. 需要在AndroidManifest.xml文件中添加权限，否则会出现Web page not available错误"></a>3. 需要在AndroidManifest.xml文件中添加权限，否则会出现Web page not available错误</h4><pre><code>&lt;uses-permission android:name=&quot;android.permission.INTERNET&quot; &gt;&lt;/uses&gt; 
</code></pre><p>下面是简单的示例代码：</p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">import android.app.Activity;    </div><div class="line">   import android.os.Bundle;    </div><div class="line">   import android.view.KeyEvent;    </div><div class="line">   import android.webkit.WebView;    </div><div class="line">      </div><div class="line">   public class MainActivity extends Activity &#123;    </div><div class="line">       private WebView webview;    </div><div class="line">       @Override   </div><div class="line">       public void onCreate(Bundle savedInstanceState) &#123;    </div><div class="line">           super.onCreate(savedInstanceState);    </div><div class="line">           //实例化WebView对象    </div><div class="line">           webview = new WebView(this);    </div><div class="line">           //加载需要显示的网页    </div><div class="line">           webview.loadUrl("http://www.baidu.com/");    </div><div class="line">           //将Web视图作为activity的视图    </div><div class="line">           setContentView(webview);    </div><div class="line">       &#125;    </div><div class="line">         </div><div class="line">   &#125;</div></pre></td></tr></table></figure><h4 id="4-不同的使用方法"><a href="#4-不同的使用方法" class="headerlink" title="4. 不同的使用方法"></a>4. 不同的使用方法</h4><p>上面的示例代码，我们讲解了直接webview视图直接作为activity的视图，在实际项目当中，我们经常是需要将webview作为一部分嵌入到activity的视图中的。如果想这么做，我们需要先在布局文件中声明WebView。<br>下面是示例代码：</p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">import android.app.Activity;    </div><div class="line">import android.os.Bundle;    </div><div class="line">import android.view.KeyEvent;    </div><div class="line">import android.webkit.WebView;    </div><div class="line">import android.webkit.WebViewClient;    </div><div class="line">   </div><div class="line">public class MainActivity extends Activity &#123;    </div><div class="line">    private WebView webview;    </div><div class="line">    @Override   </div><div class="line">    public void onCreate(Bundle savedInstanceState) &#123;    </div><div class="line">        super.onCreate(savedInstanceState);    </div><div class="line">        setContentView(R.layout.main);    </div><div class="line">        webview = (WebView) findViewById(R.id.webview);    </div><div class="line">        //加载需要显示的网页    </div><div class="line">        webview.loadUrl("http://www.baidu.com/");    </div><div class="line">    &#125;    </div><div class="line">     </div><div class="line">&#125;</div></pre></td></tr></table></figure><p>xml示例代码：</p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;   </div><div class="line">&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"   </div><div class="line">    android:orientation="vertical"   </div><div class="line">    android:layout_width="fill_parent"   </div><div class="line">    android:layout_height="fill_parent"   </div><div class="line">    &gt;      </div><div class="line">    &lt;WebView     </div><div class="line">        android:id="@+id/webview"   </div><div class="line">        android:layout_width="fill_parent"   </div><div class="line">        android:layout_height="fill_parent"   </div><div class="line">        /&gt;   </div><div class="line">&lt;/LinearLayout&gt;</div></pre></td></tr></table></figure><h4 id="5-webview的关闭"><a href="#5-webview的关闭" class="headerlink" title="5. webview的关闭"></a>5. webview的关闭</h4><p>当我们在使用有声音播放的webview，我们如果直接finish掉webview做依赖的activity，我们会发现webview的声音播放还未停止，这是因为activity虽然被finish掉了，但是webview实际并未被销毁掉。<br>我们需要调用webview的destroy方法销毁webview。<br>下面是示例代码：</p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">//webview的销毁  </div><div class="line">public void stop() &#123;  </div><div class="line">        web_view.destroy();  </div><div class="line">        ((Activity) getContext()).finish();  </div><div class="line">    &#125;</div></pre></td></tr></table></figure><h3 id="三、webview的参数设置"><a href="#三、webview的参数设置" class="headerlink" title="三、webview的参数设置"></a><strong>三、webview的参数设置</strong></h3><p>webview的参数有很多，下面我们直接上一段示例代码进行说明:</p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">//设置支持js代码  </div><div class="line">        web_view.getSettings().setJavaScriptEnabled(true);  </div><div class="line">        //设置支持插件  </div><div class="line">        web_view.getSettings().setPluginState(PluginState.ON);  </div><div class="line">        //设置允许访问文件数据  </div><div class="line">        web_view.getSettings().setAllowFileAccess(true);  </div><div class="line">        //设置是否支持插件  </div><div class="line">        web_view.getSettings().setPluginsEnabled(true);  </div><div class="line">        //支持缩放  </div><div class="line">        web_view.getSettings().setSupportZoom(true);  </div><div class="line">        //支持缓存  </div><div class="line">        web_view.getSettings().setAppCacheEnabled(true);  </div><div class="line">        //设置缓存模式  </div><div class="line">        web_view.getSettings().setCacheMode(WebSettings.LOAD_CACHE_ELSE_NETWORK);  </div><div class="line">        //设置此属性，可任意比例缩放  </div><div class="line">        web_view.getSettings().setUseWideViewPort(true);  </div><div class="line">        web_view.getSettings().setLoadWithOverviewMode(true);</div></pre></td></tr></table></figure><h3 id="四、WebViewClient的使用"><a href="#四、WebViewClient的使用" class="headerlink" title="四、WebViewClient的使用"></a><strong>四、WebViewClient的使用</strong></h3><p>WebViewClient主要帮助WebView处理各种通知、请求事件的。比如：<br>onLoadResource<br>onPageStart<br>onPageFinish<br>onReceiveError<br>onReceivedHttpAuthRequest<br>例如以下示例代码：</p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">webView.setWebViewClient(new WebViewClient()&#123;  </div><div class="line">  </div><div class="line">  </div><div class="line">                        @Override  </div><div class="line">                        public void onLoadResource(WebView view, String url) &#123;  </div><div class="line">                                super.onLoadResource(view, url);  </div><div class="line">                                Log.i(TAG, "onLoadResource: ");  </div><div class="line">                        &#125;  </div><div class="line">  </div><div class="line">  </div><div class="line">                        @Override  </div><div class="line">                        public void onPageFinished(WebView view, String url) &#123;  </div><div class="line">                                super.onPageFinished(view, url);  </div><div class="line">                                Log.i(TAG, "onPageFinished: ");  </div><div class="line">                        &#125;  </div><div class="line">  </div><div class="line">  </div><div class="line">                        @Override  </div><div class="line">                        public void onPageStarted(WebView view, String url, Bitmap favicon) &#123;  </div><div class="line">                                super.onPageStarted(view, url, favicon);  </div><div class="line">                                Log.i(TAG, "onPageStarted: ");  </div><div class="line">                        &#125;  </div><div class="line">  </div><div class="line">  </div><div class="line">                        @Override  </div><div class="line">                        public void onReceivedHttpAuthRequest(WebView view,  </div><div class="line">                                        HttpAuthHandler handler, String host, String realm) &#123;  </div><div class="line">                                super.onReceivedHttpAuthRequest(view, handler, host, realm);  </div><div class="line">                                Log.i(TAG, "onReceivedHttpAuthRequest: ");  </div><div class="line">                        &#125;  </div><div class="line">  </div><div class="line">  </div><div class="line">                        @Override  </div><div class="line">                        public void onReceivedSslError(WebView view,  </div><div class="line">                                        SslErrorHandler handler, SslError error) &#123;  </div><div class="line">                                super.onReceivedSslError(view, handler, error);  </div><div class="line">                                Log.i(TAG, "onReceivedSslError: ");  </div><div class="line">                        &#125;  </div><div class="line">  </div><div class="line">  </div><div class="line">                        @Override  </div><div class="line">                       public boolean shouldOverrideUrlLoading(WebView view, String url) &#123;  </div><div class="line">                                Log.i(TAG, "shouldOverrideUrlLoading: ");  </div><div class="line">                               return super.shouldOverrideUrlLoading(view, url);  </div><div class="line">                       &#125;  </div><div class="line">  </div><div class="line">  </div><div class="line">                        @Override  </div><div class="line">                        public void onReceivedError(WebView view, int errorCode,  </div><div class="line">                                        String description, String failingUrl) &#123;  </div><div class="line">                                super.onReceivedError(view, errorCode, description, failingUrl);  </div><div class="line">                                Log.i(TAG, "onReceivedError: ");  </div><div class="line">                                Log.i(TAG, "errorCode: "+errorCode);  </div><div class="line">                                Log.i(TAG, "description: "+description);  </div><div class="line">                                Log.i(TAG, "failingUrl: "+failingUrl);  </div><div class="line">                        &#125;  </div><div class="line">  </div><div class="line">  </div><div class="line">                        @Override  </div><div class="line">                        @Deprecated  </div><div class="line">                        public void onTooManyRedirects(WebView view, Message cancelMsg,  </div><div class="line">                                        Message continueMsg) &#123;  </div><div class="line">                                super.onTooManyRedirects(view, cancelMsg, continueMsg);  </div><div class="line">                                Log.i(TAG, "onTooManyRedirects");  </div><div class="line">                        &#125;  </div><div class="line">                          </div><div class="line">                          </div><div class="line">                          </div><div class="line">                &#125;);</div></pre></td></tr></table></figure><h3 id="五、WebChromeClient的使用"><a href="#五、WebChromeClient的使用" class="headerlink" title="五、WebChromeClient的使用"></a><strong>五、WebChromeClient的使用</strong></h3><p>WebChromeClient主要辅助WebView处理Javascript的对话框、网站图标、网站title、加载进度等比如<br>onCloseWindow(关闭WebView)<br>onCreateWindow()<br>onJsAlert (WebView上alert无效，需要定制WebChromeClient处理弹出)<br>onJsPrompt<br>onJsConfirm<br>onProgressChanged<br>onReceivedIcon<br>onReceivedTitle<br>例如以下示例代码：</p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">webView.setWebChromeClient(new WebChromeClient()&#123;  </div><div class="line">  </div><div class="line">  </div><div class="line">                       @Override  </div><div class="line">                       public void getVisitedHistory(ValueCallback&lt;String[]&gt; callback) &#123;  </div><div class="line">                               super.getVisitedHistory(callback);  </div><div class="line">                               Log.i(TAG, "getVisitedHistory");  </div><div class="line">                       &#125;  </div><div class="line">  </div><div class="line">  </div><div class="line">                       @Override  </div><div class="line">                       public void onCloseWindow(WebView window) &#123;  </div><div class="line">                               super.onCloseWindow(window);  </div><div class="line">                               Log.i(TAG, "onCloseWindow");  </div><div class="line">                       &#125;  </div><div class="line">  </div><div class="line">  </div><div class="line">                       @Override  </div><div class="line">                       public boolean onCreateWindow(WebView view, boolean isDialog,  </div><div class="line">                                       boolean isUserGesture, Message resultMsg) &#123;  </div><div class="line">                               Log.i(TAG, "onCreateWindow");  </div><div class="line">                               return super.onCreateWindow(view, isDialog, isUserGesture, resultMsg);  </div><div class="line">                       &#125;  </div><div class="line">  </div><div class="line">  </div><div class="line">                       @Override  </div><div class="line">                       @Deprecated  </div><div class="line">                       public void onExceededDatabaseQuota(String url,  </div><div class="line">                                       String databaseIdentifier, long quota,  </div><div class="line">                                       long estimatedDatabaseSize, long totalQuota,  </div><div class="line">                                       QuotaUpdater quotaUpdater) &#123;  </div><div class="line">                               super.onExceededDatabaseQuota(url, databaseIdentifier, quota,  </div><div class="line">                                               estimatedDatabaseSize, totalQuota, quotaUpdater);  </div><div class="line">                               Log.i(TAG, "onExceededDatabaseQuota");  </div><div class="line">                       &#125;  </div><div class="line">  </div><div class="line">  </div><div class="line">                       @Override  </div><div class="line">                       public void onProgressChanged(WebView view, int newProgress) &#123;  </div><div class="line">                               super.onProgressChanged(view, newProgress);  </div><div class="line">                               Log.i(TAG, "onProgressChanged newProgress "+newProgress);  </div><div class="line">                       &#125;  </div><div class="line">  </div><div class="line">  </div><div class="line">                       @Override  </div><div class="line">                       public void onReceivedIcon(WebView view, Bitmap icon) &#123;  </div><div class="line">                               super.onReceivedIcon(view, icon);  </div><div class="line">                               Log.i(TAG, "gonReceivedIcon");  </div><div class="line">                       &#125;  </div><div class="line">  </div><div class="line">  </div><div class="line">                       @Override  </div><div class="line">                       public void onReceivedTitle(WebView view, String title) &#123;  </div><div class="line">                               super.onReceivedTitle(view, title);  </div><div class="line">                               Log.i(TAG, "onReceivedTitle");  </div><div class="line">                       &#125;  </div><div class="line">  </div><div class="line">  </div><div class="line">                       @Override  </div><div class="line">                       public void onRequestFocus(WebView view) &#123;  </div><div class="line">                               super.onRequestFocus(view);  </div><div class="line">                               Log.i(TAG, "onRequestFocus");  </div><div class="line">                       &#125;  </div><div class="line">               &#125;);</div></pre></td></tr></table></figure><h3 id="六、一些使用的小技巧"><a href="#六、一些使用的小技巧" class="headerlink" title="六、一些使用的小技巧"></a><strong>六、一些使用的小技巧</strong></h3><h4 id="1-打开Android本地文件。"><a href="#1-打开Android本地文件。" class="headerlink" title="1.打开Android本地文件。"></a>1.打开Android本地文件。</h4><p>当网页html文件中有使用到input type=“file”的时候，Android的webview默认是不支持这个标签的，那需要怎么做呢。<br>这个时候需要重写webview的WebChromeClient，以下是示例代码：</p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">webView.setWebChromeClient(new WebChromeClient() &#123;  </div><div class="line">            public void openFileChooser(ValueCallback&lt;Uri&gt; uploadMsg) &#123;  </div><div class="line">  </div><div class="line">  </div><div class="line">                mUploadMessage = uploadMsg;  </div><div class="line">                Intent i = new Intent(Intent.ACTION_GET_CONTENT);  </div><div class="line">                i.addCategory(Intent.CATEGORY_OPENABLE);  </div><div class="line">                i.setType("image/*");  </div><div class="line">                ChangeImgActivity.this.startActivityForResult(  </div><div class="line">                        Intent.createChooser(i, "File Chooser"),  </div><div class="line">                        FILECHOOSER_RESULTCODE);  </div><div class="line">  </div><div class="line">  </div><div class="line">            &#125;  </div><div class="line">  </div><div class="line">  </div><div class="line">            public void openFileChooser(ValueCallback uploadMsg,  </div><div class="line">                    String acceptType) &#123;  </div><div class="line">                mUploadMessage = uploadMsg;  </div><div class="line">                Intent i = new Intent(Intent.ACTION_GET_CONTENT);  </div><div class="line">                i.addCategory(Intent.CATEGORY_OPENABLE);  </div><div class="line">                i.setType("*/*");  </div><div class="line">                ChangeImgActivity.this.startActivityForResult(  </div><div class="line">                        Intent.createChooser(i, "File Browser"),  </div><div class="line">                        FILECHOOSER_RESULTCODE);  </div><div class="line">            &#125;  </div><div class="line">  </div><div class="line">  </div><div class="line">            public void openFileChooser(ValueCallback&lt;Uri&gt; uploadMsg,  </div><div class="line">                    String acceptType, String capture) &#123;  </div><div class="line">                mUploadMessage = uploadMsg;  </div><div class="line">                Intent i = new Intent(Intent.ACTION_GET_CONTENT);  </div><div class="line">                i.addCategory(Intent.CATEGORY_OPENABLE);  </div><div class="line">                i.setType("image/*");  </div><div class="line">                ChangeImgActivity.this.startActivityForResult(  </div><div class="line">                        Intent.createChooser(i, "File Chooser"),  </div><div class="line">                        ChangeImgActivity.FILECHOOSER_RESULTCODE);  </div><div class="line">  </div><div class="line">  </div><div class="line">            &#125;  </div><div class="line">  </div><div class="line">  </div><div class="line">        &#125;);</div></pre></td></tr></table></figure><h4 id="2-浏览网页的回退"><a href="#2-浏览网页的回退" class="headerlink" title="2.浏览网页的回退"></a>2.浏览网页的回退</h4><p>当我们在使用一些浏览器浏览网页的时候，经常会遇到这种功能，点击Android的返回键，就会产生网页回退，这个功能应该如何实现呢。<br>以下是示例代码：</p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">webView.setOnKeyListener(new View.OnKeyListener() &#123;  </div><div class="line">            @Override  </div><div class="line">            public boolean onKey(View v, int keyCode, KeyEvent event) &#123;  </div><div class="line">                if (event.getAction() == KeyEvent.ACTION_DOWN) &#123;  </div><div class="line">                    if (keyCode == KeyEvent.KEYCODE_BACK &amp;&amp; webView.canGoBack()) &#123;  </div><div class="line">                        webView.goBack();  </div><div class="line">                        return true;  </div><div class="line">                    &#125;  </div><div class="line">                &#125;  </div><div class="line">                return false;  </div><div class="line">            &#125;  </div><div class="line">        &#125;);</div></pre></td></tr></table></figure><h4 id="3-Android中Java代码和网页中js代码的交互"><a href="#3-Android中Java代码和网页中js代码的交互" class="headerlink" title="3.Android中Java代码和网页中js代码的交互"></a>3.Android中Java代码和网页中js代码的交互</h4><p>在开发中，有时候需要使用Java代码去调用网页中的js代码，或者js代码要调用Java的代码。要实现此功能，首先要设置webview的参数。<br>Java调用js代码较为简单，直接使用loadUrl方法即可。</p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">flash_view.loadUrl("javascript:Play()");</div></pre></td></tr></table></figure><p>js代码回调Java代码较为复杂一点。Java 代码：</p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">//设置支持js代码</div><div class="line">web_view.getSettings().setJavaScriptEnabled(true);  </div><div class="line">//设置js代码的回调  </div><div class="line">web_view.addJavascriptInterface(new CallJava(), "CallJava");  </div><div class="line">//js代码的回调  </div><div class="line">private final class CallJava&#123;  </div><div class="line">        public void consoleFlashProgress(float progressSize, int total)&#123;  </div><div class="line">            //设置播放进度条  </div><div class="line">            showFlashProgress(progressSize, total);  </div><div class="line">        &#125;  </div><div class="line">    &#125;</div></pre></td></tr></table></figure><p>JS 代码：<br></p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">//动态显示播放影片的当前桢/总桢数(进度条显示)</div><div class="line">function showcount()&#123;  </div><div class="line">                total = movie.TotalFrames();  </div><div class="line">                frame_number = movie.CurrentFrame();  </div><div class="line">                frame_number++;  </div><div class="line">                var progressSize = 500*(frame_number/total);  </div><div class="line">                CallJava.consoleFlashProgress(progressSize,total/12);  </div><div class="line">            &#125;</div></pre></td></tr></table></figure><p></p><p>注：一下代码很大一部分摘抄自网络，在此感谢各位代码提供者。作者只是做了整理和总结，希望能帮到各位开发者</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一、什么是WebView&quot;&gt;&lt;a href=&quot;#一、什么是WebView&quot; class=&quot;headerlink&quot; title=&quot;一、什么是WebView&quot;&gt;&lt;/a&gt;&lt;strong&gt;一、什么是WebView&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;Android 中的Web
    
    </summary>
    
      <category term="Android" scheme="http://xinliu.vip/categories/Android/"/>
    
    
      <category term="Android" scheme="http://xinliu.vip/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Ionic检测页面生命周期的方法</title>
    <link href="http://xinliu.vip/xinliu/3b057f96/"/>
    <id>http://xinliu.vip/xinliu/3b057f96/</id>
    <published>2018-01-18T06:35:55.000Z</published>
    <updated>2018-03-30T14:45:29.764Z</updated>
    
    <content type="html"><![CDATA[<h3 id="ion-view"><a href="#ion-view" class="headerlink" title="ion-view"></a><strong>ion-view</strong></h3><p>Child of <a href="https://ionicframework.com/docs/v1/api/directive/ionNavView/" title="ionNavView" target="_blank" rel="external">ionNavView</a><br>A container for view content and any navigational and header bar information. When a view enters and exits its parent <a href="https://ionicframework.com/docs/v1/api/directive/ionNavView/" title="ionNavView" target="_blank" rel="external">ionNavView</a>, the view also emits view information, such as its title, whether the back button should be displayed or not, whether the corresponding <a href="https://ionicframework.com/docs/v1/api/directive/ionNavBar/" title="ionNavBar" target="_blank" rel="external">ionNavBar</a> should be displayed or not, which transition the view should use to animate, and which direction to animate.</p><p>Views are cached to improve performance. When a view is navigated away from, its element is left in the DOM, and its scope is disconnected from the $watch cycle. When navigating to a view that is already cached, its scope is reconnected, and the existing element, which was left in the DOM, becomes active again. This can be disabled, or the maximum number of cached views changed in <a href="https://ionicframework.com/docs/v1/api/provider/$ionicConfigProvider/" title="$ionicConfigProvider" target="_blank" rel="external">$ionicConfigProvider</a>, in the view’s $state configuration, or as an attribute on the view itself (see below).</p><h3 id="USAGE"><a href="#USAGE" class="headerlink" title="USAGE"></a>USAGE</h3><p>Below is an example where our page will load with a ionNavBar containing “My Page” as the title.</p><pre><code>&lt;ion-nav-bar&gt;&lt;/ion-nav-bar&gt;
&lt;ion-nav-view&gt;
  &lt;ion-view view-title=&quot;My Page&quot;&gt;
    &lt;ion-content&gt;
      Hello!
    &lt;/ion-content&gt;
  &lt;/ion-view&gt;
&lt;/ion-nav-view&gt;
</code></pre><h3 id="VIEW-LIFECYCLE-AND-EVENTS"><a href="#VIEW-LIFECYCLE-AND-EVENTS" class="headerlink" title="VIEW LIFECYCLE AND EVENTS"></a>VIEW LIFECYCLE AND EVENTS</h3><p>Views can be cached, which means controllers normally only load once, which may affect your controller logic. To know when a view has entered or left, events have been added that are emitted from the view’s scope. These events also contain data about the view, such as the title and whether the back button should show. Also contained is transition data, such as the transition type and direction that will be or was used.</p><p>Life cycle events are emitted upwards from the transitioning view’s scope. In some cases, it is desirable for a child/nested view to be notified of the event. For this use case, $ionicParentView life cycle events are broadcast downwards.</p><table><thead><tr><th style="text-align:left"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:left">$ionicView.loaded</td><td style="text-align:left">The view has loaded. This event only happens once per view being created and added to the DOM.If a view leaves but is cached, then this event will not fire again on a subsequent viewing.The loaded event is good place to put your setup code for the view; however,it is not the recommended event to listen to when a view becomes active.</td></tr><tr><td style="text-align:left">$ionicView.enter</td><td style="text-align:left">The view has fully entered and is now the active view.This event will fire, whether it was the first load or a cached view.</td></tr><tr><td style="text-align:left">$ionicView.leave</td><td style="text-align:left">The view has finished leaving and is no longer the active view.This event will fire, whether it is cached or destroyed.</td></tr><tr><td style="text-align:left">$ionicView.beforeEnter</td><td style="text-align:left">The view is about to enter and become the active view.</td></tr><tr><td style="text-align:left">$ionicView.beforeLeave</td><td style="text-align:left">The view is about to leave and no longer be the active view.</td></tr><tr><td style="text-align:left">$ionicView.afterEnter</td><td style="text-align:left">The view has fully entered and is now the active view.</td></tr><tr><td style="text-align:left">$ionicView.afterLeave</td><td style="text-align:left">The view has finished leaving and is no longer the active view.</td></tr><tr><td style="text-align:left">$ionicView.unloaded</td><td style="text-align:left">The view’s controller has been destroyed and its element has been removed from the DOM.</td></tr><tr><td style="text-align:left">$ionicParentView.enter</td><td style="text-align:left">The parent view has fully entered and is now the active view.This event will fire, whether it was the first load or a cached view.</td></tr><tr><td style="text-align:left">$ionicParentView.leave</td><td style="text-align:left">The parent view has finished leaving and is no longer the active view.This event will fire, whether it is cached or destroyed.</td></tr><tr><td style="text-align:left">$ionicParentView.beforeEnter</td><td style="text-align:left">The parent view is about to enter and become the active view.</td></tr><tr><td style="text-align:left">$ionicParentView.beforeLeave</td><td style="text-align:left">The parent view is about to leave and no longer be the active view.</td></tr><tr><td style="text-align:left">$ionicParentView.afterEnter</td><td style="text-align:left">The parent view has fully entered and is now the active view.</td></tr><tr><td style="text-align:left">$ionicParentView.afterLeave</td><td style="text-align:left">The parent view has finished leaving and is no longer the active view.</td></tr></tbody></table><h3 id="LifeCycle-Event-Usage"><a href="#LifeCycle-Event-Usage" class="headerlink" title="LifeCycle Event Usage"></a><strong>LifeCycle Event Usage</strong></h3><p>Below is an example of how to listen to life cycle events and access state parameter data</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">$scope.$on(<span class="string">"$ionicView.beforeEnter"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event, data</span>)</span>&#123;</div><div class="line">   <span class="comment">// handle event</span></div><div class="line">   <span class="built_in">console</span>.log(<span class="string">"State Params: "</span>, data.stateParams);</div><div class="line">&#125;);</div><div class="line"></div><div class="line">$scope.$on(<span class="string">"$ionicView.enter"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event, data</span>)</span>&#123;</div><div class="line">   <span class="comment">// handle event</span></div><div class="line">   <span class="built_in">console</span>.log(<span class="string">"State Params: "</span>, data.stateParams);</div><div class="line">&#125;);</div><div class="line"></div><div class="line">$scope.$on(<span class="string">"$ionicView.afterEnter"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event, data</span>)</span>&#123;</div><div class="line">   <span class="comment">// handle event</span></div><div class="line">   <span class="built_in">console</span>.log(<span class="string">"State Params: "</span>, data.stateParams);</div><div class="line">&#125;);</div></pre></td></tr></table></figure><p>Caching can be disabled and enabled in multiple ways. By default, Ionic will cache a maximum of 10 views. You can optionally choose to disable caching at either an individual view basis, or by global configuration. Please see the Caching section in <a href="https://ionicframework.com/docs/v1/api/directive/ionNavView/" title="ionNavView" target="_blank" rel="external">ionNavView</a> for more info.</p><h3 id="API"><a href="#API" class="headerlink" title="API"></a><strong>API</strong></h3><table><thead><tr><th style="text-align:left">Attr</th><th style="text-align:left">Type</th><th style="text-align:left">Details</th></tr></thead><tbody><tr><td style="text-align:left">view-title(optional)</td><td style="text-align:left">string</td><td style="text-align:left">A text-only title to display on the parent <a href="https://ionicframework.com/docs/v1/api/directive/ionNavBar/" title="ionNavBar" target="_blank" rel="external">ionNavBar</a>. For an HTML title, such as an image, see <a href="https://ionicframework.com/docs/v1/api/directive/ionNavTitle/" title="ionNavTitle" target="_blank" rel="external">ionNavTitle</a> instead.</td></tr><tr><td style="text-align:left">cache-view(optional)</td><td style="text-align:left">boolean</td><td style="text-align:left">If this view should be allowed to be cached or not. Please see the Caching section in <a href="https://ionicframework.com/docs/v1/api/directive/ionNavView/" title="ionNavView" target="_blank" rel="external">ionNavView</a> for more info.Default true</td></tr><tr><td style="text-align:left">can-swipe-back(optional)</td><td style="text-align:left">boolean</td><td style="text-align:left">If this view should be allowed to use the swipe to go back gesture or not.This does not enable the swipe to go back feature if it is not available for the platform it’s running from,or there isn’t a previous view. Default true</td></tr><tr><td style="text-align:left">hide-back-button(optional)</td><td style="text-align:left">boolean</td><td style="text-align:left">Whether to hide the back button on the parent <a href="https://ionicframework.com/docs/v1/api/directive/ionNavBar/" title="ionNavBar" target="_blank" rel="external">ionNavBar</a> by default.</td></tr><tr><td style="text-align:left">hide-nav-bar(optional)</td><td style="text-align:left">boolean</td><td style="text-align:left">Whether to hide the parent <a href="https://ionicframework.com/docs/v1/api/directive/ionNavBar/" title="ionNavBar" target="_blank" rel="external">ionNavBar</a> by default.</td></tr></tbody></table><p>参考 <a href="http://ionicframework.com/docs/api/directive/ionView/" title="http://ionicframework.com/docs/api/directive/ionView/" target="_blank" rel="external">http://ionicframework.com/docs/api/directive/ionView/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;ion-view&quot;&gt;&lt;a href=&quot;#ion-view&quot; class=&quot;headerlink&quot; title=&quot;ion-view&quot;&gt;&lt;/a&gt;&lt;strong&gt;ion-view&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;Child of &lt;a href=&quot;https://ion
    
    </summary>
    
      <category term="Ionic" scheme="http://xinliu.vip/categories/Ionic/"/>
    
    
      <category term="Ionic" scheme="http://xinliu.vip/tags/Ionic/"/>
    
  </entry>
  
  <entry>
    <title>Intent传递对象的两种方法</title>
    <link href="http://xinliu.vip/xinliu/f955b66/"/>
    <id>http://xinliu.vip/xinliu/f955b66/</id>
    <published>2018-01-18T06:35:55.000Z</published>
    <updated>2018-03-30T14:45:29.764Z</updated>
    
    <content type="html"><![CDATA[<p>Android为intent提供了两种传递对象参数类型的方法<br>分别需要使实体类实现Serializable接口、Parcelable接口<br>首先我们要知道，传递对象，需要先将对象序列化</p><h3 id="一、那么为什么要对象序列化"><a href="#一、那么为什么要对象序列化" class="headerlink" title="一、那么为什么要对象序列化"></a><strong>一、那么为什么要对象序列化</strong></h3><p>1、永久性保存对象，保存对象的字节序列到本地文件中；<br>2、用过序列化对象在网络中、进程间传递对象；</p><h3 id="二、序列化对象什么时候实现Serializable接口，什么时候实现Parcelable接口接口"><a href="#二、序列化对象什么时候实现Serializable接口，什么时候实现Parcelable接口接口" class="headerlink" title="二、序列化对象什么时候实现Serializable接口，什么时候实现Parcelable接口接口"></a><strong>二、序列化对象什么时候实现Serializable接口，什么时候实现Parcelable接口接口</strong></h3><p>1、Parcelable不能使用将数据存储在磁盘上，因为Parcelable在外界有变化的情况下不能很好的保存数据的持续性。<br>　 因此在这种情况下，建议使用Serializable<br>2、在使用内存的时候，Parcelable比Serializable性能高，所以推荐使用Parcelable类。<br>并且Serializable在序列化的时候会产生大量的临时变量，从而引起频繁的GC。</p><p>下面看下两种传递对象方式的使用方法</p><h3 id="三、实体类继承Serializable接口的方式"><a href="#三、实体类继承Serializable接口的方式" class="headerlink" title="三、实体类继承Serializable接口的方式"></a><strong>三、实体类继承Serializable接口的方式</strong></h3><p>1、第一步，将我们需要传送的对象所属的实体类实现Serializable接口，代码如下：</p><pre><code>package com.xqx.IntentDemo;
import java.io.Serializable;
 /**
  * People实体类，含有 name,sex,age三个属性  ，并实现类的封装
  */  
  public class People implements Serializable {
      private String name;
      private String sex;
      private int age;
      public String getName() {
          return name;
      }
      public String getSex() {
          return sex;
      }
      public int getAge() {
          return age;
      }
      public void setName(String name) {
          this.name = name;
      }
      public void setSex(String sex) {
          this.sex = sex;
      }
      public void setAge(int age) {
          this.age = age;
      }
  }
</code></pre><p>2、传递数据步骤，代码如下：</p><pre><code>//创建Intent对象
Intent intent = new Intent();
intent.setClass(MainActivity.this, NewActivity.class);
//创建实体类
People people = new People();
people.setName(&quot;Mark&quot;);
people.setSex(&quot;boy&quot;);
people.setAge(20);
//添加传送数据
intent.putExtra(&quot;people&quot;, people);
startActivity(intent);
</code></pre><p>3、接收数据，代码如下：</p><pre><code>Intent intent = getIntent();
       People people = (People) intent.getSerializableExtra(&quot;people&quot;);
       Log.i(&quot;DATA_SHOW&quot;,&quot;name--&gt;&quot;+people.getName()+&quot;,sex--&gt;&quot;+people.getSex()+&quot;,age--&gt;&quot;+people.getAge());
</code></pre><p>4、Log打印，代码如下：</p><pre><code>15794-15794/? I/DATA_SHOW﹕ name--&gt;Mark,sex--&gt;boy,age--&gt;20
</code></pre><h3 id="二、实体类继承Parcelable接口的方式"><a href="#二、实体类继承Parcelable接口的方式" class="headerlink" title="二、实体类继承Parcelable接口的方式"></a><strong>二、实体类继承Parcelable接口的方式</strong></h3><pre><code>public class Student implements Parcelable {}
</code></pre><p>重写接口的两个方法：</p><pre><code>@Override
    public int describeContents() {
        return 0;
    }

    // 将对象的需要传递的属性 以 Parcel parcel.writXxx的形式写出，具体看属性的类型
    @Override
    public void writeToParcel(Parcel parcel, int i) {
        parcel.writeString(name);
        parcel.writeString(sex);
        parcel.writeInt(age);
    }
</code></pre><p>添加一个常量CREATOR（名字大小必须固定），该常量必须实现Parcelable的内部接口：Parcelable.Creator，并实现该接口中的两个方法：</p><pre><code>public static final Parcelable.Creator&lt;Student&gt; CREATOR = new Creator&lt;Student&gt;() {

        @Override
        public Student createFromParcel(Parcel source) {
            Student student = new Student();
            student.name = source.readString();
            student.sex = source.readString();
            student.age = source.readInt();
            return student;
        }

        @Override
        public Student[] newArray(int size) {
            return new Student[size];
        }
    };
</code></pre><p>2、传递数据</p><pre><code>Intent intent = new Intent();
intent.setClass(MainActivity.this, NewActivity.class);
Student student = new Student();
student.setName(&quot;Alice&quot;);
student.setSex(&quot;girl&quot;);
student.setAge(19);
intent.putExtra(&quot;student&quot;,student);
startActivity(intent);
</code></pre><p>3、接收数据</p><pre><code>　　　 Intent intent = getIntent();
Student student = intent.getParcelableExtra(&quot;student&quot;);
Log.i(&quot;DATA_SHOW&quot;,&quot;name--&gt;&quot;+student.getName()+&quot;,sex--&gt;&quot;+student.getSex()+&quot;,age--&gt;&quot;+student.getAge());
</code></pre><p>4、Log日志</p><pre><code>1280-1280/? I/DATA_SHOW﹕ name--&gt;Alice,sex--&gt;girl,age--&gt;19
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Android为intent提供了两种传递对象参数类型的方法&lt;br&gt;分别需要使实体类实现Serializable接口、Parcelable接口&lt;br&gt;首先我们要知道，传递对象，需要先将对象序列化&lt;/p&gt;&lt;h3 id=&quot;一、那么为什么要对象序列化&quot;&gt;&lt;a href=&quot;#一、那
    
    </summary>
    
      <category term="Android" scheme="http://xinliu.vip/categories/Android/"/>
    
    
      <category term="Android" scheme="http://xinliu.vip/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Hexo教程(三)-hexo博客同时托管到github和coding</title>
    <link href="http://xinliu.vip/xinliu/3123977d/"/>
    <id>http://xinliu.vip/xinliu/3123977d/</id>
    <published>2017-08-06T14:56:10.000Z</published>
    <updated>2018-03-30T14:45:29.763Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h3><p>之前已经把hexo部署到github，但是有时候挺慢的，于是就像跟大家一样搞到国内的coding.net上，申请coding的邮箱尽量与github使用同一个邮箱，这样配置ssh就省了事情，不用配置两个ssh了</p><h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><h4 id="coding配置"><a href="#coding配置" class="headerlink" title="coding配置"></a>coding配置</h4><p>基本流程跟github一样，都是先申请帐号。这里需要说一下的是，申请coding的邮箱尽量与github使用同一个邮箱，这样配置ssh就省了事情，不用配置两个ssh了。<br><img src="https://raw.githubusercontent.com/EARL8888/picturePath/master/Hexo/coding.png" alt="coding网站"><br>ssh对接基本和github一样，如果之前生成过ssh的话，就可以直接使用，一般存放在~/.ssh/id_rsa.pub。如果没有的话，那就下面几步就可以了,参考：<a href="http://www.troylc.cc/hexo/2016/05/31/Hexo%E6%95%99%E7%A8%8B2.html#%E9%85%8D%E7%BD%AESSH%E5%AF%86%E9%92%A5" target="_blank" rel="external">Hexo教程(一)-hexo环境搭建</a><br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh-keygen -t rsa -b4096 -C <span class="string">"你的邮箱"</span></div></pre></td></tr></table></figure><p></p><p><img src="https://raw.githubusercontent.com/EARL8888/picturePath/master/Hexo/coding-ssh.png" alt="coding网站"><br><strong>新建项目</strong><br>直接新建一个coding项目，需要注意就是：项目名尽量与用户名一样，这样可以省去后续的一些麻烦.设置为公有的项目，其余的都不用动，直接默认就行了。</p><h4 id="hexo配置"><a href="#hexo配置" class="headerlink" title="hexo配置"></a>hexo配置</h4><p>新建好了coding的项目之后，修改一下站点的根目录配置文件_config.yml,找到deploy位置，修改如下:<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  <span class="built_in">type</span>: git</div><div class="line">  repository: </div><div class="line">      github: git@github.com:xxxx/xxxxx.github.io.git</div><div class="line">      coding: git@git.coding.net:xxxx/xxxxx.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure><p></p><p>如果都是master分支，所以两个写到一起了，如果不是同一个分支的话，可以如下的写法：<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  <span class="built_in">type</span>: git</div><div class="line">  repository:</div><div class="line">      github: git@github.com:xxxx/xxxxx.github.io.git,分支名称</div><div class="line">      coding: git@git.coding.net:xxxx/xxxxx.git,分支名称</div></pre></td></tr></table></figure><p></p><p>其实就是在原来的基础再加一个就好了。只需要把repo的地址改成自己对应项目的就好。<br>还有一步，就是在博客的source/目录下需要创建一个空白文件,至于原因，是因为 coding.net需要这个文件来作为以静态文件部署的标志。就是说看到这个Staticfile就知道按照静态文件来发布。<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> <span class="built_in">source</span></div><div class="line">$ touch Staticfile  <span class="comment">#名字必须是Staticfile</span></div></pre></td></tr></table></figure><p></p><p>现在可以deploy了:<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo clean</div><div class="line">$ hexo d -g</div></pre></td></tr></table></figure><p></p><p>会看到有两个发布。发布完成之后，还需要托管coding.net上。</p><p><strong>coding使用Pages部署</strong><br>这种方式的话，可以绑定自己的域名。就跟Github Pages一样。项目名字必须与coding的用户名一致!!!只需要在如下:<br><img src="https://raw.githubusercontent.com/EARL8888/picturePath/master/Hexo/coding-pages.png" alt="coding网站"><br>因为前面配置的分支是master,因此开启之后，也需要是master。然后看起之后就可访问了,下面两个链接都可以访问<br><code>http://troylc.coding.me/troylc</code><br><code>http://troylc.coding.me/</code></p><h4 id="绑定域名："><a href="#绑定域名：" class="headerlink" title="绑定域名："></a>绑定域名：</h4><p>在万网上面购买了troylc.cc域名，三年只要50多块，个人用的就不用com这种超级贵的域名了。现在要实现国内的走coding，海外的走github，只要配置2个CNAME就行(详细参考：<a href="https://wanwang.aliyun.com/" title="购买万网域名" target="_blank" rel="external">万网</a>，这里就不做详细说明了).域名解析如下：<br><img src="https://raw.githubusercontent.com/EARL8888/picturePath/master/Hexo/wanwang.png" alt="coding网站"><br><strong>coding-pages绑定域名：</strong><br><img src="https://raw.githubusercontent.com/EARL8888/picturePath/master/Hexo/coding-ww.png" alt="coding网站"><br><strong>github-pages绑定域名：</strong><br>在hexo根目录下的source/目录下需要创建一个CNAME,内容为：troylc.cc<br><img src="https://raw.githubusercontent.com/EARL8888/picturePath/master/Hexo/github-CNAME.png" alt="github-CNAME"><br>然后在hexo根目录下执行：<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo clean</div><div class="line">$ hexo d -g</div></pre></td></tr></table></figure><p></p><p>过十几分钟后检测troylc.cc看到的解析是正确的，国内解析到Coding，国外解析到Github</p><h3 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h3><p><a href="http://shomy.top/2016/03/03/hexo-in-coding-github/" target="_blank" rel="external">hexo同时部署到coding(gitcafe)和github</a></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言：&quot;&gt;&lt;a href=&quot;#前言：&quot; class=&quot;headerlink&quot; title=&quot;前言：&quot;&gt;&lt;/a&gt;前言：&lt;/h3&gt;&lt;p&gt;之前已经把hexo部署到github，但是有时候挺慢的，于是就像跟大家一样搞到国内的coding.net上，申请coding的邮箱尽
    
    </summary>
    
      <category term="hexo" scheme="http://xinliu.vip/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://xinliu.vip/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo教程(七)-hexo-利用git多PC间同步博客</title>
    <link href="http://xinliu.vip/xinliu/48b7f912/"/>
    <id>http://xinliu.vip/xinliu/48b7f912/</id>
    <published>2017-08-01T14:57:13.000Z</published>
    <updated>2018-03-30T14:45:29.763Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h3><p>如果是两PC，比如单位和家，同时都想更新blog。而由于hexo没有动态的后台，而且全部文件都在本地生成，所以如果在A电脑上发表了A1文章后，在B电脑上又写了篇B1文章，在B电脑上上传后你会发现只有B1文章而A1文章没了（因为B电脑上没有A1文章的md文件），所以多台电脑同时用来写文章的时候，需要解决文章同步问题。</p><h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><p>下面介绍的是如何利用第三方代码托管平台进行同步，以github为例：</p><h4 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h4><p>在A电脑和B电脑上都安装git以及ssh密钥配置与连接，如果不会，可参考<a href="http://www.troylc.cc/hexo/2016/05/31/Hexo-1.html#%E5%AE%89%E8%A3%85Git" title="GIT安装" target="_blank" rel="external">GIT安装</a>和<a href="http://www.troylc.cc/hexo/2016/05/31/Hexo-1.html#%E9%85%8D%E7%BD%AESSH%E5%AF%86%E9%92%A5" title="配置SSH密钥" target="_blank" rel="external">配置SSH密钥</a></p><h4 id="同步最新的blog到github"><a href="#同步最新的blog到github" class="headerlink" title="同步最新的blog到github"></a>同步最新的blog到github</h4><p>建议先将拥有最新blog相关的文件的电脑上的文件上传到github上，否则在另一台电脑上下载时会有版本冲突，解决也比较麻烦。一般建议blog静态文件和blog源码文件分库存放，在PC上建立git ssh密钥连接和建立新库respo在此略过-参考：<a href="http://www.troylc.cc/hexo/2016/05/31/Hexo-1.html#%E6%B3%A8%E5%86%8CGithub%E8%B4%A6%E6%88%B7%E5%88%9B%E5%BB%BA%E4%BB%A3%E7%A0%81%E5%BA%93" title="注册Github账户创建代码库" target="_blank" rel="external">注册Github账户创建代码库</a></p><ul><li><p>编辑.gitignore文件：.gitignore文件作用是声明不被git记录的文件，blog根目录下的.gitignore是hexo初始化是创建的，可以直接编辑，建议.gitignore文件包括以下内容：<br>public内的文件可以根据source文件夹内容自动生成的，不需要备份。其他日志、压缩、数据库等文件也都是调试等使用，也不需要备份。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">.DS_Store</div><div class="line">Thumbs.db</div><div class="line">db.json</div><div class="line">*.log</div><div class="line">node_modules/</div><div class="line">public/</div><div class="line">.deploy*/</div></pre></td></tr></table></figure></li><li><p>初始化仓库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git init    </div><div class="line">git remote add origin &lt;server&gt;</div></pre></td></tr></table></figure></li></ul><p><strong>server</strong>是仓库的在线目录地址，可以从github上直接复制过来，origin是本地分支，remote add会将本地仓库映射到托管服务器的github仓库上。</p><ul><li>添加本地文件到仓库并同步到git上：<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git add . <span class="comment">#添加blog目录下所有文件，注意有个'.'(.gitignore里面声明的文件不在此内)    </span></div><div class="line">git commit -m <span class="string">"hexo source first add"</span> <span class="comment">#添加更新说明    </span></div><div class="line">git push -u origin master  <span class="comment">#将本地origin分支推送更新到github上的master分支</span></div></pre></td></tr></table></figure></li></ul><p>至此，github库上已完成最新blog的同步上传。</p><h4 id="将github库的内容同步到另一台电脑"><a href="#将github库的内容同步到另一台电脑" class="headerlink" title="将github库的内容同步到另一台电脑"></a>将github库的内容同步到另一台电脑</h4><p>之前已经将最新的blog源码内容同步到了github仓库上，现在另一台电脑准备同步源码内容。注意，在同步前也要先建好<a href="http://www.troylc.cc/hexo/2016/05/31/Hexo-1.html#hexo%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85" title="hexo环境安装" target="_blank" rel="external">hexo的环境</a>，不然把blog同步到本地后，无法运行hexo服务。在建好的环境的主目录(F:\Blog\hexo)运行以下命令：<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">git init  <span class="comment">#将目录添加到版本控制系统中    </span></div><div class="line">git remote add origin &lt;server&gt;  <span class="comment">#同上    </span></div><div class="line">git fetch --all  <span class="comment">#将git上所有文件拉取到本地    </span></div><div class="line">git reset --hard origin/master  <span class="comment">#强制将本地内容指向刚刚同步git云端内容</span></div></pre></td></tr></table></figure><p></p><p><strong>reset</strong>对所拉取的文件不做任何处理，不用<strong>pull</strong>是因为本地尚有许多文件，使用pull会有一些版本冲突，解决起来也麻烦，而本地的文件都是初始化生成的文件，较github库里面的blog文件而言基本无用，所以可以直接丢弃覆盖。<br>至此在另一台电脑上也同步了最新的blog文件。</p><h4 id="实现博客在多电脑之间同步"><a href="#实现博客在多电脑之间同步" class="headerlink" title="实现博客在多电脑之间同步"></a>实现博客在多电脑之间同步</h4><p>假设上面的操作做完后，你相当于在公司电脑和家里电脑上，都拥有了最新blog文件，现在需要在不同的电脑间，更新同步blog，以实现多电脑之间blog同步：<br>比如我在这家里的电脑上创建了一篇新的文章C1，编写了一些内容，还没有编写完，如果想在单位电脑上<br>上继续在C1的基础上写，我们必需先在家里电脑上把C1上传到github上，运行以下命令，提交文章：<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">git add .   <span class="comment">#将所有更新的本地文件添加到版本控制系统中</span></div><div class="line">git status  <span class="comment">#查看本地文件的状态。然后对更改添加说明更推送到git托管库上</span></div><div class="line">git commit -m <span class="string">'更新信息说明'</span></div><div class="line">git push  <span class="comment">#把本地blog文件同步到github对应的库上。</span></div></pre></td></tr></table></figure><p></p><p>至此，家里电脑的blog最新的更新同步完成。<br>如果在公司电脑上再次对C1进行编辑，需先运行:<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git pull <span class="comment">#下载同步github上的文件到本地。</span></div></pre></td></tr></table></figure><p></p><p>然后就可以在本地找到C1这篇文章了，至此多台电脑间同步博客内容就已经完成了</p><h3 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h3><p><a href="http://rainnie.me/2016/03/13/利用git-解决hexo博客多PC-间同步问题/" target="_blank" rel="external">利用git解决hexo博客多PC间同步问题</a></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言：&quot;&gt;&lt;a href=&quot;#前言：&quot; class=&quot;headerlink&quot; title=&quot;前言：&quot;&gt;&lt;/a&gt;前言：&lt;/h3&gt;&lt;p&gt;如果是两PC，比如单位和家，同时都想更新blog。而由于hexo没有动态的后台，而且全部文件都在本地生成，所以如果在A电脑上发表了A
    
    </summary>
    
      <category term="hexo" scheme="http://xinliu.vip/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://xinliu.vip/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo教程(六)-hexo-jacman主题文章页优化</title>
    <link href="http://xinliu.vip/xinliu/72465bd2/"/>
    <id>http://xinliu.vip/xinliu/72465bd2/</id>
    <published>2017-08-01T14:56:59.000Z</published>
    <updated>2018-03-30T14:45:29.764Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h3><p>上一篇对hexo博客基于jacman主题的首页页面的各项优化，本次为针对文章页的页面优化。<br>jacman主题优化之文章页优化,文章页的头尾及侧边栏和首页的一样，这里就不做说明了。主要说一下文章页中的文章内容部分的优化，顺序从上到下，从左到右进行优化</p><h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><p><img src="https://raw.githubusercontent.com/EARL8888/picturePath/master/Hexo/article-context.png" alt="文章内容页"><br><img src="https://raw.githubusercontent.com/EARL8888/picturePath/master/Hexo/article-context-3.png" alt="文章内容页"></p><h4 id="文章访问量、评论数"><a href="#文章访问量、评论数" class="headerlink" title="文章访问量、评论数"></a>文章访问量、评论数</h4><p>这里我添加到标题右下方，正文上面的地方。在themes\jacman\layout_partial\post\header.ejs中，找到<br></p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"article-time"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">time</span> <span class="attr">datetime</span>=<span class="string">"&lt;%= date_xml(item.date) %&gt;"</span> <span class="attr">itemprop</span>=<span class="string">"datePublished"</span>&gt;</span> <span class="tag">&lt;<span class="name">%=</span> <span class="attr">__</span>('<span class="attr">datepublished</span>') %&gt;</span> <span class="tag">&lt;<span class="name">%=</span> <span class="attr">item.date.format</span>(<span class="attr">config.date_format</span>) %&gt;</span><span class="tag">&lt;/<span class="name">time</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>增加如下内容：<br></p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"article-time"</span>&gt;</span> </div><div class="line">	<span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">theme.duoshuo_shortname</span> &amp;&amp; <span class="attr">page.comments</span>)&#123; %&gt;</span></div><div class="line">	   <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"head-plus"</span>&gt;</span></div><div class="line">	     阅读次数<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-user"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_value_page_pv"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-spinner fa-spin"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>次,</div><div class="line">	   <span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">	   <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"head-plus"</span>&gt;</span></div><div class="line">	   <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-comments"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"ds-thread-count"</span> <span class="attr">data-thread-key</span>=<span class="string">"&lt;%- page.path %&gt;"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-spinner fa-spin"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">	   <span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">time</span> <span class="attr">datetime</span>=<span class="string">"&lt;%= date_xml(item.date) %&gt;"</span> <span class="attr">itemprop</span>=<span class="string">"datePublished"</span>&gt;</span> <span class="tag">&lt;<span class="name">%=</span> <span class="attr">__</span>('<span class="attr">datepublished</span>') %&gt;</span> <span class="tag">&lt;<span class="name">%=</span> <span class="attr">item.date.format</span>(<span class="attr">config.date_format</span>) %&gt;</span><span class="tag">&lt;/<span class="name">time</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">header</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>以上判断了是否开启多说评论，在<a href="http://www.troylc.cc/hexo/2016/06/27/Hexo-5.html" title="Hexo教程(五)-hexo博客jacman主题首页优化" target="_blank" rel="external">前一篇文章</a>中我们已经有说过，多说评论数和网站的访问量，这里涉及到了文章的访问量，都是静态数据，不会对IP进行限制，一刷新就多一次访问量，因为在<a href="http://www.troylc.cc/hexo/2016/06/27/Hexo-5.html" title="Hexo教程(五)-hexo博客jacman主题首页优化" target="_blank" rel="external">前一篇文章</a>中已经加载了记数的JS，所以这里只要放入显示位置就可以了</p><h4 id="修改文章页内分享"><a href="#修改文章页内分享" class="headerlink" title="修改文章页内分享"></a>修改文章页内分享</h4><p>用jiathis的站内分享：首页进入网站注册：<a href="http://www.jiathis.com" title="jiathis的站内分享" target="_blank" rel="external">http://www.jiathis.com</a>然后配置修改\themes\jacman_config.yml文件中的jiathis分享属性：<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">jiathis:</div><div class="line">  <span class="built_in">enable</span>: <span class="literal">true</span> <span class="comment">## if you use jiathis as your share tool,the built-in share tool won't be display.</span></div><div class="line">  id: 2103875   <span class="comment">## e.g. 1889330 your jiathis ID. </span></div><div class="line">  tsina: 2705524937 <span class="comment">## e.g. 2176287895 Your weibo id,It will be used in share button.</span></div></pre></td></tr></table></figure><p></p><p>默认jacman好像已经集成了这个分享，只是没有开启，如果你的主题里没有集成，看看在\hexo\themes\jacman\layout_partial\post目录是否有jiathis.ejs这个文件，如果有说明已经集成了，没有的话，可以自己添加集成上，在此目录下创建一个jiathis.ejs文件，内容为在jiathis分享上获取的代码：<br></p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">theme.jiathis.enable</span>)&#123; %&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"jiathis_style_24x24"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"jiathis_button_tsina"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"jiathis_button_weixin"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"jiathis_button_renren"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"jiathis_button_qzone"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"jiathis_button_googleplus"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"jiathis_button_douban"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.jiathis.com/share"</span> <span class="attr">class</span>=<span class="string">"jiathis jiathis_txt jtico jtico_jiathis"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"jiathis_counter_style"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> &gt;</span><span class="xml"></span></div><div class="line">    var jiathis_config=&#123;</div><div class="line">    data_track_clickback:true,</div><div class="line">    sm:"copy,renren,cqq",</div><div class="line">    pic:"<span class="tag">&lt;<span class="name">%-</span> <span class="attr">item.photos</span> %&gt;</span>",</div><div class="line">    summary:"",</div><div class="line">    <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">theme.jiathis.tsina</span>)&#123; %&gt;</span> ralateuid:&#123;"tsina":"<span class="tag">&lt;<span class="name">%=</span> <span class="attr">theme.jiathis.tsina</span> %&gt;</span>"&#125;,hideMore:false&#125;</div><div class="line">    <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"//v3.jiathis.com/code/jia.js?uid=</span></span></div><div class="line">&lt;% if (theme.jiathis.id)&#123; %&gt;&lt;%= theme.jiathis.id %&gt;&lt;% &#125; %&gt;" <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;<span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>      </div><div class="line"><span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></div></pre></td></tr></table></figure><p></p><p>在\hexo\themes\jacman\layout_partial\post目录下找到footer.ejs文件，在此文件添加判断：<br></p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (!<span class="attr">index</span>)&#123; %&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"article-share"</span> <span class="attr">id</span>=<span class="string">"share"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span>(<span class="attr">theme.jiathis.enable</span>)&#123; %&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"share-jiathis"</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">jiathis</span>') %&gt;</span></div><div class="line">	 <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">%</span> &#125; <span class="attr">else</span> &#123; %&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-url</span>=<span class="string">"&lt;%- item.permalink %&gt;"</span> <span class="attr">data-title</span>=<span class="string">"&lt;% if (item.title)&#123; %&gt;&lt;%= item.title %&gt; | &lt;% &#125; %&gt;&lt;%= config.title %&gt;"</span> <span class="attr">data-tsina</span>=<span class="string">"&lt;%= theme.author.tsina %&gt;"</span> <span class="attr">class</span>=<span class="string">"share clearfix"</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></div></pre></td></tr></table></figure><p></p><p>设置完成，可以到文章页内容下面看到分享的按钮。</p><h4 id="增加文章页的评论"><a href="#增加文章页的评论" class="headerlink" title="增加文章页的评论"></a>增加文章页的评论</h4><p>修改\themes\jacman下_config.yml中的duoshuo_shortname属性<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#### Comment</span></div><div class="line">duoshuo_shortname: troylc   <span class="comment">## e.g. troylc   your duoshuo short name.</span></div><div class="line">disqus_shortname:     <span class="comment">## e.g. wuchong   your disqus short name.</span></div></pre></td></tr></table></figure><p></p><p>关于获取shoutname，shoutname不是登陆的用户昵称，而是多说首页点击我要安装，注册你的多说二级域名。去掉 .duoshuo.com 部分 就是你的shoutname，下图中troylc就是我的shoutname。<br><img src="https://raw.githubusercontent.com/EARL8888/picturePath/master/Hexo/article-context-2.png" alt="多说安装"><br><img src="https://raw.githubusercontent.com/EARL8888/picturePath/master/Hexo/article-context-1.png" alt="多说安装"></p><h3 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h3><p><a href="http://tengj.top/2016/03/06/hexo干货系列：（三）hexo的Jacman主题优化/" title="hexo的Jacman主题优化" target="_blank" rel="external">hexo的Jacman主题优化</a><br><a href="http://www.tuicool.com/articles/FRrQvi3" title="Hexo博客Jacman主题的一些优化" target="_blank" rel="external">Hexo博客Jacman主题的一些优化</a></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言：&quot;&gt;&lt;a href=&quot;#前言：&quot; class=&quot;headerlink&quot; title=&quot;前言：&quot;&gt;&lt;/a&gt;前言：&lt;/h3&gt;&lt;p&gt;上一篇对hexo博客基于jacman主题的首页页面的各项优化，本次为针对文章页的页面优化。&lt;br&gt;jacman主题优化之文章页优化,
    
    </summary>
    
      <category term="hexo" scheme="http://xinliu.vip/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://xinliu.vip/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo教程(五)-hexo-jacman主题首页优化</title>
    <link href="http://xinliu.vip/xinliu/546c9418/"/>
    <id>http://xinliu.vip/xinliu/546c9418/</id>
    <published>2017-08-01T14:56:32.000Z</published>
    <updated>2018-03-30T14:45:29.764Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h3><p>上一篇说到了hexo的博客被百度和google收录的方法，虽然搜索引擎是收录了，但是我在百度上搜索我文章的标题，还是没有搜索结果，结果只有首页一个。这个不知道是什么原因，有可能是百度索引量的问题，后续再观察，再折腾吧。下面来分享一下优化jacman主题，包括首页和文章页等，</p><h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><p>jacman主题优化之首页优化,顺序从上到下，从左到右进行优化</p><h4 id="首页头部优化"><a href="#首页头部优化" class="headerlink" title="首页头部优化"></a>首页头部优化</h4><p><img src="https://raw.githubusercontent.com/EARL8888/picturePath/master/Hexo/header.png" alt="头部header"></p><p>1.修改网站文字描述，修改hexo(F:\Blog\hexo_config.yml)主配置文件_config.yml中的<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Site 网站</span></div><div class="line">title: troylc博客                   <span class="comment">#网站标题</span></div><div class="line">subtitle: 爱生活爱编程，一起来进步吧！  <span class="comment">#网站副标题</span></div><div class="line">description:  hello,every body!         <span class="comment">#网站描述</span></div><div class="line">author: troylc                          <span class="comment">#您的名字 </span></div><div class="line">language: zh-CN                         <span class="comment">#网站使用的语言</span></div><div class="line">timezone:                               <span class="comment">#网站时区。Hexo 默认使用您电脑的时区</span></div></pre></td></tr></table></figure><p></p><p>2.修改文章URL结构<br>默认文章链结是以: <a href="http://xxx.com/2016/06/06/your-title/" target="_blank" rel="external">http://xxx.com/2016/06/06/your-title/</a> 的格式，末尾没有.html结尾有点动态页面的感觉，对搜索引擎能否收录也是个问题，于是，我改成了 <a href="http://xxx.com/hexo/2016/03/18/hello-world.html" target="_blank" rel="external">http://xxx.com/hexo/2016/03/18/hello-world.html</a> 这样的格式，具体方法是在 根目录(F:\Blog\hexo_config.yml)下的_config.yml文件里:<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#permalink: :year/:month/:day/:title/</span></div><div class="line">permalink: :category/:year/:month/:day/:title.html</div></pre></td></tr></table></figure><p></p><p>3.开启URL目录映射<br>如果你的分类是中文的，在url中也会显示相应的中文，为了在URL尽量少出现中文，做以下修改，方法是在_config.yml 下:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"># Category &amp; Tag  分类和标签的设置</div><div class="line">default_category: uncategorized   #默认分类         </div><div class="line">category_map:                     #分类别名 category_map 是为了让url中尽量少出现中文，做的映射。如下配置</div><div class="line">    心得: experience</div><div class="line">#    生活: life</div><div class="line">#    其他: other</div><div class="line">tag_map:                          #标签别名</div></pre></td></tr></table></figure><p></p><p>其中, category_map，tag_map 是为了让url中尽量少出现中文，做的映射。<br>例如:<br>在文章开头，标柱目录为:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"> ---</div><div class="line">xxx: xxx</div><div class="line">categories: 心得</div><div class="line"> ---</div></pre></td></tr></table></figure><p></p><p>则在url中， 会变成: <a href="http://xxx.com/experience/year/month/day/xxx.html" target="_blank" rel="external">http://xxx.com/experience/year/month/day/xxx.html</a></p><p>4.修改网站小图标、博客logo,在jacman(F:\Blog\hexo\themes\jacman)主题目录下的配置文件_config.yml,找到以下配置,指定favicon，imglogo的图片位置，或者把原本对应位置下的图片名称不变，直接换成自己喜欢的图片<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#### Image</span></div><div class="line">imglogo:</div><div class="line">  <span class="built_in">enable</span>: <span class="literal">true</span>             <span class="comment">## display image logo true/false. 是否显示logo</span></div><div class="line">  src: img/logo.png        <span class="comment">## `.svg` and `.png` are recommended,please put image into the theme folder `/jacman/source/img`.</span></div><div class="line">favicon: img/favicon.ico   <span class="comment">## size:32px*32px,`.ico` is recommended,please put image into the theme folder `/jacman/source/img`.     </span></div><div class="line">apple_icon: img/jacman.jpg <span class="comment">## size:114px*114px,please put image into the theme folder `/jacman/source/img`.</span></div><div class="line">author_img: img/author.jpg <span class="comment">## size:220px*220px.display author avatar picture.if don't want to display,please don't set this.</span></div><div class="line">banner_img: <span class="comment">#img/banner.jpg ## size:1920px*200px+. Banner Picture</span></div><div class="line"><span class="comment">### Theme Color </span></div><div class="line">theme_color:          <span class="comment">##主题颜色</span></div><div class="line">    theme: <span class="string">'#2ca6cb'</span>    <span class="comment">##the defaut theme color is blue</span></div></pre></td></tr></table></figure><p></p><p>5.首页头部的菜单menu 默认没有启用 /tags 和 /categories 页面，如果需要启用请在博客目录下的(F:\Blog\hexo\source)source文件夹中分别建立tags和categories文件夹每个文件夹中分别包含一个index.md文件。内容为：<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"> ---</div><div class="line">layout: tags (或categories)</div><div class="line">title: tags (或categories)</div><div class="line"> ---</div></pre></td></tr></table></figure><p></p><p>在jacman(F:\Blog\hexo\themes\jacman_config.yml)主题目录下的配置如下：<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">##### Menu</span></div><div class="line">menu:</div><div class="line">  home: /</div><div class="line">  categories: /categories</div><div class="line">  tags: /tags</div><div class="line">  archives: /archives</div><div class="line"><span class="comment">##  life: /life</span></div><div class="line"><span class="comment">##  about: /about</span></div><div class="line"><span class="comment">## you can create `tags` and `categories` folders in `../source`.</span></div><div class="line"><span class="comment">## And create a `index.md` file in each of them.</span></div><div class="line"><span class="comment">## set `front-matter`as</span></div><div class="line"><span class="comment">## layout: tags (or categories)</span></div><div class="line"><span class="comment">## title: tags (or categories)</span></div><div class="line"><span class="comment">## ---</span></div></pre></td></tr></table></figure><p></p><p>6.增加百度站内搜索-<a href="http://zn.baidu.com/cse/wiki/index?category_id=25" title="百度站内搜索-极速体验版本" target="_blank" rel="external">极速体验版本</a><br>在百度站内搜索-帮助中心-极速体验版中填空站内搜索代码，获取搜索展示代码，放在(F:\Blog\hexo\themes\jacman\layout_partial\header.ejs):<br></p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;% &#125; else if(theme.baidu_search.enable)&#123; %&gt;</div><div class="line">   &lt;form class="search" action="&lt;%- theme.baidu_search.site %&gt;" target="_blank"&gt;</div><div class="line">    &lt;label&gt;Search&lt;/label&gt;</div><div class="line">    &lt;input name="cc" type="hidden" value= &lt;%= theme.baidu_search.id %&gt; &gt;&lt;input type="text" name="q" size="30" placeholder="&lt;%= __('search') %&gt;"&gt;&lt;br&gt;</div><div class="line">  &lt;/form&gt;</div><div class="line">&lt;% &#125; else if(theme.swift_search.enable)&#123; %&gt;</div></pre></td></tr></table></figure><p></p><p>再修改F:\Blog\hexo\themes\jacman_config.yml文件中的百度搜索属性：<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">baidu_search:     <span class="comment">## http://zn.baidu.com/  极速体验版本http://zn.baidu.com/cse/wiki/index?category_id=25</span></div><div class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></div><div class="line">  id: troylc.cc  <span class="comment">## e.g. "troylc.cc"  for your baidu search webname</span></div><div class="line">  site: http://zhannei.baidu.com/cse/site  <span class="comment">## your can change to your site instead of the default site</span></div></pre></td></tr></table></figure><p></p><p>百度搜索极速检验版，需要百度搜索引擎收录你的网站，具体参考<a href="http://www.troylc.cc/hexo/2016/06/16/Hexo-4.html" title="搜索引擎收录网站" target="_blank" rel="external">《Hexo教程(四)-hexo博客被搜索引擎收录》</a></p><h4 id="首页内容部分优化"><a href="#首页内容部分优化" class="headerlink" title="首页内容部分优化"></a>首页内容部分优化</h4><p><img src="https://raw.githubusercontent.com/EARL8888/picturePath/master/Hexo/index-context.png" alt="内容部分优化"></p><h5 id="首页文章列表的优化"><a href="#首页文章列表的优化" class="headerlink" title="首页文章列表的优化"></a>首页文章列表的优化</h5><p>1.文章列表的展示方式，默认是全部展开，感觉展示文章全部内容比较没有吸引力，我关闭掉了，只展示少量摘要。修改\themes\jacman下面_config.yml中的expand改成false即可<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">index:</div><div class="line">  expand: <span class="literal">false</span>    <span class="comment">## default is unexpanding,so you can only see the short description of each post.</span></div><div class="line">  excerpt_link: Read More</div></pre></td></tr></table></figure><p></p><p>2.文章列表的展示形式，修改成列表模式，并在每一格列表的头显示标题，中间显示文章的摘要，尾显示发布时间，分类，标签，及评论数。修改F:\java\githubPages\Blog\hexo\themes\jacman\layout_partial\article.ejs文件中的以下部分：<br></p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">"post"</span> <span class="attr">itemscope</span> <span class="attr">itemprop</span>=<span class="string">"blogitem"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">item.link</span>) &#123; %&gt;</span> </div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&lt;%- item.link %&gt;"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span> </div><div class="line">  <span class="tag">&lt;<span class="name">%</span> &#125; <span class="attr">else</span>&#123; %&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&lt;%- config.root %&gt;&lt;%- item.path %&gt;"</span> <span class="attr">title</span>=<span class="string">"&lt;%= item.title %&gt;"</span> <span class="attr">itemprop</span>=<span class="string">"url"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">itemprop</span>=<span class="string">"name"</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">item.title</span> %&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">desc</span>)&#123; %&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span>(<span class="attr">item.description</span>)&#123; %&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">itemprop</span>=<span class="string">"description"</span> &gt;</span><span class="tag">&lt;<span class="name">%-</span> <span class="attr">item.description</span> %&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">%</span> &#125; <span class="attr">else</span> <span class="attr">if</span>(<span class="attr">item.excerpt</span>)&#123; %&gt;</span></div><div class="line">       <span class="tag">&lt;<span class="name">p</span> <span class="attr">itemprop</span>=<span class="string">"description"</span> &gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">strip_html</span>(<span class="attr">item.excerpt</span>)<span class="attr">.replace</span>(/^\<span class="attr">s</span>*/, '')<span class="attr">.replace</span>(/\<span class="attr">s</span>*$/, '')<span class="attr">.substring</span>(<span class="attr">0</span>, <span class="attr">140</span>) %&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">%</span> &#125; <span class="attr">else</span> &#123;%&gt;</span></div><div class="line">           <span class="tag">&lt;<span class="name">p</span> <span class="attr">itemprop</span>=<span class="string">"description"</span> &gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">strip_html</span>(<span class="attr">item.content</span>)<span class="attr">.replace</span>(/^\<span class="attr">s</span>*/, '')<span class="attr">.replace</span>(/\<span class="attr">s</span>*$/, '')<span class="attr">.substring</span>(<span class="attr">0</span>, <span class="attr">140</span>) %&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">time</span> <span class="attr">datetime</span>=<span class="string">"&lt;%= date_xml(item.date) %&gt;"</span> <span class="attr">itemprop</span>=<span class="string">"datePublished"</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">item.date.format</span>(<span class="attr">config.date_format</span>) %&gt;</span><span class="tag">&lt;/<span class="name">time</span>&gt;</span>    </div><div class="line">  <span class="tag">&lt;/<span class="name">a</span>&gt;</span>            </div><div class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>修改为：<br></p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">article</span> <span class="attr">class</span>=<span class="string">"post-expand &lt;%= item.layout %&gt;"</span>" <span class="attr">itemprop</span>=<span class="string">"articleBody"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">post</span>/<span class="attr">header-index</span>') %&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"padding: 0.5em 0.5em 0.5em 0.8em"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">item.link</span>) &#123; %&gt;</span> </div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&lt;%- item.link %&gt;"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span> </div><div class="line">      <span class="tag">&lt;<span class="name">%</span> &#125; <span class="attr">else</span>&#123; %&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&lt;%- config.root %&gt;&lt;%- item.path %&gt;"</span> <span class="attr">title</span>=<span class="string">"&lt;%= item.title %&gt;"</span> <span class="attr">itemprop</span>=<span class="string">"url"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">desc</span>)&#123; %&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span>(<span class="attr">item.description</span>)&#123; %&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">p</span> <span class="attr">itemprop</span>=<span class="string">"description"</span> &gt;</span><span class="tag">&lt;<span class="name">%-</span> <span class="attr">item.description</span> %&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">%</span> &#125; <span class="attr">else</span> <span class="attr">if</span>(<span class="attr">item.excerpt</span>)&#123; %&gt;</span></div><div class="line">           <span class="tag">&lt;<span class="name">p</span> <span class="attr">itemprop</span>=<span class="string">"description"</span> &gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">strip_html</span>(<span class="attr">item.excerpt</span>)<span class="attr">.replace</span>(/^\<span class="attr">s</span>*/, '')<span class="attr">.replace</span>(/\<span class="attr">s</span>*$/, '')<span class="attr">.substring</span>(<span class="attr">0</span>, <span class="attr">240</span>) %&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">%</span> &#125; <span class="attr">else</span> &#123;%&gt;</span></div><div class="line">               <span class="tag">&lt;<span class="name">p</span> <span class="attr">itemprop</span>=<span class="string">"description"</span> &gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">strip_html</span>(<span class="attr">item.content</span>)<span class="attr">.replace</span>(/^\<span class="attr">s</span>*/, '')<span class="attr">.replace</span>(/\<span class="attr">s</span>*$/, '')<span class="attr">.substring</span>(<span class="attr">0</span>, <span class="attr">240</span>) %&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span>    </div><div class="line"><span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">post</span>/<span class="attr">footer-index</span>', &#123;<span class="attr">index:</span> <span class="attr">true</span>&#125;) %&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">article</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>在当前目录下的post目录里增加三个文件catetags-index.ejs,footer-index.ejs,header-index.ejs<br>catetags-index.ejs 内容:<br></p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">&lt;div class="article-catetags"&gt;</div><div class="line">&lt;% if (item.categories &amp;&amp; item.categories.length)&#123; %&gt;</div><div class="line">&lt;div style="float: left;padding: 0.5em 0;margin-right: 3em;margin-top: 0.3em;"&gt;</div><div class="line">    &lt;time datetime="&lt;%= date_xml(item.date) %&gt;" itemprop="datePublished"&gt; &lt;%= __('datepublished') %&gt; &lt;%= item.date.format(config.date_format) %&gt;&lt;/time&gt;</div><div class="line">    By&lt;% if(theme.author.google_plus)&#123; %&gt;</div><div class="line">        &lt;a href="https://plus.google.com/&lt;%=theme.author.google_plus %&gt;?rel=author" title="&lt;%= config.author %&gt;" target="_blank" itemprop="author"&gt;&lt;%= config.author %&gt;&lt;/a&gt;</div><div class="line">        &lt;% &#125;else&#123; %&gt;</div><div class="line">        &lt;a href="&lt;%= config.root %&gt;about" title="&lt;%= config.author %&gt;" target="_blank" itemprop="author"&gt;&lt;%= config.author %&gt;&lt;/a&gt;</div><div class="line">        &lt;% &#125; %&gt;</div><div class="line">&lt;/div&gt;</div><div class="line">&lt;div class="article-categories"&gt;</div><div class="line">  &lt;span&gt;&lt;/span&gt;</div><div class="line">  &lt;%- list_categories(item.categories, &#123;</div><div class="line">      show_count: false,</div><div class="line">      class: 'article-category',</div><div class="line">      style: 'none',</div><div class="line">      separator: '►'</div><div class="line">  &#125;) %&gt;</div><div class="line">&lt;/div&gt;</div><div class="line">&lt;% &#125; %&gt;</div><div class="line">&lt;% if (item.tags &amp;&amp; item.tags.length)&#123; %&gt;</div><div class="line">  &lt;div class="article-tags"&gt;</div><div class="line">  &lt;% var tags = [];</div><div class="line">    item.tags.forEach(function(tag)&#123;</div><div class="line">      tags.push('&lt;a href="' + config.root + tag.path + '"&gt;' + tag.name + '&lt;/a&gt;');</div><div class="line">    &#125;); %&gt;</div><div class="line">  &lt;span&gt;&lt;/span&gt; &lt;%- tags.join('') %&gt;</div><div class="line">  &lt;/div&gt;</div><div class="line">&lt;% &#125; %&gt;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure><p></p><p>footer-index.ejs 内容:<br></p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">footer</span> <span class="attr">class</span>=<span class="string">"article-footer clearfix"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">catetags-index</span>') %&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (!<span class="attr">index</span>)&#123; %&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"article-share"</span> <span class="attr">id</span>=<span class="string">"share"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span>(<span class="attr">theme.jiathis.enable</span>)&#123; %&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"share-jiathis"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">jiathis</span>') %&gt;</span></div><div class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">%</span> &#125; <span class="attr">else</span> &#123; %&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-url</span>=<span class="string">"&lt;%- item.permalink %&gt;"</span> <span class="attr">data-title</span>=<span class="string">"&lt;% if (item.title)&#123; %&gt;&lt;%= item.title %&gt; | &lt;% &#125; %&gt;&lt;%= config.title %&gt;"</span> <span class="attr">data-tsina</span>=<span class="string">"&lt;%= theme.author.tsina %&gt;"</span> <span class="attr">class</span>=<span class="string">"share clearfix"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">index</span>)&#123; %&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"comments-count"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span>((<span class="attr">config.disqus_shortname</span> || <span class="attr">theme.disqus_shortname</span>) &amp;&amp; !<span class="attr">theme.duoshuo_shortname</span>) &#123; %&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&lt;%- config.root %&gt;&lt;%- item.path %&gt;#disqus_thread"</span> <span class="attr">class</span>=<span class="string">"comments-count-link"</span>&gt;</span>Comments<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">%</span> &#125; <span class="attr">else</span> <span class="attr">if</span>(<span class="attr">theme.duoshuo_shortname</span>) &#123; %&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&lt;%- config.root %&gt;&lt;%- item.path %&gt;#comments"</span> <span class="attr">class</span>=<span class="string">"ds-thread-count comments-count-link"</span> <span class="attr">data-thread-key</span>=<span class="string">"&lt;%- item.path %&gt;"</span> <span class="attr">data-count-type</span>=<span class="string">"comments"</span>&gt;</span>&amp;nbsp;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>header-index.ejs 内容:<br></p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">header</span> <span class="attr">class</span>=<span class="string">"article-info clearfix"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h1</span> <span class="attr">itemprop</span>=<span class="string">"name"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span>(<span class="attr">item.link</span>) &#123; %&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&lt;%- item.link %&gt;"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">title</span>=<span class="string">"&lt;%= item.title %&gt;"</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">item.title</span> %&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">%</span> &#125; <span class="attr">else</span> &#123; %&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&lt;%- config.root %&gt;&lt;%- item.path %&gt;"</span> <span class="attr">title</span>=<span class="string">"&lt;%= item.title %&gt;"</span> <span class="attr">itemprop</span>=<span class="string">"url"</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">item.title</span> %&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">header</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>调整对应的样式：<br>具体:<br>1.\jacman\source\css_partial\index.styl<br>2.\jacman\source\css_partial\footer.styl<br>3.\jacman\source\css_partial\article.styl<br>4.\jacman\source\css_partial\helper.styl<br>我主要调整了以上四个文件中的样式，具体各位自己找着改吧。太多了，我也是通过firefox的firebug工具慢慢找得。</p><p>3.文章列表分页条数限制（含首页文章列表页，分类列表页，标签列表页）修改hexo(F:\Blog\hexo_config.yml)主配置文件_config.yml中的：<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Others</span></div><div class="line">index_generator:</div><div class="line">  per_page: 5 <span class="comment">##首页默认10篇文章标题 如果值为0不分页</span></div><div class="line">archive_generator:</div><div class="line">    per_page: 0 <span class="comment">##归档页面默认10篇文章标题</span></div><div class="line">    yearly: <span class="literal">true</span>  <span class="comment">##生成年视图</span></div><div class="line">    monthly: <span class="literal">true</span> <span class="comment">##生成月视图</span></div><div class="line">tag_generator:</div><div class="line">    per_page: 0 <span class="comment">##标签分类页面默认10篇文章</span></div><div class="line">category_generator: </div><div class="line">    per_page: 0 <span class="comment">###分类页面默认10篇文章</span></div><div class="line">feed:</div><div class="line">    <span class="built_in">type</span>: atom <span class="comment">##feed类型 atom或者rss2</span></div><div class="line">    path: atom.xml <span class="comment">##feed路径</span></div><div class="line">    <span class="built_in">limit</span>: 20  <span class="comment">##feed文章最小数量</span></div></pre></td></tr></table></figure><p></p><h5 id="首页内容侧边栏优化"><a href="#首页内容侧边栏优化" class="headerlink" title="首页内容侧边栏优化"></a>首页内容侧边栏优化</h5><p>侧边栏顺序配置：<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#### Widgets  首页侧边栏</span></div><div class="line">widgets: </div><div class="line">- github-card</div><div class="line">- category</div><div class="line">- tag</div><div class="line">- hot</div><div class="line">- tagcloud</div><div class="line">- links</div><div class="line"><span class="comment">#- douban</span></div><div class="line">- weibo</div><div class="line">- rss</div><div class="line">  <span class="comment">## provide eight widgets:github-card,category,tag,rss,archive,tagcloud,links,weibo</span></div></pre></td></tr></table></figure><p></p><p>1.github名片，友情链接,RSS订阅，在<a href="http://www.troylc.cc/hexo/2016/05/31/Hexo-1.html#%E5%AE%89%E8%A3%85Hexo%E6%8F%92%E4%BB%B6" target="_blank" rel="external">Hexo教程(一)-hexo环境搭建</a>中的安装插件时，安装RSS插件. 在jacman(F:\Blog\hexo\themes\jacman)主题目录下的配置文件_config.yml,找到以下配置,并修改如下：<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">author:</div><div class="line">  intro_line1:  <span class="string">"Hello ,I'm troylc Page in github."</span>    <span class="comment">## your introduction on the bottom of the page</span></div><div class="line">  intro_line2:  <span class="string">"This is my blog,believe it or not."</span>  <span class="comment">## the 2nd line</span></div><div class="line">  ...</div><div class="line">  github: xxxx     <span class="comment">## e.g. 配置你对应的github用户名</span></div><div class="line">  ...</div><div class="line"><span class="comment">##----------------------------------------------------------------------------</span></div><div class="line"><span class="comment">#### RSS  RSS订阅 </span></div><div class="line">rss: /atom.xml <span class="comment">## RSS address.</span></div><div class="line"><span class="comment">##----------------------------------------------------------------------------</span></div><div class="line"><span class="comment">#### Links</span></div><div class="line">links:</div><div class="line">  攻城狮: http://www.troylc.cc/, 一个面向程序员交流分享的博客</div><div class="line">  troylc<span class="string">'s Blog: http://www.troylc.cc/</span></div></pre></td></tr></table></figure><p></p><p>2.分类，标签，标签云，这几个只有在创建文章中写上分类和标签，就会在此处自动显示分类，标签，标签云，以分类和标签的文章个数。</p><p>3.热评文章、我的微博<br><strong>热评文章：</strong><br>由于hexo没有内置诸如“热评文章”，“最新评论”等的widget，那么只能自定义widget,仿照其他的widget，在themes的_config.yml文件中的widgets下添加自定义widget的名称，如上面我添加了一个hot，然后在F:\Blog\hexo\themes\jacman\layout_widget目录下新建一个hot.ejs，在<a href="http://duoshuo.com/" title="多说网站" target="_blank" rel="external">多说</a>(如果没有多说账号就注册一个，后续文章页的文章评论也会用到)-&gt;后台管理-&gt;工具-&gt;热评文章中获取代码，写到hot.ejs文件中，然后在其上面写上名字“热评文章”，如下：<br></p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- 国际化文件(F:\Blog\hexo\themes\jacman\languages\zh-CN.yml)定义hot --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"asidetitle"</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">__</span>('<span class="attr">hot</span>') %&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- 多说热评文章 start --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ds-top-threads"</span> <span class="attr">data-range</span>=<span class="string">"daily"</span> <span class="attr">data-num-items</span>=<span class="string">"5"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- 多说热评文章 end --&gt;</span></div><div class="line"><span class="comment">&lt;!-- 多说公共JS代码 start (一个网页只需插入一次) --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="javascript"></span></div><div class="line"><span class="keyword">var</span> duoshuoQuery = &#123;short_name:<span class="string">"troylc"</span>&#125;;</div><div class="line">    (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> ds = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</div><div class="line">        ds.type = <span class="string">'text/javascript'</span>;ds.async = <span class="literal">true</span>;</div><div class="line">        ds.src = (<span class="built_in">document</span>.location.protocol == <span class="string">'https:'</span> ? <span class="string">'https:'</span> : <span class="string">'http:'</span>) + <span class="string">'//static.duoshuo.com/embed.js'</span>;</div><div class="line">        ds.charset = <span class="string">'UTF-8'</span>;</div><div class="line">        (<span class="built_in">document</span>.getElementsByTagName(<span class="string">'head'</span>)[<span class="number">0</span>] </div><div class="line">         || <span class="built_in">document</span>.getElementsByTagName(<span class="string">'body'</span>)[<span class="number">0</span>]).appendChild(ds);</div><div class="line">    &#125;)();</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- 多说公共JS代码 end --&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p><strong>我的微博-微博秀</strong><br>需要注意的是，如果要启用微博秀，您必须填上author属性下tsina和weibo_verifier的值，前者是您微博ID，后者是您微博秀的验证码，登录新浪微博后，访问 <a href="http://app.weibo.com/tool/weiboshow" title="微博秀" target="_blank" rel="external">http://app.weibo.com/tool/weiboshow</a> 在如下图位置，可以获得您的 verifier，如：我的是0f3h06c8。<br><img src="https://raw.githubusercontent.com/EARL8888/picturePath/master/Hexo/index-context-2.png" alt="内容侧边栏-微博秀"><br>在jacman(F:\Blog\hexo\themes\jacman)主题目录下的配置文件_config.yml,找到以下配置,并修改如下：<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">author:</div><div class="line">  ...</div><div class="line">  weibo_verifier: 0f3h06c8    <span class="comment">## e.g. 0f81d6c8 Your weibo-show widget verifier ,if you use weibo-show it is needed.</span></div><div class="line">  tsina: 2705522637      <span class="comment">## e.g. 2705522637  Your weibo ID,It will be used in share button.</span></div><div class="line">  weibo: 2705522637     <span class="comment">## e.g. troylc or 2705522637 for http://weibo.com/2705522637</span></div><div class="line">  ...</div></pre></td></tr></table></figure><p></p><p>第一次不知道是什么原因，要么无法显示，要么显示出现问题，耐心的多刷新，或者等待几天再去刷新。</p><h4 id="首页footer优化"><a href="#首页footer优化" class="headerlink" title="首页footer优化"></a>首页footer优化</h4><p><img src="https://raw.githubusercontent.com/EARL8888/picturePath/master/Hexo/footer.png" alt="尾部footer"><br>1.修改网站的主页的头和尾的英文字体：\hexo\themes\jacman\source\css_base\variable.styl中的font-custom-family = “covered_by_your_graceregular”修改为inherit如下:<br></p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">//Font</div><div class="line">font-default = "Helvetica Neue", "Helvetica","Microsoft YaHei", "WenQuanYi Micro Hei",Arial, sans-serif</div><div class="line">font-serif = "Georgia", serif</div><div class="line">font-mono = Monaco, Menlo, Consolas, Courier New, monospace</div><div class="line">font-custom-family = inherit  //英文字体inherit</div><div class="line">font-custom-filename = coveredbyyourgrace-webfont</div><div class="line">font-icon-family = "FontAwesome"</div><div class="line">font-icon-filename = fontawesome-webfont</div><div class="line">font-icon-version = "4.0.3"</div><div class="line">font-icon-diao = "fontdiao"</div><div class="line">font-icon-diao-filename = "fontdiao"</div><div class="line">font-icon-diao-version = "0.0.8"</div><div class="line">ShowCustomFont = hexo-config("ShowCustomFont")</div><div class="line">font-size = 100%</div><div class="line">line-height = 1.5</div><div class="line">//image</div><div class="line">author-img = hexo-config("author_img")</div></pre></td></tr></table></figure><p></p><p>2.尾部的作者图片，在上面头部优化中，有提到，在jacman(F:\Blog\hexo\themes\jacman)主题目录下的配置文件_config.yml,找到以下配置,指定author_img的图片位置，或者把原本对应位置下的图片名称不变，直接换成自己喜欢的图片<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#### Image</span></div><div class="line">imglogo:</div><div class="line">  <span class="built_in">enable</span>: <span class="literal">true</span>             <span class="comment">## display image logo true/false. 是否显示logo</span></div><div class="line">  src: img/logo.png        <span class="comment">## `.svg` and `.png` are recommended,please put image into the theme folder `/jacman/source/img`.</span></div><div class="line">favicon: img/favicon.ico   <span class="comment">## size:32px*32px,`.ico` is recommended,please put image into the theme folder `/jacman/source/img`.     </span></div><div class="line">apple_icon: img/jacman.jpg <span class="comment">## size:114px*114px,please put image into the theme folder `/jacman/source/img`.</span></div><div class="line">author_img: img/author.jpg <span class="comment">## size:220px*220px.display author avatar picture.if don't want to display,please don't set this.</span></div><div class="line">banner_img: <span class="comment">#img/banner.jpg ## size:1920px*200px+. Banner Picture</span></div><div class="line"><span class="comment">### Theme Color </span></div><div class="line">theme_color:          <span class="comment">##主题颜色</span></div><div class="line">    theme: <span class="string">'#2ca6cb'</span>    <span class="comment">##the defaut theme color is blue</span></div></pre></td></tr></table></figure><p></p><p>3.添加网站的总pv计数和总uv计数<br>在F:\Blog\hexo\themes\jacman\layout_partial\footer.ejs中最后面添加脚本和总pv计数和总uv计数：<br></p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">"https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_container_site_pv"</span>&gt;</span></div><div class="line">      Total visits: <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_value_site_pv"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_container_site_uv"</span>&gt;</span></div><div class="line">    You are Visiter No.<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_value_site_uv"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div></pre></td></tr></table></figure><p></p><h3 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h3><p><a href="http://wuchong.me/blog/2014/11/20/how-to-use-jacman/" title="如何使用 Jacman 主题 " target="_blank" rel="external">如何使用 Jacman 主题</a><br><a href="http://www.tuicool.com/articles/FRrQvi3" title="Hexo博客Jacman主题的一些优化" target="_blank" rel="external">Hexo博客Jacman主题的一些优化</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言：&quot;&gt;&lt;a href=&quot;#前言：&quot; class=&quot;headerlink&quot; title=&quot;前言：&quot;&gt;&lt;/a&gt;前言：&lt;/h3&gt;&lt;p&gt;上一篇说到了hexo的博客被百度和google收录的方法，虽然搜索引擎是收录了，但是我在百度上搜索我文章的标题，还是没有搜索结果，结
    
    </summary>
    
      <category term="hexo" scheme="http://xinliu.vip/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://xinliu.vip/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo教程(四)-hexo博客被搜索引擎收录</title>
    <link href="http://xinliu.vip/xinliu/60926827/"/>
    <id>http://xinliu.vip/xinliu/60926827/</id>
    <published>2017-08-01T14:56:32.000Z</published>
    <updated>2018-03-30T14:45:29.764Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h3><p>现在我们的博客搭起来了，也写了几篇博文，但是各大搜索引擎还是搜索不到你写的文章，如何查看是否被搜索引擎收录，如何设置博客被搜索引擎收录，如何让搜索引擎能及时的搜索到你的文章，这篇就来和大家一起填坑</p><h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><p>下面准备分别介绍谷歌和百度如何提交搜索引擎，其中有一些共同的地方，这里先说明：</p><h4 id="确认博客是否被收录"><a href="#确认博客是否被收录" class="headerlink" title="确认博客是否被收录"></a>确认博客是否被收录</h4><p>在百度或者谷歌上面输入下面格式来判断，如果能搜索到就说明被收录，否则就没有，用你的域名替代我的<br>输入：site:troylc.cc<br><img src="https://raw.githubusercontent.com/EARL8888/picturePath/master/Hexo/google-troylc.png" alt="查看google是否收录"><br><img src="https://raw.githubusercontent.com/EARL8888/picturePath/master/Hexo/baidu-troylc.png" alt="查看baidu是否收录"><br>我这里是已经做完了，在写这篇文章的，所以显示已经收录了</p><h4 id="验证博客网站"><a href="#验证博客网站" class="headerlink" title="验证博客网站"></a>验证博客网站</h4><p>两个搜索引擎入口：<br><a href="https://www.google.com/webmasters/tools/home?hl=zh-CN" title="Google搜索引擎提交入口" target="_blank" rel="external">Google搜索引擎提交入口</a><br><a href="http://zhanzhang.baidu.com/linksubmit/url" title="百度搜索引擎入口" target="_blank" rel="external">百度搜索引擎入口</a><br>如果没有对应的账号，请对应的注册相应的账号：<br><img src="https://raw.githubusercontent.com/EARL8888/picturePath/master/Hexo/baidu-create.png" alt="添加百度验证博客网站"><br><img src="https://raw.githubusercontent.com/EARL8888/picturePath/master/Hexo/google-create1.png" alt="添加google验证博客网站"><br><img src="https://raw.githubusercontent.com/EARL8888/picturePath/master/Hexo/google-create2.png" alt="添加google验证博客网站"><br>不管谷歌还是百度都要先添加域名，然后验证网站，这里统一都使用文件验证，就是下载对应的html文件，放到域名根目录下，也就收博客根目录下的source下面<br><img src="https://raw.githubusercontent.com/EARL8888/picturePath/master/Hexo/hexo-verify-file.png" alt="查看本地hexo验证文件"><br>然后部署到服务器,输入地址：<a href="http://www.troylc.cc/googlecb7f6bfb684c40c5.html" target="_blank" rel="external">http://www.troylc.cc/googlecb7f6bfb684c40c5.html</a> 能访问到就可以点验证按钮。<br><code>注</code>：这个验证的时候，google有可能会失败，可以等个一两天，再去验证，就好了。</p><h4 id="生成站点地图sitemap"><a href="#生成站点地图sitemap" class="headerlink" title="生成站点地图sitemap"></a>生成站点地图sitemap</h4><p>站点地图是一种文件，您可以通过该文件列出您网站上的网页，从而将您网站内容的组织架构告知Google和其他搜索引擎。Googlebot等搜索引擎网页抓取工具会读取此文件，以便更加智能地抓取您的网站。<br>先安装一下插件，打开你的hexo博客根目录，分别用下面两个命令来安装针对谷歌和百度的插件<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-sitemap --save</div><div class="line">npm install hexo-generator-baidu-sitemap --save</div></pre></td></tr></table></figure><p></p><p>编译你的博客<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo d -g</div></pre></td></tr></table></figure><p></p><p>如果在你的博客根目录的public下面生成了sitemap.xml以及baidusitemap.xml就表示成功了。<br>这时候sitemap.xml跟baidusitemap.xml里面的内容有点相似.<br>部署后你分别访问<br><a href="http://www.troylc.cc/sitemap.xml" target="_blank" rel="external">http://www.troylc.cc/sitemap.xml</a><br><a href="http://www.troylc.cc/baidusitemap.xml" target="_blank" rel="external">http://www.troylc.cc/baidusitemap.xml</a></p><h4 id="收录hexo博客"><a href="#收录hexo博客" class="headerlink" title="收录hexo博客"></a>收录hexo博客</h4><h5 id="让谷歌收录我们的博客"><a href="#让谷歌收录我们的博客" class="headerlink" title="让谷歌收录我们的博客"></a>让谷歌收录我们的博客</h5><p>谷歌操作比较简单，就是向Google站长工具提交sitemap<br>登录Google账号，添加了站点验证通过后，选择站点，之后在抓取——站点地图中就能看到添加/测试站点地图，如下图：<br><img src="https://raw.githubusercontent.com/EARL8888/picturePath/master/Hexo/google-sitemap.png" alt="谷歌收录我们的博客"><br>谷歌提交过了一两天就能搜索到博客了。</p><h5 id="让百度收录我们的博客"><a href="#让百度收录我们的博客" class="headerlink" title="让百度收录我们的博客"></a>让百度收录我们的博客</h5><p>相比google百度操作可能比较麻烦一点：这里是百度介绍的几种主动提交博客文章链接的方式：<br>如何选择链接提交方式</p><ol><li>主动推送：最为快速的提交方式，推荐您将站点当天新产出链接立即通过此方式推送给百度，以保证新链接可以及时被百度收录。</li><li>自动推送：最为便捷的提交方式，请将自动推送的JS代码部署在站点的每一个页面源代码中，部署代码的页面在每次被浏览时，链接会被自动推送给百度。可以与主动推送配合使用。</li><li>sitemap：您可以定期将网站链接放到sitemap中，然后将sitemap提交给百度。百度会周期性的抓取检查您提交的sitemap，对其中的链接进行处理，但收录速度慢于主动推送。</li><li>手动提交：一次性提交链接给百度，可以使用此种方式。<br>从效率上来说：主动推送&gt;自动推送&gt;sitemap<br>这里介绍自动推送和sitemap提交方式：</li></ol><p><strong>自动推送：</strong><br><img src="https://raw.githubusercontent.com/EARL8888/picturePath/master/Hexo/baidu-zd1.png" alt="百度自动推送"><br><img src="https://raw.githubusercontent.com/EARL8888/picturePath/master/Hexo/baidu-zd2.png" alt="百度自动推送"><br>自动推送是百度站长平台为提高站点新增网页发现速度推出的工具，安装自动推送JS代码的网页，在页面被访问时，页面URL将立即被推送给百度<br></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> bp = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</div><div class="line">    <span class="keyword">var</span> curProtocol = <span class="built_in">window</span>.location.protocol.split(<span class="string">':'</span>)[<span class="number">0</span>];</div><div class="line">    <span class="keyword">if</span> (curProtocol === <span class="string">'https'</span>) &#123;</div><div class="line">        bp.src = <span class="string">'https://zz.bdstatic.com/linksubmit/push.js'</span>;        </div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> &#123;</div><div class="line">        bp.src = <span class="string">'http://push.zhanzhang.baidu.com/push.js'</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">var</span> s = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"script"</span>)[<span class="number">0</span>];</div><div class="line">    s.parentNode.insertBefore(bp, s);</div><div class="line">&#125;)();</div><div class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div></pre></td></tr></table></figure><p></p><p>我是放在\themes\jacman\layout_partial\after_footer.ejs中，添加到下面就行。</p><p><strong>sitemap提交:</strong><br>直接提交<a href="http://www.troylc.cc/baidusitemap.xml" target="_blank" rel="external">http://www.troylc.cc/baidusitemap.xml</a> 就行，看下图。<br><img src="https://raw.githubusercontent.com/EARL8888/picturePath/master/Hexo/baidu-sitemaptj.png" alt="百度自动推送"></p><p>至此我们的博客已经被百度与google这样的搜索引擎收录，如果出现无法收录，可以过几天再登录看看结果</p><h3 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h3><p><a href="http://tengj.top/2016/03/14/hexo6seo/" target="_blank" rel="external">hexo提交搜索引擎（百度+谷歌）</a></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言：&quot;&gt;&lt;a href=&quot;#前言：&quot; class=&quot;headerlink&quot; title=&quot;前言：&quot;&gt;&lt;/a&gt;前言：&lt;/h3&gt;&lt;p&gt;现在我们的博客搭起来了，也写了几篇博文，但是各大搜索引擎还是搜索不到你写的文章，如何查看是否被搜索引擎收录，如何设置博客被搜索引擎收
    
    </summary>
    
      <category term="hexo" scheme="http://xinliu.vip/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://xinliu.vip/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo教程(二)-hexo-jacman主题优化</title>
    <link href="http://xinliu.vip/xinliu/9c86a549/"/>
    <id>http://xinliu.vip/xinliu/9c86a549/</id>
    <published>2017-08-01T14:55:48.000Z</published>
    <updated>2018-03-30T14:45:29.763Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>上一篇博文把我们的博客已经部署到了github pages服务上，别人可以通过网址来登陆我们的博客了，但是我们这时博客并不好看，怎么优化hexo博客，在Hexo下已经有很多人开发了各种主题给我们使用，我们只需要把他克隆过来，然后通过修改配置文件即可达到要的效果。那么我们应该怎么修改呢？</p><h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><h4 id="Hexo官网主题专栏"><a href="#Hexo官网主题专栏" class="headerlink" title="Hexo官网主题专栏"></a><a href="https://hexo.io/themes/" title="hexo主题专栏" target="_blank" rel="external">Hexo官网</a>主题专栏</h4><p><img src="https://raw.githubusercontent.com/EARL8888/picturePath/master/Hexo/themes.png" alt="Hexo官网主题"><br>可以看到有很多主题给我们选，我们只要选择喜欢的主题点击进去，然后进入到它的github地址，我们只要把这个地址复制下来(例如我是选择：jacman这个主题)<br><img src="https://raw.githubusercontent.com/EARL8888/picturePath/master/Hexo/jacmangithub.png" alt="Hexo官网主题"></p><h4 id="克隆主题jacman"><a href="#克隆主题jacman" class="headerlink" title="克隆主题jacman"></a>克隆主题jacman</h4><p>再打开Hexo文件夹下的themes目录（F:\Blog\hexo\themes），右键Git Bash，在命令行输入:<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> https://github.com/wuchong/jacman.git themes/jacman</div></pre></td></tr></table></figure><p></p><p>等待下载完成</p><h4 id="启用主题jacman"><a href="#启用主题jacman" class="headerlink" title="启用主题jacman"></a>启用主题jacman</h4><p>修改你的博客根目录(F:\Blog\hexo)下的_config.yml配置文件中的theme属性，将其设置为jacman。<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">......</div><div class="line"><span class="comment">#theme: landscape</span></div><div class="line">theme: jacman</div><div class="line">......</div></pre></td></tr></table></figure><p></p><h4 id="部署主题jacman"><a href="#部署主题jacman" class="headerlink" title="部署主题jacman"></a>部署主题jacman</h4><p>返回Hexo目录，右键Git Bash，输入<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo g</div><div class="line">hexo s</div></pre></td></tr></table></figure><p></p><p>打开本地浏览器，输入<code>http://localhost:4000/</code> 即可看见我们的主题已经更换了<br><img src="https://raw.githubusercontent.com/EARL8888/picturePath/master/Hexo/usejacman.png" alt="Hexo官网主题"></p><p>如果效果满意，将它部署到Github上;打开Hexo文件夹，右键Git Bash，输入<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo clean   (必须要，不然有时因为缓存问题，服务器更新不了主题)</div><div class="line">hexo g <span class="_">-d</span></div></pre></td></tr></table></figure><p></p><p>打开自己github pages的主页(<code>https://xxxxx.github.io</code>)，即可看到修改后的效果</p><h4 id="优化hexo主配置"><a href="#优化hexo主配置" class="headerlink" title="优化hexo主配置"></a>优化hexo主配置</h4><p>修改你的博客根目录(F:\Blog\hexo)下的_config.yml配置<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Hexo Configuration</span></div><div class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></div><div class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></div><div class="line"></div><div class="line"><span class="comment"># Site 网站</span></div><div class="line">title: troylc技术博客                   <span class="comment">#网站标题</span></div><div class="line">subtitle: 爱生活爱编程，一起来进步吧！  <span class="comment">#网站副标题</span></div><div class="line">description:  hello,every body!         <span class="comment">#网站描述</span></div><div class="line">author: troylc                          <span class="comment">#您的名字 </span></div><div class="line">language: zh-CN                         <span class="comment">#网站使用的语言</span></div><div class="line">timezone:                               <span class="comment">#网站时区。Hexo 默认使用您电脑的时区</span></div><div class="line"></div><div class="line"><span class="comment"># URL 网址</span></div><div class="line"><span class="comment">## 如果您的网站存放在子目录中，例如 http://yoursite.com/blog，则请将您的 url 设为 http://yoursite.com/blog 并把 root 设为 /blog/</span></div><div class="line">url: https://www.troylc.cc/</div><div class="line">root: /</div><div class="line"><span class="comment">#permalink: :year/:month/:day/:title/</span></div><div class="line">permalink: :category/:year/:month/:day/:title.html  <span class="comment">#生成文章的链接格式</span></div><div class="line">permalink_defaults:</div><div class="line"></div><div class="line"><span class="comment"># Directory 目录配置</span></div><div class="line">source_dir: <span class="built_in">source</span>              <span class="comment">#源文件夹，这个文件夹用来存放内容。</span></div><div class="line">public_dir: public              <span class="comment">#公共文件夹，这个文件夹用于存放生成的站点文件。</span></div><div class="line">tag_dir: tags                   <span class="comment">#标签文件夹</span></div><div class="line">archive_dir: archives           <span class="comment">#归档文件夹</span></div><div class="line">category_dir: categories        <span class="comment">#分类文件夹</span></div><div class="line">code_dir: downloads/code        <span class="comment">#nclude code 文件夹</span></div><div class="line">i18n_dir: :lang                 <span class="comment">#国际化（i18n）文件夹</span></div><div class="line">skip_render:                    <span class="comment">#跳过指定文件的渲染，您可使用 glob 表达式来匹配路径。</span></div><div class="line"></div><div class="line"><span class="comment"># Writing 文章</span></div><div class="line">new_post_name: :title.md        <span class="comment"># File name of new posts 新建文章默认文件名</span></div><div class="line">default_layout: post            <span class="comment"># 默认布局</span></div><div class="line">titlecase: <span class="literal">false</span>                <span class="comment"># Transform title into titlecase</span></div><div class="line">external_link: <span class="literal">true</span>             <span class="comment"># Open external links in new tab  在新标签中打开一个外部链接，默认为true</span></div><div class="line">filename_case: 0                <span class="comment">#转换文件名，1代表小写；2代表大写；默认为0，意思就是创建文章的时候，是否自动帮你转换文件名，默认就行，意义不大。</span></div><div class="line">render_drafts: <span class="literal">false</span>            <span class="comment">#是否渲染_drafts目录下的文章，默认为false</span></div><div class="line">post_asset_folder: <span class="literal">false</span>        <span class="comment">#启动 Asset 文件夹</span></div><div class="line">relative_link: <span class="literal">false</span>            <span class="comment">#把链接改为与根目录的相对位址，默认false</span></div><div class="line">future: <span class="literal">true</span>                    <span class="comment">#显示未来的文章，默认false</span></div><div class="line">highlight:    <span class="comment">#代码块的设置</span></div><div class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></div><div class="line">  line_number: <span class="literal">true</span></div><div class="line">  auto_detect: <span class="literal">false</span></div><div class="line">  tab_replace:</div><div class="line"><span class="comment"># 代码高亮主题</span></div><div class="line"><span class="comment"># available: default | night</span></div><div class="line">available: night</div><div class="line">highlight_theme: night  </div><div class="line"></div><div class="line"><span class="comment"># Category &amp; Tag  分类和标签的设置</span></div><div class="line">default_category: uncategorized   <span class="comment">#默认分类         </span></div><div class="line">category_map:                     <span class="comment">#分类别名 category_map 是为了让url中尽量少出现中文，做的映射。如下配置</span></div><div class="line"><span class="comment">#    编程: programming</span></div><div class="line"><span class="comment">#    生活: life</span></div><div class="line"><span class="comment">#    其他: other</span></div><div class="line">tag_map:                          <span class="comment">#标签别名</span></div><div class="line"></div><div class="line"><span class="comment"># Date / Time format</span></div><div class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></div><div class="line"><span class="comment">## You can customize the date format as defined in</span></div><div class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></div><div class="line">date_format: YYYY-MM-DD</div><div class="line">time_format: HH:mm:ss</div><div class="line"></div><div class="line"><span class="comment"># Pagination</span></div><div class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></div><div class="line">per_page: 10</div><div class="line">pagination_dir: page</div><div class="line"></div><div class="line"><span class="comment"># Extensions</span></div><div class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></div><div class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></div><div class="line"><span class="comment">#theme: landscape</span></div><div class="line">theme: jacman  <span class="comment">#主题</span></div><div class="line">stylus: </div><div class="line">  compress: <span class="literal">true</span></div><div class="line"><span class="comment"># Deployment</span></div><div class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></div><div class="line">deploy:</div><div class="line">  <span class="built_in">type</span>: git</div><div class="line">  repository: </div><div class="line">      github: git@github.com:xxxx/xxxxx.github.io.git <span class="comment">#部署到github pages</span></div><div class="line">      coding: git@git.coding.net:xxxx/xxxx.git <span class="comment">#部署到coding pages</span></div><div class="line">  branch: master <span class="comment">#上传到git服务的主分支上</span></div><div class="line"></div><div class="line"><span class="comment"># 自动生成sitemap</span></div><div class="line"><span class="comment">#sitemap:</span></div><div class="line"><span class="comment">#path: sitemap.xml</span></div><div class="line"><span class="comment">#baidusitemap:</span></div><div class="line"><span class="comment">#path: baidusitemap.xml</span></div><div class="line"><span class="comment"># Others</span></div><div class="line">index_generator:</div><div class="line">  per_page: 5 <span class="comment">##首页默认10篇文章标题 如果值为0不分页</span></div><div class="line">archive_generator:</div><div class="line">    per_page: 0 <span class="comment">##归档页面默认10篇文章标题</span></div><div class="line">    yearly: <span class="literal">true</span>  <span class="comment">##生成年视图</span></div><div class="line">    monthly: <span class="literal">true</span> <span class="comment">##生成月视图</span></div><div class="line">tag_generator:</div><div class="line">    per_page: 0 <span class="comment">##标签分类页面默认10篇文章</span></div><div class="line">category_generator: </div><div class="line">    per_page: 0 <span class="comment">###分类页面默认10篇文章</span></div><div class="line">feed:</div><div class="line">    <span class="built_in">type</span>: atom <span class="comment">##feed类型 atom或者rss2</span></div><div class="line">    path: atom.xml <span class="comment">##feed路径</span></div><div class="line">    <span class="built_in">limit</span>: 20  <span class="comment">##feed文章最小数量</span></div></pre></td></tr></table></figure><p></p><h4 id="优化jacman主题配置"><a href="#优化jacman主题配置" class="headerlink" title="优化jacman主题配置"></a>优化jacman主题配置</h4><p>修改你的博客主题根目录(F:\Blog\hexo\themes\下的_config.yml配置<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div></pre></td><td class="code"><pre><div class="line"><span class="comment">##### Menu  #一级菜单</span></div><div class="line">menu:</div><div class="line">  home: /</div><div class="line">  categories: /categories</div><div class="line">  tags: /tags</div><div class="line">  archives: /archives</div><div class="line">  life: /life</div><div class="line">  about: /about</div><div class="line"><span class="comment">## you can create `tags` and `categories` folders in `../source`.</span></div><div class="line"><span class="comment">## And create a `index.md` file in each of them.</span></div><div class="line"><span class="comment">## set `front-matter`as</span></div><div class="line"><span class="comment">## layout: tags (or categories)</span></div><div class="line"><span class="comment">## title: tags (or categories)</span></div><div class="line"><span class="comment">## ---</span></div><div class="line"></div><div class="line"><span class="comment">#### Widgets #内容区域的左侧内容</span></div><div class="line">widgets: </div><div class="line">- github-card</div><div class="line">- category</div><div class="line">- tag</div><div class="line">- hot</div><div class="line">- tagcloud</div><div class="line">- links</div><div class="line"><span class="comment">#- douban</span></div><div class="line">- weibo</div><div class="line">- rss</div><div class="line">  <span class="comment">## provide eight widgets:github-card,category,tag,rss,archive,tagcloud,links,weibo</span></div><div class="line">  </div><div class="line"><span class="comment">#### RSS </span></div><div class="line">rss: /atom.xml <span class="comment">## RSS address.</span></div><div class="line"></div><div class="line"><span class="comment">#### Image  #网站相关logo图片 及主题颜色</span></div><div class="line">imglogo:</div><div class="line">  <span class="built_in">enable</span>: <span class="literal">true</span>             <span class="comment">## display image logo true/false.</span></div><div class="line">  src: img/logo.png        <span class="comment">## `.svg` and `.png` are recommended,please put image into the theme folder `/jacman/source/img`.</span></div><div class="line">favicon: img/favicon.ico   <span class="comment">## size:32px*32px,`.ico` is recommended,please put image into the theme folder `/jacman/source/img`.     </span></div><div class="line">apple_icon: img/jacman.jpg <span class="comment">## size:114px*114px,please put image into the theme folder `/jacman/source/img`.</span></div><div class="line">author_img: img/author.jpg <span class="comment">## size:220px*220px.display author avatar picture.if don't want to display,please don't set this.</span></div><div class="line">banner_img: <span class="comment">#img/banner.jpg ## size:1920px*200px+. Banner Picture</span></div><div class="line"><span class="comment">### Theme Color #主题颜色</span></div><div class="line">theme_color:</div><div class="line">    theme: <span class="string">'#2ca6cb'</span>    <span class="comment">##the defaut theme color is blue</span></div><div class="line"></div><div class="line"><span class="comment"># 代码高亮主题</span></div><div class="line"><span class="comment"># available: default | night</span></div><div class="line">available: night</div><div class="line">highlight_theme: night</div><div class="line"></div><div class="line"><span class="comment">#### index post is expanding or not  该主题首页文章列表默认是全部展开，这里关闭，只展示标题和描述</span></div><div class="line">index:</div><div class="line">  expand: <span class="literal">false</span>   <span class="comment">## default is unexpanding,so you can only see the short description of each post.</span></div><div class="line">  excerpt_link: Read More  </div><div class="line"></div><div class="line">close_aside: <span class="literal">false</span>  <span class="comment">#close sidebar in post page if true</span></div><div class="line">mathjax: <span class="literal">false</span>      <span class="comment">#enable mathjax if true</span></div><div class="line"></div><div class="line"><span class="comment">### Creative Commons License Support, see http://creativecommons.org/ </span></div><div class="line"><span class="comment">### you can choose: by , by-nc , by-nc-nd , by-nc-sa , by-nd , by-sa , zero</span></div><div class="line">creative_commons: none</div><div class="line"></div><div class="line"><span class="comment">#### Author information  #作者信息</span></div><div class="line">author:</div><div class="line">  intro_line1:  <span class="string">"Hello ,I'm troylc Page in github."</span>    <span class="comment">## your introduction on the bottom of the page</span></div><div class="line">  intro_line2:  <span class="string">"This is my blog,believe it or not."</span>  <span class="comment">## the 2nd line</span></div><div class="line">  weibo_verifier: 0f81d6c8    <span class="comment">## e.g. 0f81d6c8 Your weibo-show widget verifier ,if you use weibo-show it is needed.</span></div><div class="line">  tsina: xxxxxx    <span class="comment">## e.g. xxxxxx  Your weibo ID,It will be used in share button.</span></div><div class="line">  weibo: xxxxxx     <span class="comment">## e.g. xxxxx or xxxxx for http://weibo.com/xxxxxx</span></div><div class="line">  douban:     <span class="comment">## e.g. wuchong1014 or your id for https://www.douban.com/people/wuchong1014</span></div><div class="line">  zhihu:      <span class="comment">## e.g. jark  for http://www.zhihu.com/people/jark</span></div><div class="line">  email:      <span class="comment">## e.g. imjark@gmail.com</span></div><div class="line">  twitter:    <span class="comment">## e.g. jarkwu for https://twitter.com/jarkwu</span></div><div class="line">  github: xxxxx     <span class="comment">## e.g. xxxxxx for https://github.com/xxxxx</span></div><div class="line">  facebook:   <span class="comment">## e.g. imjark for https://facebook.com/imjark</span></div><div class="line">  linkedin:   <span class="comment">## e.g. wuchong1014 for https://www.linkedin.com/in/wuchong1014</span></div><div class="line">  google_plus:    <span class="comment">## e.g. "111190881341800841449" for https://plus.google.com/u/0/111190881341800841449, the "" is needed!</span></div><div class="line">  stackoverflow:  <span class="comment">## e.g. 3222790 for http://stackoverflow.com/users/3222790/jark</span></div><div class="line"><span class="comment">## if you set them, the corresponding  share button will show on the footer</span></div><div class="line"></div><div class="line"><span class="comment">#### Toc</span></div><div class="line">toc:</div><div class="line">  article: <span class="literal">true</span>   <span class="comment">## show contents in article.</span></div><div class="line">  aside: <span class="literal">true</span>     <span class="comment">## show contents in aside.</span></div><div class="line"><span class="comment">## you can set both of the value to true of neither of them.</span></div><div class="line"><span class="comment">## if you don't want display contents in a specified post,you can modify `front-matter` and add `toc: false`.</span></div><div class="line"></div><div class="line"><span class="comment">#### Links</span></div><div class="line">links:</div><div class="line">  攻城狮: https://www.troylc.cc/，一个面向程序员交流分享的博客</div><div class="line">  troylc<span class="string">'s Blog: https://www.troylc.cc/</span></div><div class="line"></div><div class="line">#### Comment</div><div class="line">duoshuo_shortname: xxxx   ## e.g. xxxx   your duoshuo short name.</div><div class="line">disqus_shortname:     ## e.g. wuchong   your disqus short name.</div><div class="line"></div><div class="line"># You can visit https://leancloud.cn get AppID and AppKey.</div><div class="line">#leancloud_visitors:</div><div class="line">#  enable: true</div><div class="line">#  app_id: CqxYlI0bMsyMrs3ODUxr2mpV-gzGzoHsz # your app_id</div><div class="line">#  app_key eX5MnY61mQfgQx2aiXnajze5 # your app_key</div><div class="line"></div><div class="line">#### Share button 采用jiathis分享</div><div class="line">jiathis: </div><div class="line">  enable: true ## if you use jiathis as your share tool,the built-in share tool won't be display.</div><div class="line">  id: xxxxx   <span class="comment">## e.g. 1889330 your jiathis ID. </span></div><div class="line">  tsina: xxxxx2176287895 Your weibo id,It will be used <span class="keyword">in</span> share button.</div><div class="line"></div><div class="line"><span class="comment">#### Analytics</span></div><div class="line">google_analytics:</div><div class="line">  <span class="built_in">enable</span>: <span class="literal">false</span></div><div class="line">  id:        <span class="comment">## e.g. UA-46321946-2 your google analytics ID.</span></div><div class="line">  site:      <span class="comment">## e.g. wuchong.me your google analytics site or set the value as auto.</span></div><div class="line"><span class="comment">## You MUST upgrade to Universal Analytics first!</span></div><div class="line"><span class="comment">## https://developers.google.com/analytics/devguides/collection/upgrade/?hl=zh_CN</span></div><div class="line">baidu_tongji:</div><div class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></div><div class="line">  sitecode: b991924b21<span class="built_in">cd</span>080f0a0e761dd1a69288 <span class="comment">## e.g. b991924b21cd080f0a0e761dd1a69288 your baidu tongji site code</span></div><div class="line">cnzz_tongji:</div><div class="line">  <span class="built_in">enable</span>: <span class="literal">false</span></div><div class="line">  siteid:    <span class="comment">## e.g. 1253575964 your cnzz tongji site id</span></div><div class="line"></div><div class="line"><span class="comment">#### Miscellaneous</span></div><div class="line">ShowCustomFont: <span class="literal">true</span>  <span class="comment">## you can change custom font in `variable.styl` and `font.styl` which in the theme folder `/jacman/source/css`.</span></div><div class="line">fancybox: <span class="literal">true</span>        <span class="comment">## if you use gallery post or want use fancybox please set the value to true.</span></div><div class="line">totop: <span class="literal">true</span>           <span class="comment">## if you want to scroll to top in every post set the value to true返回顶部按钮，totop。在博客右下脚显示一件返回顶部按钮</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">#### Custom Search</span></div><div class="line">google_cse: </div><div class="line">  <span class="built_in">enable</span>: <span class="literal">false</span></div><div class="line">  cx:   <span class="comment">## e.g. 018294693190868310296:abnhpuysycw your Custom Search ID.</span></div><div class="line"><span class="comment">## https://www.google.com/cse/ </span></div><div class="line"><span class="comment">## To enable the custom search You must create a "search" folder in '/source' and a "index.md" file</span></div><div class="line"><span class="comment">## set the 'front-matter' as</span></div><div class="line"><span class="comment">## layout: search </span></div><div class="line"><span class="comment">## title: search</span></div><div class="line"><span class="comment">## ---</span></div><div class="line">baidu_search:     <span class="comment">## http://zn.baidu.com/  极速体验版本http://zn.baidu.com/cse/wiki/index?category_id=25</span></div><div class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></div><div class="line">  id: troylc.cc  <span class="comment">## e.g. "783281470518440642"  for your baidu search id</span></div><div class="line">  site: http://zhannei.baidu.com/cse/site  <span class="comment">## your can change to your site instead of the default site</span></div><div class="line">  </div><div class="line">tinysou_search:     <span class="comment">## http://tinysou.com/</span></div><div class="line">  <span class="built_in">enable</span>: <span class="literal">false</span></div><div class="line">  id:  <span class="comment">## e.g. "4ac092ad8d749fdc6293" for your tiny search id</span></div><div class="line"></div><div class="line"><span class="comment">#swiftype搜索</span></div><div class="line">swift_search:</div><div class="line">  <span class="built_in">enable</span>: <span class="literal">false</span></div></pre></td></tr></table></figure><p></p><p>注意：凡是有XXXXX处的，都要换成自己对应的账号。</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="http://jacman.wuchong.me/2014/11/20/how-to-use-jacman/" title="如何使用Jacman主题" target="_blank" rel="external">如何使用Jacman主题</a><br><a href="https://github.com/wuchong/jacman" title="jacman-github" target="_blank" rel="external">jacman-github</a></p><p>后续针对具体的jacman的首页和文章页进行优化。持续更新中</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;上一篇博文把我们的博客已经部署到了github pages服务上，别人可以通过网址来登陆我们的博客了，但是我们这时博客并不好看，怎么优化he
    
    </summary>
    
      <category term="hexo" scheme="http://xinliu.vip/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://xinliu.vip/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo教程(一)-hexo环境搭建</title>
    <link href="http://xinliu.vip/xinliu/7172bdf7/"/>
    <id>http://xinliu.vip/xinliu/7172bdf7/</id>
    <published>2017-08-01T14:55:06.000Z</published>
    <updated>2018-03-30T14:45:29.762Z</updated>
    
    <content type="html"><![CDATA[<h3 id="hexo-Github-Pages静态博客"><a href="#hexo-Github-Pages静态博客" class="headerlink" title="hexo-Github Pages静态博客"></a>hexo-Github Pages静态博客</h3><h4 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h4><p>在 Windows7 64 环境下安装 Node.js 非常简单，仅须到<a href="https://nodejs.org/en/download/" title="nodejs官网" target="_blank" rel="external">官网</a>下载安装文件并执行即可完成安装<br><img src="https://raw.githubusercontent.com/EARL8888/picturePath/master/Hexo/nodejs.jpg" alt="nodejs官网下载"></p><h4 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h4><p>从<a href="https://git-scm.com/download" title="git下载" target="_blank" rel="external">git官网</a>下载git并执行即可完成安装。<a href="http://jingyan.baidu.com/article/90895e0fb3495f64ed6b0b50.html" title="windows安装过程" target="_blank" rel="external">安装过程</a>。安装完后，右击鼠标选择 git bash here<br><img src="https://raw.githubusercontent.com/EARL8888/picturePath/master/Hexo/git.png" alt="git窗口"></p><ul><li>Git教程：<a href="http://git.oschina.net/progit/" title="git教程" target="_blank" rel="external">Pro Git（中文版）</a></li><li>git基本操作：</li></ul><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>git init</td><td>git init 在目录中创建新的 Git 仓库。 你可以在任何时候、任何目录中这么做，完全是本地化的</td></tr><tr><td>git clone</td><td>使用 git clone 拷贝一个 Git 仓库到本地，让自己能够查看该项目，或者进行修改。</td></tr><tr><td>git add</td><td>git add 命令可将该文件添加到缓存</td></tr><tr><td>git status</td><td>git status 以查看在你上次提交之后是否有修改。加 -s 参数，以获得简短的结果输出。</td></tr><tr><td>git commit</td><td>执行 git commit 将缓存区内容添加到本地仓库中</td></tr><tr><td>git push</td><td>推送本地仓库的更新到远程仓库，语法git push [远程仓库名][本地分支][远程分支]</td></tr><tr><td>git pull</td><td>抓取远程仓库所有分支更新并合并到本地仓库</td></tr></tbody></table><h4 id="hexo环境安装"><a href="#hexo环境安装" class="headerlink" title="hexo环境安装"></a>hexo环境安装</h4><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><h5 id="Hexo安装"><a href="#Hexo安装" class="headerlink" title="Hexo安装"></a>Hexo安装</h5><p>桌面右键鼠标，点击Git Bash Here，输入npm命令即可安装(Mac 需要 sudo权限)<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">npm install hexo-cli -g</div><div class="line">npm install hexo --save</div><div class="line"><span class="comment">#如果命令无法运行，可以尝试更换taobao的npm源，[http://npm.taobao.org](http://npm.taobao.org "淘宝npm源说明") ,请进入查看相关说明</span></div><div class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</div></pre></td></tr></table></figure><p></p><h5 id="Hexo初始化配置"><a href="#Hexo初始化配置" class="headerlink" title="Hexo初始化配置"></a>Hexo初始化配置</h5><p>安装完成后，根据自己喜好建立目录（如F:\Blog\Hexo），直接进入F:\Blog\Hexo文件夹下右键鼠标，点击Git Bash Here，进入Git命令框，执行以下操作。<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo init</div><div class="line">$ npm install</div></pre></td></tr></table></figure><p></p><p>安装 Hexo 完成后，Hexo 将会在指定文件夹中新建所需要的文件。Hexo文件夹下的目录如下：<br><img src="https://raw.githubusercontent.com/EARL8888/picturePath/master/Hexo/hexo-dir.png" alt="hexo初始化目录"><br>下面依次介绍上面各个文件或者目录的用途：</p><ul><li>_config.yml 站点配置文件，很多全局配置都在这个文件中。</li><li>package.json 应用数据。从它可以看出hexo版本信息，以及它所默认或者说依赖的一些组件。</li><li>scaffolds 模版文件。当你创建一篇新的文章时，hexo会依据模版文件进行创建，主要用在你想在每篇文章都添加一些共性的内容的情况下。</li><li>source 这个文件夹就是放文章的地方了，除了文章还有一些主要的资源，比如文章里的图片，文件等等东西。这个文件夹最好定期做一个备份，丢了它，整个站点就废了。</li><li>themes 主题文件夹。</li></ul><h5 id="安装Hexo插件"><a href="#安装Hexo插件" class="headerlink" title="安装Hexo插件"></a>安装Hexo插件</h5><p>如果想不出错，就将下面的插件都安装完。（如果用淘宝源，请把npm换成cnpm）<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-index --save</div><div class="line">npm install hexo-generator-archive --save</div><div class="line">npm install hexo-generator-category --save</div><div class="line">npm install hexo-generator-tag --save</div><div class="line">npm install hexo-server --save</div><div class="line">npm install hexo-deployer-git --save</div><div class="line">npm install hexo-deployer-heroku --save</div><div class="line">npm install hexo-deployer-rsync --save</div><div class="line">npm install hexo-deployer-openshift --save</div><div class="line">npm install hexo-renderer-marked@0.2 --save</div><div class="line">npm install hexo-renderer-stylus@0.2 --save</div><div class="line">npm install hexo-generator-feed@1 --save</div><div class="line">npm install hexo-generator-sitemap@1 --save</div></pre></td></tr></table></figure><p></p><h5 id="本地查看效果"><a href="#本地查看效果" class="headerlink" title="本地查看效果"></a>本地查看效果</h5><p>执行下面语句，执行完即可登录localhost:4000查看效果<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo generate</div><div class="line">hexo server</div></pre></td></tr></table></figure><p></p><p>登录localhost:4000，即可看到本地的效果如下：<br><img src="https://raw.githubusercontent.com/EARL8888/picturePath/master/Hexo/hexo-view.png" alt="hexo初始化目录"></p><h4 id="将博客部署Github-Pages上"><a href="#将博客部署Github-Pages上" class="headerlink" title="将博客部署Github Pages上"></a>将博客部署Github Pages上</h4><p>本地的博客已经搭建起来了，但是目前只可以通过本地服务查看我们的博客。现在需要做的就是把本地的博客发布到Github服务器上，通过Github Pages这个功能让别人也可以访问我们的博客，而Github Pages就帮我完成了这件事情。但是Github Pages的代码就是寄存在Github上面的。所以需要在Github上面创建一个新的项目。</p><h5 id="注册Github账户创建代码库"><a href="#注册Github账户创建代码库" class="headerlink" title="注册Github账户创建代码库"></a>注册Github账户创建代码库</h5><ol><li>访问<a href="http://www.github.com/" target="_blank" rel="external">Github</a>首页</li><li>点击右上角的 Sign Up，注册自己的账户</li><li>注册完登陆后，我们就创建一个我们自己的Github Pages项目。点击New repository.创建要点如下：<br><img src="https://raw.githubusercontent.com/EARL8888/picturePath/master/Hexo/github-reposity.png" alt="github reposity"></li></ol><h5 id="配置SSH密钥"><a href="#配置SSH密钥" class="headerlink" title="配置SSH密钥"></a>配置SSH密钥</h5><ol><li>看看是否存在SSH密钥(keys)<br>首先，我们需要看看是否看看本机是否存在SSH keys,打开Git Bash,并运行:<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> ~/. ssh</div></pre></td></tr></table></figure></li></ol><p>检查你本机用户home目录下是否存在.ssh目录<br>如果，不存在此目录，则进行第二步操作，否则，你本机已经存在ssh公钥和私钥，可以略过第二步，直接进入第三步操作。</p><ol><li><p>创建一对新的SSH密钥(keys)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#输入 ssh-keygen -t rsa -C "xxxxx@126.com" 这将按照你提供的邮箱地址，创建一对密钥</span></div><div class="line">$ ssh-keygen -t rsa -C <span class="string">"xxxxx@126.com"</span></div><div class="line">Generating public/private rsa key pair.</div><div class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/c/Users/Administrator/.ssh/id_rsa): 回车，则将密钥按默认文件进行存储 c/Users/you/.ssh/github_rsa</div><div class="line">Created directory <span class="string">'/c/Users/Administrator/.ssh'</span>.</div><div class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase): 输入密码，</div><div class="line">Enter same passphrase again: 确认密码</div><div class="line">Your identification has been saved <span class="keyword">in</span> /c/Users/Administrator/.ssh/id_rsa.</div><div class="line">Your public key has been saved <span class="keyword">in</span> /c/Users/Administrator/.ssh/id_rsa.pub.</div><div class="line">The key fingerprint is:</div><div class="line">SHA256:j9GCdXhgo+Up1af6XB/E9yZDv8XyZsZNXIA917q/72U xxxxx@126.com</div><div class="line">The key<span class="string">'s randomart image is:</span></div><div class="line">+---[RSA 2048]----+</div><div class="line">|        *.   o  .|</div><div class="line">|       * =. o + o|</div><div class="line">|      o = oo . = |</div><div class="line">|       + +.   = o|</div><div class="line">|      . S..  o *o|</div><div class="line">|        .=  . * O|</div><div class="line">|        .o.. . @E|</div><div class="line">|          o   .oX|</div><div class="line">|               *=|</div><div class="line">+----[SHA256]-----+</div></pre></td></tr></table></figure></li><li><p>在GitHub账户中添加你的公钥<br>直接用文本打开当前用户目录下的.ssh/id_rsa.pub文件，复制文件中的内容<br>登陆GitHub,进入你的Account Settings.<br><img src="https://raw.githubusercontent.com/EARL8888/picturePath/master/Hexo/github-settings.png" alt="github settings"><br>选择New SSH Keys<br><img src="https://raw.githubusercontent.com/EARL8888/picturePath/master/Hexo/github-sshkey.png" alt="github sshkey"><br>粘贴密钥，添加即可<br><img src="https://raw.githubusercontent.com/EARL8888/picturePath/master/Hexo/ithub-SSH-OK.png" alt="github sshkey"></p></li><li>测试SSH密钥<br>可以输入下面的命令，看看设置是否成功，git@github.com的部分不要修改：<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh -T git@github.com</div></pre></td></tr></table></figure></li></ol><p>如果是下面的反馈，表示成功：<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ ssh -T git@github.com</div><div class="line">The authenticity of host <span class="string">'github.com (192.30.252.123)'</span> can<span class="string">'t be established.</span></div><div class="line">RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.</div><div class="line">Are you sure you want to continue connecting (yes/no)? yes  不要紧张，输入yes就好，然后会看到：</div><div class="line">Warning: Permanently added 'github.com,192.30.252.123<span class="string">' (RSA) to the list of known hosts.</span></div><div class="line">Enter passphrase for key '/c/Users/Administrator/.ssh/id_rsa<span class="string">': 输入上面的创建SSHKEY的密码</span></div><div class="line">Hi troychn! You've successfully authenticated, but GitHub does not provide shell access.</div></pre></td></tr></table></figure><p></p><p>如果出现以下问题，没有权限<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ ssh -T git@github.com</div><div class="line">The authenticity of host <span class="string">'github.com (192.30.252.120)'</span> can<span class="string">'t be established.</span></div><div class="line">RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.</div><div class="line">Are you sure you want to continue connecting (yes/no)? yes</div><div class="line">Warning: Permanently added 'github.com,192.30.252.120<span class="string">' (RSA) to the list of known hosts.</span></div><div class="line">**Permission denied (publickey).**</div></pre></td></tr></table></figure><p></p><p>解决办法：<br>重新执行:第二步、创建一对新的SSH密钥(keys) 最好是输入密码,然后一步一步往下走，直至测试这步<br>如还有问题，请参考：<br>GitHub Help - <a href="https://help.github.com/articles/generating-an-ssh-key/" title="Generating an SSH key" target="_blank" rel="external">Generating SSH Keys</a><br>Error: <a href="https://help.github.com/articles/error-permission-denied-publickey/" title="Permission denied (publickey)" target="_blank" rel="external">Permission denied (publickey)</a></p><h5 id="将本地Hexo文件更新到Github库中"><a href="#将本地Hexo文件更新到Github库中" class="headerlink" title="将本地Hexo文件更新到Github库中"></a>将本地Hexo文件更新到Github库中</h5><p>登录Github打开上面创建的的项目 username.github.io 复制地址<br><img src="https://raw.githubusercontent.com/EARL8888/picturePath/master/Hexo/cp-githubaddr.png" alt="github sshkey"><br>打开你一开始创建的Hexo文件夹（如F:\Blog\Hexo），用记事本打开刚文件夹下的_config.yml文件<br><img src="https://raw.githubusercontent.com/EARL8888/picturePath/master/Hexo/git-gitml_4.png" alt="github sshkey"><br>在配置文件里作如下修改，保存<br><img src="https://raw.githubusercontent.com/EARL8888/picturePath/master/Hexo/cp-githubaddr-2.png" alt="github sshkey"><br>在Hexo文件夹下执行，右击打开git bash here 执行以下命令 ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo g <span class="_">-d</span></div></pre></td></tr></table></figure><p>执行完之后会让你输入github的账号和密码，输入完后就可以登录我们自己的部署在Github Pages服务器上的博客了。对应的地址是 username.github.io。<br><img src="https://raw.githubusercontent.com/EARL8888/picturePath/master/Hexo/username-passw.png" alt="github sshkey"><br>在浏览器上输入自己的主页地址 （<a href="https://username.github.io/）username为你的github账号" target="_blank" rel="external">https://username.github.io/）username为你的github账号</a><br>在浏览器上输入即可看到我们自己的博客，别人电脑输入也可以哦。<br><img src="https://raw.githubusercontent.com/EARL8888/picturePath/master/Hexo/view-cg.png" alt="github sshkey"></p><h4 id="开始编写一篇博客文章"><a href="#开始编写一篇博客文章" class="headerlink" title="开始编写一篇博客文章"></a>开始编写一篇博客文章</h4><h5 id="创建一个新文章："><a href="#创建一个新文章：" class="headerlink" title="创建一个新文章："></a>创建一个新文章：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new [layout] &lt;title&gt;</div></pre></td></tr></table></figure><p>默认的文章布局是 post ，当然你可用提供自己的布局文件。你可以编辑_config.yml 修改默认布局。<br>Layout（布局）Hexo提供了3个默认布局： post 、 page 和 draft 。不同布局的文章会被保存到不同的目录，这取决于它的布局类型。 自定义布局保存到 source/_posts 文件夹。</p><table><thead><tr><th>布局</th><th>路径</th></tr></thead><tbody><tr><td>post</td><td>source/_posts</td></tr><tr><td>page</td><td>source</td></tr><tr><td>draft</td><td>source/_drafts</td></tr></tbody></table><p>对应三个布局，有三个相对应的模板文件(draft.md,page.md,post.md)在F:\Blog\hexo\scaffolds目录下,模板文件的格式设置以及默认值：</p><table><thead><tr><th>设置</th><th>描述</th></tr></thead><tbody><tr><td>layout</td><td>布局</td></tr><tr><td>title</td><td>文章标题</td></tr><tr><td>date</td><td>发布时间，默认为文件创建时间</td></tr><tr><td>updated</td><td>文件修改时间</td></tr><tr><td>comments</td><td>是否开启评论，默认为true</td></tr><tr><td>tags</td><td>文章标签</td></tr><tr><td>categories</td><td>文章所属分类</td></tr><tr><td>permalink</td><td>文章永久链接，一般不用写，默认就行</td></tr></tbody></table><p>如我这里的post.md的内容为：<br></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">layout:  #文章布局 ---------#默认文章的模板-hexo new "title" 就会以这个模板创建文</div><div class="line">title: &#123;&#123; title &#125;&#125; #文章标题</div><div class="line">date: &#123;&#123; date &#125;&#125; #时间，一般不用改</div><div class="line">updated: &#123;&#123; date &#125;&#125;  # 更新时间</div><div class="line">comments:  #是否开启评论，默认为true</div><div class="line">categories:  #目录分类</div><div class="line">tags:  #标签，格式可以是[Hexo,总结]，中间用英文逗号分开 hexo new "text"  报错YAMLException: duplicated mapping key at line 6, column 1: 因为模板中有两个tags:</div><div class="line">permalink:  #文章永久链接，一般不用写，默认就行</div></pre></td></tr></table></figure><p></p><h5 id="创建Drafts（草稿）"><a href="#创建Drafts（草稿）" class="headerlink" title="创建Drafts（草稿）"></a>创建Drafts（草稿）</h5><p>前面hexo提到一个特殊的布局： draft 。 这种布局的帖子保存到source/_drafts 文件夹。你可以使用 publish 命令移动草稿到 source/_posts文件夹。 这个命令类似于你使用了 new 。<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo publish [layout] &lt;title&gt;</div></pre></td></tr></table></figure><p></p><p>草稿默认不显示，你可以添加 –draft 选项或者设置 _config.yml 中的render_drafts 使hexo显示草稿。</p><p>到此利用github Pages 搭建hexo静态博客就成功了，下一篇准备美化我们的博客。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;hexo-Github-Pages静态博客&quot;&gt;&lt;a href=&quot;#hexo-Github-Pages静态博客&quot; class=&quot;headerlink&quot; title=&quot;hexo-Github Pages静态博客&quot;&gt;&lt;/a&gt;hexo-Github Pages静态博客&lt;/
    
    </summary>
    
      <category term="hexo" scheme="http://xinliu.vip/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://xinliu.vip/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>如何使用 Jacman 主题</title>
    <link href="http://xinliu.vip/xinliu/3c8dcb15/"/>
    <id>http://xinliu.vip/xinliu/3c8dcb15/</id>
    <published>2017-08-01T14:47:36.000Z</published>
    <updated>2018-03-30T14:45:29.765Z</updated>
    
    <content type="html"><![CDATA[<p></p><div class="article-content"><p></p><p></p><p><a href="https://github.com/wuchong/jacman" target="_blank" rel="external">Jacman</a> 是一款扁平化，有着响应式设计的 <a href="http://http://hexo.io/" target="_blank" rel="external">Hexo</a> 主题。本站正式使用了 Jacman 主题。Jacman 基于 <a href="https://github.com/A-limon/pacman" target="_blank" rel="external">Pacman</a> 主题修改而来，目前已有很多特性与原主题不同。你可以前往 <a href="http://wuchong.me" target="_blank" rel="external">本站</a> 和 <a href="http://wuchong.me/jacman" target="_blank" rel="external">Demo</a> 预览更多关于本主题的更多效果。如果你有任何问题或意见欢迎到 GitHub 发表 <a href="https://github.com/wuchong/jacman/issues" target="_blank" rel="external">issue</a>。</p><p></p><p></p><p>距离当初我把 Jacman 开源至今已有半年零一周了，在这半年里也一直保持着对 Jacman 的更新。看到很多人用这款主题，fork&amp;star 数也越来越好看，我也更有动力继续完善 Jacman。Jacman 自然还有很多改进空间，首先是文档问题，有许多人通过博客、微博、QQ 询问我有关主题的问题，我也意识到之前写的帮助手册可读性太差。正好趁着这次 Jacman 大更新，写篇更详尽、readable 的手册。</p><p></p><p></p><h2 id="安装指南">安装指南</h2><p></p><p></p><h3 id="安装">安装</h3><p></p><p></p><p>在博客根目录下执行如下命令。</p><p></p><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>git clone <span class="symbol">https:</span>/<span class="regexp">/github.com/wuchong</span><span class="regexp">/jacman.git themes/jacman</span></div></pre></td></tr></tbody></table></figure><p></p><p>Jacman 需要安装 Hexo 2.7 及以上版本，请先升级您的 Hexo 程序，再启用此主题。</p><p></p><p></p><h3 id="启用">启用</h3><p></p><p></p><p>修改你的博客根目录下的<code>_config.yml</code>配置文件中的<code>theme</code>属性，将其设置为<code>jacman</code>。同时建议设置<code>stylus</code>属性中的<code>compress</code>值为true，会自动压缩 CSS 文件，hexo默认配置中不包含这一项，建议开启。如下。</p><p></p><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">theme: jacman</div><div class="line">stylus:</div><div class="line">  <span class="built_in">compress</span>: <span class="constant">true</span></div></pre></td></tr></tbody></table></figure><p></p><h3 id="更新">更新</h3><p></p><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> themes/jacman</div><div class="line">git pull origin master</div></pre></td></tr></tbody></table></figure><p></p><p>请先备份您主题目录下的 <code>_config.yml</code> 文件后再升级。</p><p></p><p></p><p><a id="more"></a></p><p></p><p></p><h2 id="配置指南">配置指南</h2><p></p><p></p><p>Jacman 主题提供了丰富的配置属性，可以实现您对主题的自定义。配置文件<code>_config.yml</code>位于主题根目录下。本次更新对配置文件进行了较大调整，如您之前就使用了 Jacman，也需要您根据以下指南进行相应的修改。</p><p></p><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div></pre></td><td class="code"><pre><div class="line"><span class="comment">##### 菜单</span></div><div class="line">menu:</div><div class="line">  主页: /</div><div class="line">  归档: /archives</div><div class="line">  关于: /about</div><div class="line"></div><div class="line"><span class="comment">#### 控件</span></div><div class="line">widgets: </div><div class="line">- category</div><div class="line">- tag</div><div class="line">- links</div><div class="line">- rss</div><div class="line"></div><div class="line"><span class="comment">#### RSS </span></div><div class="line">rss: /atom.xml </div><div class="line"></div><div class="line"><span class="comment">#### 图片相关</span></div><div class="line">imglogo:</div><div class="line">  enable: <span class="literal">true</span>               <span class="comment">## 是否显示网站 logo</span></div><div class="line">  src: img/logo.png        </div><div class="line">favicon: img/favicon.ico     <span class="comment">## 网站图标    </span></div><div class="line">apple_icon: img/jacman.jpg   <span class="comment">## 苹果设备上的图标，背景不要透明</span></div><div class="line">author_img: img/author.jpg   <span class="comment">## 网站底部的博主头像</span></div><div class="line"></div><div class="line"><span class="comment">#### 首页相关</span></div><div class="line">index:</div><div class="line">  expand: <span class="literal">true</span>              <span class="comment">## 首页文章是否展开。默认为展开式，显示 Read More。</span></div><div class="line">  excerpt_link: Read More    </div><div class="line">  </div><div class="line"><span class="comment">#### 作者信息</span></div><div class="line">author:</div><div class="line">  intro_line1:  <span class="string">“Hello ,I’m Larry Page in Google.”</span>    <span class="comment">## 网站底部的个人介绍</span></div><div class="line">  intro_line2:  <span class="string">“This is my blog,believe it or not.”</span>  </div><div class="line">  weibo_verifier:  <span class="comment">## 微博秀的验证码</span></div><div class="line">  tsina:           <span class="comment">## 用于微博秀和微博分享</span></div><div class="line">  weibo:           <span class="comment">## 用于显示网站底部社交按钮，下同</span></div><div class="line">  douban:         </div><div class="line">  zhihu:  </div><div class="line">  email:     </div><div class="line">  twitter:   </div><div class="line">  github:     </div><div class="line">  facebook: </div><div class="line">  linkedin:   </div><div class="line">  google_plus:   </div><div class="line">  stackoverflow:  </div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">#### 目录</span></div><div class="line">toc:</div><div class="line">  article: <span class="literal">true</span>   <span class="comment">## 是否在文章中显示目录</span></div><div class="line">  aside: <span class="literal">true</span>     <span class="comment">## 是否在侧边栏显示目录</span></div><div class="line"></div><div class="line"><span class="comment">#### 友情链接</span></div><div class="line">links:</div><div class="line">  Jark’s Blog: <a href="http://wuchong.me" target="_blank" rel="external">http://wuchong.me</a></div><div class="line">  Hexo: <a href="http://hexo.io" target="_blank" rel="external">http://hexo.io</a></div><div class="line">  </div><div class="line"><span class="comment">#### 评论</span></div><div class="line">duoshuo_shortname: </div><div class="line">disqus_shortname:  </div><div class="line"></div><div class="line"><span class="comment">#### 分享按钮</span></div><div class="line">jiathis:</div><div class="line">  enable: <span class="literal">false</span>   <span class="comment">## 默认使用主题内建分享</span></div><div class="line">  id:    </div><div class="line">  tsina: </div><div class="line">  </div><div class="line"><span class="comment">#### 网站统计</span></div><div class="line">google_analytics:</div><div class="line">  enable: <span class="literal">false</span></div><div class="line">  id:            <span class="comment">## google analytics ID.</span></div><div class="line">  site:          <span class="comment">## 网站地址.</span></div><div class="line">baidu_tongji:</div><div class="line">  enable: <span class="literal">false</span></div><div class="line">  sitecode:      <span class="comment">## 百度统计站点特征码</span></div><div class="line">cnzz_tongji:</div><div class="line">  enable: <span class="literal">false</span></div><div class="line">  siteid:        <span class="comment">## CNZZ统计站点ID</span></div><div class="line"></div><div class="line"><span class="comment">#### 杂项</span></div><div class="line">ShowCustomFont: <span class="literal">true</span>  </div><div class="line">fancybox: <span class="literal">true</span>        </div><div class="line">totop: <span class="literal">true</span>           </div><div class="line"></div><div class="line"><span class="comment">#### 自定义搜索</span></div><div class="line">google_cse: </div><div class="line">  enable: <span class="literal">false</span></div><div class="line">  cx:  </div><div class="line">baidu_search:    </div><div class="line">  enable: <span class="literal">false</span></div><div class="line">  id:   </div><div class="line">  site: <a href="http://zhannei.baidu.com/cse/search" target="_blank" rel="external">http://zhannei.baidu.com/cse/search</a></div></pre></td></tr></tbody></table></figure><p></p><h3 id="属性功能">属性功能</h3><p></p><ul><br><li><strong>菜单 menu</strong><br>默认没有启用 <code>/tags</code> 和 <code>/categories</code>页面，如果需要启用请在博客目录下的<code>source</code>文件夹中分别建立<code>tags</code> 和 <code>categories</code>文件夹每个文件夹中分别包含一个<code>index.md</code>文件。内容为：</li><br></ul><br><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">layout: tags (或categories)</div><div class="line"><span class="header">title: tags (或categories)</span></div><div class="line">—</div></pre></td></tr></tbody></table></figure><br><br><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;因为主题中已经内置了这两个页面的模板，所以他们会被正确的解析出来。</p><br><ul><br><li><p><strong>控件 widgets</strong><br>提供了7种小工具。包括标签、标签云、分类、归档、RSS、友情链接、微博秀。</p><br><p><strong>友情链接</strong>：友情链接的网址添加可以在<code>links</code>属性下添加。</p><br><p><strong>微博秀</strong>：需要注意的是，如果要启用微博秀，您必须填上<code>author</code>属性下<code>tsina</code>和<code>weibo_verifier</code>的值，前者是您微博ID，后者是您微博秀的验证码，访问 <a href="http://app.weibo.com/tool/weiboshow" target="_blank" rel="external">http://app.weibo.com/tool/weiboshow</a> 在如下图位置，可以获得您的 verifier，如：我的是<code>b3593ceb</code>。<br><a href="http://ww1.sinaimg.cn/large/81b78497jw1emegd6b0ytj209204pweu.jpg" class="fancybox" rel="external" target="_blank"><img src="http://ww1.sinaimg.cn/large/81b78497jw1emegd6b0ytj209204pweu.jpg" alt=""></a></p><br></li><br><li><p><strong>图片相关 Image</strong><br>本主题可以设置网站相关图片，例如网站图标（<code>favicon</code>）、网站logo（<code>imglogo</code>）、作者头像（<code>author_img</code>）。建议启用网站logo，格式建议为<code>.svg</code>或<code>.png</code>格式。同时建议提供配套的 favicon 以及在苹果设备上的图标<code>apple_icon</code>（背景不要透明）。</p><br></li><br><li><p><strong>首页显示模式 Index</strong><br>目前首页的显示模式支持两种，一种是原先的卡片式（前往 <a href="http://wuchong.me/jacman" target="_blank" rel="external">Demo</a> 预览），另一种是类似官方主题的文章展开式（<a href="http://wuchong.me" target="_blank" rel="external">本站</a>即采用的这种）。两者各有优劣，前者首页加载速度更快，后者文章内容更能吸引读者。主题默认采用后一种展开式，如需开启第一种卡片式，请设置<code>index</code>属性下的<code>expand: false</code>。</p><br><p>卡片式的文章摘要是截取文章内容的前140个字，也可以自己总结<code>description</code>并将其放在开头的<code>front-matter</code>中。展开式的文章摘要就是使用<code>&lt;!– more –&gt;</code>截取了。</p><br></li><br><li><p><strong>作者信息 author</strong><br>作者信息，建议尽量填写完整。其中<code>tsina</code>是你的新浪微博ID，不同于用户名或微博主页地址。启用这个属性后，其他用户在微博上分享你文章的同时会自动@你。同时它和<code>weibo_verifier</code>一起作用生成微博秀。<code>intro_line1</code>和<code>intro_line2</code>是网站底部的个人介绍。<code>weibo</code>、<code>twitter</code>、<code>facebook</code>等是用来显示网站右下角的社交按钮的，如下图所示。<br><a href="http://ww4.sinaimg.cn/large/81b78497jw1emgscr3575j2078050jrc.jpg" class="fancybox" rel="external" target="_blank"><img src="http://ww4.sinaimg.cn/large/81b78497jw1emgscr3575j2078050jrc.jpg" alt=""></a></p><br></li><br><li><p><strong>目录 toc</strong><br>是否启用在文章中或侧边栏中的目录功能。二者可以都为<code>true</code>或都为<code>false</code>。同时，如果你希望在特定的某一篇文章中关闭目录功能你可以在文章文件开头中的<code>front-matter</code>中加上一行<code>toc: false</code>。如果希望在某一篇文章中关闭目录自动编号功能你可以在文章文件开头的<code>front-matter</code>中加上一行<code>list_number: false</code>。另外 hexo 2.5.2 开始支持中文目录，想获得更好的体验请升级你的 Hexo 版本。</p><br></li><br><li><p><strong>评论 comments</strong><br>填写<code>duoshuo_shortname</code><a href="http://duoshuo.com/" target="_blank" rel="external">多说</a>的用户名，启用多说评论系统。在大陆地区更好用的评论系统。</p><br><p>填写<code>disqus_shortname</code><a href="http://disqus.com/" target="_blank" rel="external">disqus</a> 的用户名，启用 disqus 评论系统。国际上更广泛使用的评论系统。设置博客根目录下的<code>_config.yml</code>文件中的<code>disqus_shortname</code>同样也能开启该功能。</p><br></li><br><li><p><strong>加网分享 jiathis</strong><br><a href="http://www.jiathis.com/" target="_blank" rel="external">加网</a>分享系统。默认关闭，因为主题已经内置了原生的分享功能。</p><br></li><br><li><p><strong>网站统计 Analytics</strong><br><code>google_analytics</code>：Google Analytics追踪代码。请注意：Google Analytics已经升级到了Universal Analytics。请先前往后台升级你的Google Analytics版本后再启用追踪代码，更多信息请<a href="https://developers.google.com/analytics/devguides/collection/upgrade/?hl=zh_CN" target="_blank" rel="external">点击这里</a>了解。</p><br><p><code>baidu_tongji</code>：百度统计功能。需要填写站点特征码<code>sitecode</code>，在<a href="http://tongji.baidu.com/web/welcome/login" target="_blank" rel="external">官网</a>注册并配置站点后，获取特征码。特征码可以在「网站中心」-&gt; 「代码获取」中查看，如下图所示的<code>e6d1f421bbc9962127a50488f9ed37d1</code>，注意去掉前面的<code>3F</code>。<br><a href="http://ww4.sinaimg.cn/large/81b78497jw1emf4v6qf91j20kf07sq8v.jpg" class="fancybox" rel="external" target="_blank"><img src="http://ww4.sinaimg.cn/large/81b78497jw1emf4v6qf91j20kf07sq8v.jpg" alt=""></a></p><br><p><code>cnzz_tongji</code>：站长统计功能。需要填写站点ID<code>siteid</code>，同理在<a href="http://www.cnzz.com" target="_blank" rel="external">站长官网</a>注册并配置站点后获得。</p><br></li><br><li><p><strong>数学公式 mathjax</strong><br>主题支持写 LaTex 数学公式。只需要在文章文件开头的<code>front-matter</code>中，加上一行<code>mathjax: true</code>，即可在文中写 LaTex 公式。</p><br></li><br><li><p><strong>图片浏览 fancybox</strong><br>默认关闭，如果你使用 Hexo 经常发表 Gallery 类型的文章，那么请设置为<code>true</code>。</p><br></li><br><li><p><strong>返回顶部 totop</strong><br>右下角<code>返回顶部</code>按钮，默认开启。</p><br></li><br><li><p><strong>自定义字体 ShowCustomFont</strong><br>是否启用自定义字体，默认开启，主要用于显示网站底部的字体。如果你有一定前端基础可以修改 font.styl 替换为你喜欢的字体。</p><br></li><br><li><p><strong>自定义搜索 Search</strong><br><code>baidu_search</code>：如果开启百度站内搜索需要登录 <a href="http://zn.baidu.com/" target="_blank" rel="external">百度站内搜索</a>，配置好你的站点，并开启站内搜索获取搜索ID，另外<code>site</code>属性可以填默认值，也可以填自己做了CNAME的二级域名，更详细的可以阅读<a href="http://gengbiao.me/hexo/hexo%E6%B7%BB%E5%8A%A0%E7%99%BE%E5%BA%A6%E7%AB%99%E5%86%85%E6%90%9C%E7%B4%A2/" target="_blank" rel="external">这篇博客</a>了解。</p><br><p><code>google_cse</code>：如果开启谷歌自定义搜索需要先登录 <a href="https://www.google.com/cse/" target="_blank" rel="external">Google CSE</a>，配置好你的站点，并获得此自定义搜索的ID。此外你需要在博客目录下的<code>source</code>文件夹中建立<code>search</code>文件夹并包含一个<code>index.md</code>文件。内容为：</p><br></li><br></ul><br><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">layout: search</div><div class="line"><span class="header">title: search</span></div><div class="line">—</div></pre></td></tr></tbody></table></figure><br><br><br><br><br><br><br><h2 id="常见问题">常见问题</h2><br><ul><br><li><p><strong>Q：图片默认都是居左的，我怎么设置能让图片居中呢？</strong></p><br><blockquote><br><p>使用 <code>&lt;img src=”” style=”display:block;margin:auto”/&gt;</code>的HTML标签。</p><br></blockquote><br></li><br><li><p><strong>Q：如何建立一篇图片类文章（Gallery Post）？</strong></p><br><blockquote><br><p>使用<code>hexo new photo “your titile”</code>建立图片类文章，或者直接新建一个 Markdown 文件，将其<code>front-matter</code>修改为如下，即可看到主题为图片类文章提供的样式，<a href="http://wuchong.me/jacman/gallery" target="_blank" rel="external">Demo</a>。</p><br></blockquote><br></li><br></ul><br><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="bullet">—</span></div><div class="line">layout: photo</div><div class="line">title: Gallery Post</div><div class="line">photos:</div><div class="line"><span class="bullet">- </span><a href="http://i.minus.com/ibobbTlfxZgITW.jpg" target="_blank" rel="external">http://i.minus.com/ibobbTlfxZgITW.jpg</a></div><div class="line"><span class="header">- <a href="http://i.minus.com/iedpg90Y0exFS.jpg" target="_blank" rel="external">http://i.minus.com/iedpg90Y0exFS.jpg</a></span></div><div class="line">—</div></pre></td></tr></tbody></table></figure><br><br><ul><br><li><p><strong>Q：我在配置文件中给某一项设置了值，但为什么总是看不到效果啊？</strong></p><br><blockquote><br><p><code>_config.yml</code>文件中的每个属性值前面必须留一个空格，建议在 Sublime/Notepad++ 中开启显示所有空格模式。另每篇文章的 <code>front-matter</code> 也要注意这个问题。</p><br></blockquote><br></li><br><li><p><strong>Q：如何建立自我介绍页面（About 页面）？</strong></p><br><blockquote><br><p>首先在主目录找到<code>_config.yml</code>，找到url添加<code>about_dir: about</code>到这个板块。然后在<code>/source</code>里面建立about文件夹。在about文件夹里建立index.md。编辑index.md就和发布其他的文章一样，格式都一样。</p><br></blockquote><br></li><br><li><p><strong>Q：怎么提意见和建议？</strong></p><br><blockquote><br><p>主题还在不断完善中，欢迎 <a href="https://github.com/wuchong/jacman/issues" target="_blank" rel="external">open issue</a> 来提建议，参与讨论。</p><br></blockquote><br></li><br><li><p><strong>Q：楼主我不喜欢你的配色，怎么换主题的颜色呢？</strong></p><br><blockquote><br><p>包括颜色在内的很多变量都在<code>jacman/source/css/_base/variable.styl</code>文件中，可以修改成你喜欢的。</p><br></blockquote><br></li><br><li><p><strong>Q：英语更能突显我的逼格，怎么换成英语？</strong></p><br><blockquote><br><p>配置你的博客根目录下的<code>_config.yml</code>，去掉<code>language: zh-CN</code>。</p><br></blockquote><br></li><br><li><p><strong>Q：为什么我修改了配置文件/发表了博文，解析出来的却是乱码呢？</strong></p><br><blockquote><br><p>请将你的配置文件/markdown文件保存成 <code>UTF-8</code> 格式。</p><br></blockquote><br></li><br><li><p><strong>Q：为什么开启了微博秀后，显示是空白的，没有内容展示？</strong></p><br><blockquote><br><p>每次修改参数都会这样，需要多刷新几次或者上传到服务器上就好了。</p><br></blockquote><br></li><br><li><p><strong>Q：博主 Jacman Demo 站点中文章的 md 源文件在哪能看到呢？</strong></p><br><blockquote><br><p>我将 Demo 站点所有源文件放在了 Jacman 的 <a href="https://github.com/wuchong/jacman/tree/site" target="_blank" rel="external">site</a> 分支下。</p><br></blockquote><br></li><br></ul></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;div class=&quot;article-content&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/wuchong/jacman&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Jacman&lt;/a&gt; 是
    
    </summary>
    
      <category term="hexo" scheme="http://xinliu.vip/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://xinliu.vip/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo使用指南</title>
    <link href="http://xinliu.vip/xinliu/9a98b233/"/>
    <id>http://xinliu.vip/xinliu/9a98b233/</id>
    <published>2017-08-01T10:00:19.000Z</published>
    <updated>2018-03-30T14:45:29.762Z</updated>
    
    <content type="html"><![CDATA[<p></p><div data-note-content="" class="show-content"><br><p>Hexo是一个快速、简洁且高效的博客框架。Hexo使用Markdown解析文章，在几秒内，即可利用靓丽的主题生成静态网页。本文介绍如何在Mac以及Windows上搭建Hexo，Linux用户也可以参考。网上关于Hexo的教程也比较多，但大都会让读者在一两个点上卡住。综合官网教程以及自己在安装过程中遇到的问题写下了本教程，一步一步来就可以无痛安装。</p><p></p><p>使用Hexo搭建的个人博客网站：<br><a href="http://zhaoshuo.me" target="_blank">zhaoshuo.me</a></p><br><h3>安装Hexo</h3><br><hr><br><p><strong>安装Nodejs</strong><br>Mac用户和Windows用户安装比较简单，直接<a href="http://nodejs.cn/download/" target="_blank">下载</a>Node.js按照默认配置安装即可。Linux用户下载编译后的文件解压后即可使用（在其bin文件夹下有npm和node的命令工具）。为了方便起见，Linux用户还需要使用ln命令将node和npm设为全局生效：</p><br><pre class="hljs bash"><code class="bash">$ ln -s /解压目录/bin/node /usr/<span class="hljs-built_in">local</span>/bin/npm<br>$ ln -s /解压目录/bin/npm /usr/<span class="hljs-built_in">local</span>/bin/npm</code></pre><br><p>安装完成后打开命令行工具（Windows用户在开始菜单打开Node.js文件夹下的Node.js command prompt）进行接下来的操作。</p><br><p><strong>更改npm源</strong></p><br><pre class="hljs bash"><code class="bash">$ npm config <span class="hljs-built_in">set</span> registry <a href="https://registry.npm.taobao.org" target="_blank" rel="external">https://registry.npm.taobao.org</a> npm info underscore</code></pre><br><p>国外的NPM源并不稳定，即使翻墙也不一定能将Hexo下载下来，所以这里直接更改为淘宝源。</p><br><p><strong>安装hexo</strong></p><br><pre class="hljs bash"><code class="bash">$ npm install -g hexo-cli</code></pre><br><p>这里安装的是hexo最新版本，如果想安装以前的的版本请运行命令<code>$ npm install -g hexo</code></p><br><p>以上步骤不出问题的话就已经在本地机器上搭建起了Hexo环境。下面介绍Hexo的具体使用方法。</p><br><h3>Quick Start</h3><br><hr><br><p><strong>创建hexo工程</strong></p><br><pre class="hljs bash"><code class="bash">$ hexo init blog</code></pre><br><p>创建一个文件夹blog（此处blog换成你自己想要的名字），使用Hexo命令初始化blog为hexo工程目录。</p><br><p><strong>新建POST</strong></p><br><pre class="hljs bash"><code class="bash">$ <span class="hljs-built_in">cd</span> blog<br>$ hexo new “HelloWorld”</code></pre><br><p>进入初始化后的blog文件夹，创建名为HelloWorld的文件，此时会在/blog/sources/_post/目录下生成HelloWorld.md文件。</p><br><p><strong>生成静态文件</strong></p><br><pre class="hljs bash"><code class="bash">$ hexo generate</code></pre><br><p>使用Hexo引擎将Markdown格式的文件解析成可以使用浏览器查看的HTML文件，HTML文件存储在blog/public目录下。</p><br><p><strong>运行hexo服务器</strong></p><br><pre class="hljs bash"><code class="bash">$ hexo server</code></pre><br><p>打开命令行提示的地址，一般是<a href="http://0.0.0.0:4000/" target="_blank">http://0.0.0.0:4000/</a>，既可以看到我们的Hexo网站。如果提示找不到server命令则需要运行命令<code>$ npm install hexo-server –save</code>，Hexo3.0之后把server独立出来了，所以需要单独安装。</p><br><p>此时Helloworld文章中没有任何内容。打开/blog/sources/_post/目录，使用编辑器打开其中的HelloWorld.md并在其中添加markdown格式的内容保存，然后重新运行以下命令：</p><br><pre class="hljs bash"><code class="bash">$ hexo generate<br>$ hexo server</code></pre><br><p>打开浏览器查看修改后的内容。以后创建并查看新的POST，运行以下命令即可：</p><br><pre class="hljs bash"><code class="bash">$ hexo new “your post name”<br>$ hexo generate<br>$ hexo server</code></pre><br><h4>安装主题</h4><br><hr><br><p>Hexo提供了默认主题landscape。如果想要使用别人的主题则需要用到Git工具。Windows用户和Mac用户安装Git都比较简单，Windows用户登录git官网下载软件安装，Mac用户只需在命令行中键入Git命令就会自动提示安装（详细安装教程请移步<a href="http://www.jianshu.com/p/dc90b9aac18c" target="_blank">Git</a>）。安装完成后打开命令行工具（Windows用户打开开始菜单Git目录下的Git Bash）。</p><br><pre class="hljs bash"><code class="bash">$ <span class="hljs-built_in">cd</span> /blog/themes<br>$ git <span class="hljs-built_in">clone</span> <a href="https://github.com/wuchong/jacman.git" target="_blank" rel="external">https://github.com/wuchong/jacman.git</a> ./jacman<br>$ <span class="hljs-built_in">cd</span> ./jacman<br>$ git pull</code></pre><br><p>然后在修改/blog/config.yml文件，将其中的theme改成jacman</p><br><pre class="hljs bash"><code class="bash">theme: jacman</code></pre><br><p>重新运行以下命令，查看更换主题后的效果</p><br><pre class="hljs bash"><code class="bash">$ hexo generate<br>$ hexo server</code></pre><br><p><a href="https://www.zhihu.com/question/24422335" target="_blank">这里</a>有一些常见的hexo主题，读者可以挑选自己喜欢的安装。</p><br><p>接下来我们将本地Hexo上传到Github免费静态内容空间中，并使用域名访问网站。</p><br><h3>申请Github免费静态内容空间</h3><br><hr><br><p>打开<a href="https://github.com/" target="_blank">Github</a>网站注册账号（<a href="https://git-scm.com/book/zh/v2/GitHub-%E8%B4%A6%E6%88%B7%E7%9A%84%E5%88%9B%E5%BB%BA%E5%92%8C%E9%85%8D%E7%BD%AE" target="_blank">账户创建和配置</a>）并使用设置的用户名创建一个Repository。点击网站右上角的+号，选择New Repository<br></p><div class="image-package"><br><img src="http://upload-images.jianshu.io/upload_images/1338260-fb1d8d39e8824ef3.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" data-original-src="http://upload-images.jianshu.io/upload_images/1338260-fb1d8d39e8824ef3.jpg?imageMogr2/auto-orient/strip%7CimageView2/2" style="cursor:zoom-in"><br><div class="image-caption">创建仓库</div><br></div><p><br>注意Repository Name必须和你设置的用户名一致。其他默认，确定创建。<br></p><div class="image-package"><br><img src="http://upload-images.jianshu.io/upload_images/1338260-6bec2372cab70160.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" data-original-src="http://upload-images.jianshu.io/upload_images/1338260-6bec2372cab70160.jpg?imageMogr2/auto-orient/strip%7CimageView2/2" style="cursor:zoom-in"><br><div class="image-caption">设置参数</div><br></div><br><p>此时专属于你的静态内容空间就已经创建好了。在浏览器中输入your username.github.io即可访问。<br></p><div class="image-package"><br><img src="http://upload-images.jianshu.io/upload_images/1338260-d47cd11bbbf5e090.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" data-original-src="http://upload-images.jianshu.io/upload_images/1338260-d47cd11bbbf5e090.jpg?imageMogr2/auto-orient/strip%7CimageView2/2" style="cursor:zoom-in"><br><div class="image-caption">创建成功</div><br></div><br><h3>将Hexo上传到Github上</h3><br><hr><br><p>安装deployer-git</p><br><pre class="hljs bash"><code class="bash">$ npm install hexo-deployer-git –save</code></pre><br><p>在/blog/_config.yml中修改deploy属性(注意:之后有空格)</p><br><pre class="hljs bash"><code class="bash">deploy:<br>  <span class="hljs-built_in">type</span>: git<br>  repository: <a href="https://github.com/thesingularityisnear/thesingularityisnear.github.io.git" target="_blank" rel="external">https://github.com/thesingularityisnear/thesingularityisnear.github.io.git</a><br>  branch: master</code></pre><br><p>将Repository换成你申请的Git仓库地址<br></p><div class="image-package"><br><img src="http://upload-images.jianshu.io/upload_images/1338260-1927949b2788148b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" data-original-src="http://upload-images.jianshu.io/upload_images/1338260-1927949b2788148b.png?imageMogr2/auto-orient/strip%7CimageView2/2" style="cursor:zoom-in"><br><div class="image-caption">repository地址</div><br></div><p><br>使用https的方式部署每次提交到Github都要输入用户名和密码，如果嫌麻烦请使用SSH的方式请移步到<a href="http://www.jianshu.com/p/dc90b9aac18c" target="_blank">Git教程</a>。</p><br><p>运行一下命令将Hexo上传到Github</p><br><pre class="hljs bash"><code class="bash">$ hexo generate<br>$ hexo deploy</code></pre><br><h3>使用域名访问Hexo</h3><br><hr><br><p><strong>购买个人域名</strong><br>可以选择在万网或者godady上购买域名。各有利弊。不过考虑到只是用来做个人网站的域名，为了方便建议在万网购买。</p><br><p><strong>解析域名</strong><br>域名服务商都会提供相关解析服务，域名解析配置均相同<br></p><div class="image-package"><br><img src="http://upload-images.jianshu.io/upload_images/1338260-ccebc833cad01b27.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" data-original-src="http://upload-images.jianshu.io/upload_images/1338260-ccebc833cad01b27.jpg?imageMogr2/auto-orient/strip%7CimageView2/2" style="cursor:zoom-in" data-pin-nopin="true"><br><div class="image-caption">参数配置</div><br></div><br><p><strong>绑定独立域名</strong><br>进入blog/source文件夹，创建名为CNAME的文件<br></p><div class="image-package"><br><img src="http://upload-images.jianshu.io/upload_images/1338260-8258963af0648ddf.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" data-original-src="http://upload-images.jianshu.io/upload_images/1338260-8258963af0648ddf.jpg?imageMogr2/auto-orient/strip%7CimageView2/2" style="cursor:zoom-in"><br><div class="image-caption">CNAME</div><br></div><p><br>运行以下命令</p><br><pre class="hljs bash"><code class="bash">$ hexo generate<br>$ hexo deploy</code></pre><br><p>万事OK，快试试用你的独立域名访问Hexo吧。</p><br><p><strong>参考资料</strong></p><br><hr><br><p>主题<br><a href="http://www.zhihu.com/question/24422335" target="_blank">http://www.zhihu.com/question/24422335</a></p><br><p>官网教程<br><a href="https://hexo.io/zh-cn/index.html" target="_blank">https://hexo.io/zh-cn/index.html</a></p><br><p>问题集锦<br><a href="https://github.com/hexojs/hexo/issues/1154" target="_blank">https://github.com/hexojs/hexo/issues/1154</a><br><a href="http://blog.csdn.net/wx_962464/article/details/44786929" target="_blank">http://blog.csdn.net/wx_962464/article/details/44786929</a></p></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;div data-note-content=&quot;&quot; class=&quot;show-content&quot;&gt;&lt;br&gt;&lt;p&gt;Hexo是一个快速、简洁且高效的博客框架。Hexo使用Markdown解析文章，在几秒内，即可利用靓丽的主题生成静态网页。本文介绍如何在Mac以及Window
    
    </summary>
    
      <category term="hexo" scheme="http://xinliu.vip/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://xinliu.vip/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>这些git技能够你用一年了(非常好)</title>
    <link href="http://xinliu.vip/xinliu/eca5437d/"/>
    <id>http://xinliu.vip/xinliu/eca5437d/</id>
    <published>2016-09-10T01:10:42.000Z</published>
    <updated>2018-03-30T14:45:29.766Z</updated>
    
    <content type="html"><![CDATA[<p>用git有一年了，下面是我这一年来的git使用总结，覆盖了日常使用中绝大多数的场景。嗯，至少是够用一年了，整理出来分享给大家，不明白的地方可以回复交流。</p><h5 id="git设置关闭自动换行"><a href="#git设置关闭自动换行" class="headerlink" title="git设置关闭自动换行"></a>git设置关闭自动换行</h5><pre><code>git config --global core.autocrlf false
</code></pre><h5 id="为了保证文件的换行符是以安全的方法，避免windows与unix的换行符混用的情况，最好也加上这么一句"><a href="#为了保证文件的换行符是以安全的方法，避免windows与unix的换行符混用的情况，最好也加上这么一句" class="headerlink" title="为了保证文件的换行符是以安全的方法，避免windows与unix的换行符混用的情况，最好也加上这么一句"></a>为了保证文件的换行符是以安全的方法，避免windows与unix的换行符混用的情况，最好也加上这么一句</h5><pre><code>git config --global core.safecrlf true
</code></pre><h5 id="git-tag-使用"><a href="#git-tag-使用" class="headerlink" title="git tag 使用"></a>git tag 使用</h5><pre><code>git tag  # 列出当前仓库的所有标签
git tag -l &apos;v0.1.*&apos;  # 搜索符合当前模式的标签

git tag v0.2.1-light  # 创建轻量标签
git tag -a v0.2.1 -m &apos;0.2.1版本&apos;  # 创建附注标签

git checkout [tagname]  # 切换到标签
git show v0.2.1  # 查看标签版本信息

git tag -d v0.2.1  # 删除标签
git tag -a v0.2.1 9fbc3d0  # 补打标签

git push origin v0.1.2  # 将v0.1.2标签提交到git服务器
git push origin –tags  # 将本地所有标签一次性提交到git服务器
git tag  # 查看当前分支下的标签

#删除远端所有tag.
git tag -l | xargs -n 1 git push --delete origin
#删除本地所有tag.
git tag -l | xargs git tag -d
</code></pre><h5 id="怎样遍历移除项目中的所有-pyc-文件"><a href="#怎样遍历移除项目中的所有-pyc-文件" class="headerlink" title="怎样遍历移除项目中的所有 .pyc 文件"></a>怎样遍历移除项目中的所有 .pyc 文件</h5><pre><code>sudo find /tmp -name &quot;*.pyc&quot; | xargs rm -rf替换/tmp目录为工作目录
git rm *.pyc这个用着也可以
</code></pre><h5 id="避免再次误提交，在项目新建-gitignore文件"><a href="#避免再次误提交，在项目新建-gitignore文件" class="headerlink" title="避免再次误提交，在项目新建.gitignore文件"></a>避免再次误提交，在项目新建.gitignore文件<br></h5><pre><code>输入*.pyc过滤文件
</code></pre><hr><h4 id="创建和使用git-ssh-key"><a href="#创建和使用git-ssh-key" class="headerlink" title="创建和使用git ssh key"></a>创建和使用git ssh key</h4><p>首先设置git的user name和email：</p><pre><code>git config --global user.name &quot;xxx&quot;
git config --global user.email &quot;xxx@gmail.com&quot;
</code></pre><h5 id="查看git配置："><a href="#查看git配置：" class="headerlink" title="查看git配置："></a>查看git配置：</h5><pre><code>git config --list
</code></pre><h5 id="然后生成SHH密匙："><a href="#然后生成SHH密匙：" class="headerlink" title="然后生成SHH密匙："></a>然后生成SHH密匙：</h5><p>查看是否已经有了ssh密钥：cd ~/.ssh<br>如果没有密钥则不会有此文件夹，有则备份删除</p><h5 id="生存密钥："><a href="#生存密钥：" class="headerlink" title="生存密钥："></a>生存密钥：</h5><pre><code>ssh-keygen -t rsa -C &quot;xxx@gmail.com&quot;
</code></pre><p>按3个回车，密码为空这里一般不使用密钥。<br>最后得到了两个文件：id_rsa和id_rsa.pub<br>注意：密匙生成就不要改了，如果已经生成到~/.ssh文件夹下去找。</p><hr><h5 id="git变更项目地址"><a href="#git变更项目地址" class="headerlink" title="git变更项目地址"></a>git变更项目地址</h5><pre><code>git remote set-url origin git@192.168.6.70:res_dev_group/test.git
git remote -v
</code></pre><h5 id="查看某个文件的修改历史"><a href="#查看某个文件的修改历史" class="headerlink" title="查看某个文件的修改历史"></a>查看某个文件的修改历史</h5><pre><code>git log --pretty=oneline 文件名 # 显示修改历史
git show 356f6def9d3fb7f3b9032ff5aa4b9110d4cca87e # 查看更改
</code></pre><h5 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a>版本回退</h5><p>版本回退用于线上系统出现问题后恢复旧版本的操作。<br>回退到的版本</p><pre><code>git reset --hard 248cba8e77231601d1189e3576dc096c8986ae51
</code></pre><p>回退的是所有文件，如果后悔回退可以git pull就可以了。</p><p>如果要使用回退后的版本，并且要push到远程分支，可使用:</p><pre><code>git push -f origin 
</code></pre><p>当前分支名 强制推送到Github上。注意-f选项不能丢。并且把这个版本之后提交的全部删除！</p><hr><h5 id="git-push-时报错-warning-push-default-is-unset"><a href="#git-push-时报错-warning-push-default-is-unset" class="headerlink" title="git push 时报错 warning: push.default is unset;"></a>git push 时报错 warning: push.default is unset;</h5><p>‘matching’参数是 Git 1.x 的默认行为，其意是如果你执行 git push 但没有指定分支，它将 push 所有你本地的分支到远程仓库中对应匹配的分支。而 Git 2.x 默认的是 simple，意味着执行 git push 没有指定分支时，只有当前分支会被 push 到你使用 git pull 获取的代码。<br>根据提示，修改git push的行为:<br>git config –global push.default matching<br>再次执行git push 得到解决。</p><hr><h5 id="git-submodule的使用拉子项目代码"><a href="#git-submodule的使用拉子项目代码" class="headerlink" title="git submodule的使用拉子项目代码"></a>git submodule的使用拉子项目代码</h5><p>开发过程中，经常会有一些通用的部分希望抽取出来做成一个公共库来提供给别的工程来使用，而公共代码库的版本管理是个麻烦的事情。今天无意中发现了git的git submodule命令，之前的问题迎刃而解了。<br>添加</p><p>为当前工程添加submodule，命令如下：</p><pre><code>git submodule add 仓库地址 路径
</code></pre><p>其中，仓库地址是指子模块仓库地址，路径指将子模块放置在当前工程下的路径。<br>注意：路径不能以 / 结尾（会造成修改不生效）、不能是现有工程已有的目录（不能順利 Clone）</p><p>命令执行完成，会在当前工程根路径下生成一个名为“.gitmodules”的文件，其中记录了子模块的信息。添加完成以后，再将子模块所在的文件夹添加到工程中即可。<br>删除</p><p>submodule的删除稍微麻烦点：首先，要在“.gitmodules”文件中删除相应配置信息。然后，执行git rm –cached命令将子模块所在的文件从git中删除。<br>下载的工程带有submodule</p><p>当使用git clone下来的工程中带有submodule时，初始的时候，submodule的内容并不会自动下载下来的，此时，只需执行如下命令：</p><pre><code>git submodule update --init --recursive
</code></pre><p>即可将子模块内容下载下来后工程才不会缺少相应的文件。</p><hr><h5 id="git-add文件取消"><a href="#git-add文件取消" class="headerlink" title="git add文件取消"></a>git add文件取消</h5><p>在git的一般使用中，如果发现错误的将不想提交的文件add进入index之后，想回退取消，则可以使用命令：git reset HEAD<file>…，同时git add完毕之后，git也会做相应的提示。</file></p><h5 id="git删除文件："><a href="#git删除文件：" class="headerlink" title="git删除文件："></a>git删除文件：</h5><p>删除文件跟踪并且删除文件系统中的文件file1git rm file1<br>提交刚才的删除动作，之后git不再管理该文件git commit</p><p>删除文件跟踪但不删除文件系统中的文件file1git rm –cached file1<br>提交刚才的删除动作，之后git不再管理该文件。但是文件系统中还是有file1。git commit</p><h5 id="历史版本对比"><a href="#历史版本对比" class="headerlink" title="历史版本对比"></a>历史版本对比</h5><p>查看日志git log<br>查看某一历史版本的提交内容git show 4ebd4bbc3ed321d01484a4ed206f18ce2ebde5ca，这里能看到版本的详细修改代码。<br>对比不同版本git diff c0f28a2ec490236caa13dec0e8ea826583b49b7a 2e476412c34a63b213b735e5a6d90cd05b014c33</p><h5 id="分支的意义与管理"><a href="#分支的意义与管理" class="headerlink" title="分支的意义与管理"></a>分支的意义与管理</h5><p>创建分支可以避免提交代码后对主分支的影响，同时也使你有了相对独立的开发环境。分支具有很重要的意义。<br>创建并切换分支，提交代码后才能在其它机器拉分支代码git checkout -b new_branch<br>查看当前分支git branch<br>切换到master分支git checkout master<br>合并分支到当前分支git merge new_branch，合并分支的操作是从new_branch合并到master分支，当前环境在master分支。<br>删除分支git branch -d new_branch</p><h5 id="git冲突文件编辑"><a href="#git冲突文件编辑" class="headerlink" title="git冲突文件编辑"></a>git冲突文件编辑</h5><p>冲突文件冲突的地方如下面这样</p><p>a123<br>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</p><h1 id="b789"><a href="#b789" class="headerlink" title="b789"></a>b789</h1><p>b45678910</p><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><p>6853e5ff961e684d3a6c02d4d06183b5ff330dcc<br>c<br>冲突标记&lt;&lt;&lt;&lt;&lt;&lt;&lt; （7个&lt;）与=======之间的内容是我的修改，=======与&gt;&gt;&gt;&gt;&gt;&gt;&gt;之间的内容是别人的修改。<br>此时，还没有任何其它垃圾文件产生。<br>你需要把代码合并好后重新走一遍代码提交流程就好了。</p></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote><h5 id="不顺利的代码提交流程"><a href="#不顺利的代码提交流程" class="headerlink" title="不顺利的代码提交流程"></a>不顺利的代码提交流程</h5><p>在git push后出现错误可能是因为其他人提交了代码，而使你的本地代码库版本不是最新。<br>这时你需要先git pull代码后，检查是否有文件冲突。<br>没有文件冲突的话需要重新走一遍代码提交流程add —&gt; commit —&gt; push。<br>解决文件冲突在后面说。</p><h5 id="git顺利的提交代码流程"><a href="#git顺利的提交代码流程" class="headerlink" title="git顺利的提交代码流程"></a>git顺利的提交代码流程</h5><p>查看修改的文件git status；<br>为了谨慎检查一下代码git diff；<br>添加修改的文件git add dirname1/filename1.py dirname2/filenam2.py，新加的文件也是直接add就好了；<br>添加修改的日志git commit -m “fixed:修改了上传文件的逻辑”；<br>提交代码git push，如果提交失败的可能原因是本地代码库版本不是最新。</p><h5 id="理解github的pull-request"><a href="#理解github的pull-request" class="headerlink" title="理解github的pull request"></a>理解github的pull request</h5><p>有一个仓库，叫Repo A。你如果要往里贡献代码，首先要Fork这个Repo，于是在你的Github账号下有了一个Repo A2,。然后你在这个A2下工作，Commit，push等。然后你希望原始仓库Repo A合并你的工作，你可以在Github上发起一个Pull Request，意思是请求Repo A的所有者从你的A2合并分支。如果被审核通过并正式合并，这样你就为项目A做贡献了。</p><h4 id="一些错误处理"><a href="#一些错误处理" class="headerlink" title="一些错误处理"></a>一些错误处理</h4><h5 id="“pathspec-‘branch’-did-not-match-any-file-s-known-to-git-”错误"><a href="#“pathspec-‘branch’-did-not-match-any-file-s-known-to-git-”错误" class="headerlink" title="“pathspec ‘branch’ did not match any file(s) known to git.”错误"></a>“pathspec ‘branch’ did not match any file(s) known to git.”错误</h5><pre><code>git checkout master
git pull
git checkout new_branch
</code></pre><h5 id="使用git提交比较大的文件的时候可能会出现这个错误"><a href="#使用git提交比较大的文件的时候可能会出现这个错误" class="headerlink" title="使用git提交比较大的文件的时候可能会出现这个错误"></a>使用git提交比较大的文件的时候可能会出现这个错误</h5><p><em>error: RPC failed; result=22, HTTP code = 411<br>fatal: The remote end hung up unexpectedly<br>fatal: The remote end hung up unexpectedly<br>Everything up-to-date</em></p><p>这样的话首先改一下git的传输字节限制</p><pre><code>git config http.postBuffer 524288000
</code></pre><p>然后这时候在传输或许会出现另一个错误</p><pre><code>error: RPC failed; result=22, HTTP code = 413
fatal: The remote end hung up unexpectedly
fatal: The remote end hung up unexpectedly
Everything up-to-date
</code></pre><p>这两个错误看上去相似，一个是411，一个是413</p><p>下面这个错误添加一下密钥就可以了</p><p>1、首先key-keygen 生成密钥</p><p>2、然后把生成的密钥复制到git中自己的账号下的相应位置</p><pre><code>git push ssh://192.168.64.250/eccp.git branch
</code></pre><p>删掉本地缓存的远程分支： 用</p><pre><code>git fetch -p
</code></pre><p>删掉本地缓存的远程分支</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用git有一年了，下面是我这一年来的git使用总结，覆盖了日常使用中绝大多数的场景。嗯，至少是够用一年了，整理出来分享给大家，不明白的地方可以回复交流。&lt;/p&gt;&lt;h5 id=&quot;git设置关闭自动换行&quot;&gt;&lt;a href=&quot;#git设置关闭自动换行&quot; class=&quot;header
    
    </summary>
    
      <category term="git" scheme="http://xinliu.vip/categories/git/"/>
    
    
      <category term="git" scheme="http://xinliu.vip/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>常见Java数据结构&amp;优缺点</title>
    <link href="http://xinliu.vip/xinliu/52ce0f1f/"/>
    <id>http://xinliu.vip/xinliu/52ce0f1f/</id>
    <published>2016-09-10T00:57:06.000Z</published>
    <updated>2018-03-30T14:45:29.765Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://bbs.itheima.com/data/attachment/forum/201604/06/154106wgfflilzaz03i53p.png.thumb.jpg" alt=""><br><img src="http://bbs.itheima.com/data/attachment/forum/201604/06/154114znuxnnov7u5ueewz.png.thumb.jpg" alt=""></p><h4 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h4><p><img src="http://bbs.itheima.com/data/attachment/forum/201604/06/154115k060bqlzho3guu6l.png.thumb.jpg" alt=""></p><p>优点：查询快,如果知道索引可以快速地存取</p><p>缺点：删除慢,大小固定</p><h4 id="有序数组"><a href="#有序数组" class="headerlink" title="有序数组"></a>有序数组</h4><p>优点：比无序数组查找快</p><p>缺点：删除和插入慢，大小固定</p><h4 id="栈"><a href="#栈" class="headerlink" title="栈"></a>栈</h4><p>优点：提供后进先出的存取方式</p><p>缺点：存取其他项很慢</p><h4 id="队列"><a href="#队列" class="headerlink" title="队列"></a>队列</h4><p><img src="http://bbs.itheima.com/data/attachment/forum/201604/06/154115nbzc9ah5lbjzt8lh.png.thumb.jpg" alt=""></p><p>优点：提供先进先出的存取方式</p><p>缺点：存取其他项都很慢</p><h4 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h4><p><img src="http://bbs.itheima.com/data/attachment/forum/201604/06/154116piopuj229z51051j.png.thumb.jpg" alt=""></p><p>优点：插入快，删除快</p><p>缺点：查找慢(一个个节点查)</p><h4 id="二叉树"><a href="#二叉树" class="headerlink" title="二叉树"></a>二叉树</h4><p><img src="http://bbs.itheima.com/data/attachment/forum/201604/06/154116jxrh00j8zw8xae0j.png.thumb.jpg" alt=""></p><p>优点：查找，插入，删除都快（平衡二叉树）</p><p>缺点：删除算法复杂</p><h4 id="红-黑树"><a href="#红-黑树" class="headerlink" title="红-黑树"></a>红-黑树</h4><p><img src="http://bbs.itheima.com/data/attachment/forum/201604/06/154116t2uo2q29vdcdvr7c.png.thumb.jpg" alt=""></p><p>优点：查找，插入，删除都快，树总是平衡的(局部调整)</p><p>缺点：算法复杂</p><h4 id="2-3-4树"><a href="#2-3-4树" class="headerlink" title="2-3-4树"></a>2-3-4树</h4><p>优点：查找，插入，删除都快，树总是平衡的。类似的树对磁盘存储有用</p><p>缺点：算法复杂</p><h4 id="哈希表"><a href="#哈希表" class="headerlink" title="哈希表"></a>哈希表</h4><p><img src="http://bbs.itheima.com/data/attachment/forum/201604/06/154117nfp8v8o0dmasn9te.png.thumb.jpg" alt=""></p><p>优点：如果关键字已知则存取速度极快，插入快</p><p>缺点：删除慢，如果不知道关键字则存取很慢，对存储空间使用不充分</p><h4 id="堆"><a href="#堆" class="headerlink" title="堆"></a>堆</h4><p>优点：插入，删除快，对最大数据的项存取很快</p><p>缺点：对其他数据项存取很慢</p><p>####图</p><p>优点：对现实世界建模</p><p>缺点：有些算法慢且复杂</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://bbs.itheima.com/data/attachment/forum/201604/06/154106wgfflilzaz03i53p.png.thumb.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://bbs.it
    
    </summary>
    
      <category term="java" scheme="http://xinliu.vip/categories/java/"/>
    
    
      <category term="java" scheme="http://xinliu.vip/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>gulp快速上手</title>
    <link href="http://xinliu.vip/xinliu/82151a82/"/>
    <id>http://xinliu.vip/xinliu/82151a82/</id>
    <published>2016-09-09T07:41:03.000Z</published>
    <updated>2018-03-30T14:45:29.765Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>&emsp;&emsp;这几天和一个团队做项目用到gulp,这里写点自己的看法。<br>首先，来看这篇教程的肯定是听过gulp的，那么一定也了解过nodejs，知道前端自动化工具，可是平时用sublime写代码用的好好的，没觉得需要什么工具来加快开发流程。那么第一个问题一定是“我们为什么用gulp？”</p><h3 id="我们为什么用gulp？"><a href="#我们为什么用gulp？" class="headerlink" title="我们为什么用gulp？"></a>我们为什么用gulp？</h3><p>&emsp;&emsp;首先先问自己一个问题：平时用sass/less写css，用jade写/html代码，那么这些文件的的测试、检查、合并、压缩、格式化、部署，监听。应该怎么完成呢？就来压缩合并来讲，可以减少多个css，js文件请求，优化网页性能，这样的工作是否应该有一个很好的解决方案呢？—答案就是gulp<br>gulp与grunt谁好谁坏的争论一直存在，大家可以自行搜索，这里我想说，适合自己的就是最好的，我是前端菜鸟，所以一上手接触的就是gulp。</p><h3 id="安装gulp"><a href="#安装gulp" class="headerlink" title="安装gulp"></a>安装gulp</h3><p>&emsp;&emsp;学习一门技术，最好的途径就是看官方文档。这里我贴出地址<br><a href="http://gulpjs.com/" target="_blank" rel="external">gulp官方网址</a><br><a href="http://gulpjs.com/plugins/" target="_blank" rel="external">gulp插件地址</a><br><a href="https://github.com/gulpjs/gulp/blob/master/docs/API.md" target="_blank" rel="external">gulp 官方API</a><br><a href="http://www.dtao.org/archives/424" target="_blank" rel="external">gulp中文API</a><br><br>1.通过npm包安装（前提是已经安装了nodejs环境 和 npm）</p><pre><code>npm install gulp -g
</code></pre><p>这里稍微介绍一下命令的含义：因为npm安装插件的命令行格式为</p><pre><code>npm install &lt;name&gt; [-g] [--save-dev]
</code></pre><p>其中 ：node插件名称<br>-g：全局安装。将会安装在全局路径下，并且写入系统环境变量，最直观的感觉就是可以可以通过命令行在任何地方调用它；全局路径 输入npm config get prefix可以看到路径，我的ubuntu系统显示/usr/local/lib/node_modules/<br>非全局安装：将会安装在当前定位目录； 本地安装将安装在定位目录的node_modules文件夹下，通过require()调用；<br>–save：将保存配置信息至package.json（package.json是nodejs项目配置文件）；因为node插件太多，不用一个package文件保存插件信息，之后维护和升级会比较麻烦<br>-dev：保存至package.json的devDependencies节点，不指定-dev将保存至dependencies节点；</p><p>&emsp;&emsp;在全局安装完gulp后，运行gulp -v 可以查看gulp版本号</p><h3 id="第一个gulp项目"><a href="#第一个gulp项目" class="headerlink" title="第一个gulp项目"></a>第一个gulp项目</h3><p>1.先新建一个项目目录：mkdir gulp-file<br>2.进入这个目录： cd gulp-file<br>3.再次在本地安装gulp：npm install gulp –save<br>这样做的目的是为了让gulp开发升级更加灵活，具体的我也不太懂，stackoverflow上面有人问过这个问题“为什么我要在全局和本地安装两次我的gulp”<br>4.新建package.json配置文件：npm init<br>5.会出来一个命令行对话输入<br>依次填写即可得到你的package.json文件，ls一下可以查看。<br>6.接下来假设gulp-flie 项目开发中还有css，js等文件，我们可以通过配置gulpfile.js文件来进行管理<br>gulpfile.js配置<br>7.在根目录下创建配置文件：touch gulpfile.js<br>8.打开编辑:gedit gulpfile.js<br>9.gulpfile.js文件内容如下：</p><pre><code>var gulp =require(&quot;gulp&quot;);//创建 gulp模块
var uglify=require(&quot;gulp-uglify&quot;);//创建js混淆压缩 模块
var minify_css =require(&quot;gulp-minify-css&quot;);　//创建 css混淆压缩模块
var gulp_concat = require(&apos;gulp-concat&apos;);  //创建 文件合并模块
</code></pre><p>以上这5个都是node_modules/里的插件模块 (因为之前没有安装过这些插件，所以得用npm安装)<br>10.安装相应的模块：npm install gulp-uglify gulp-minify-css gulp-concat gulp-rename –save<br>11.安装完成之后，可以打开package.json文件，看到相关插件的一些版本信息<br>12.插件的作用是为了让我们前端开发更加流畅和规范化。<br>13.这个时候，打开官方文档，发现官网说gulp有4个属性，即src，dest，watch，task。</p><p><strong>官方API</strong></p><pre><code>gulp.task(name[, deps], fn)
gulp.src(globs[, options])
gulp.dest(path[, options])
gulp.watch(glob [, opts], tagulpsks)
</code></pre><p>看不懂没关系，我们先快速上手着几个api再一个个分析接着在gulpfile.js中写入下列几行代码</p><pre><code>gulp.task(&apos;min-css&apos;,function(){  //1
       gulp.src(&apos;./src/css/*.css&apos;)  //2
       .pipe(gulp_concat(&quot;index.min.css&quot;))//3 
       .pipe(minify_css())//4.混淆即压缩
       .pipe(gulp.dest(&apos;./dist/css&apos;));//5.输出路径
   });
</code></pre><h3 id="1-gulp-task-‘min-css’-function"><a href="#1-gulp-task-‘min-css’-function" class="headerlink" title="//1. gulp.task(‘min-css’,function(){ }"></a>//1. gulp.task(‘min-css’,function(){ }</h3><p><em>这个API用来创建任务，在命令行下可以输入$ gulp min-css来执行上面的任务。gulp.task(name[, deps], fn)</em><br></p><p>第一个参数name是自定义你的任务名称，<br>第二个参数[deps]是一个数组，里面是你定义的其他任务的名称，这些任务会在本次定义的任务之前执行并完成。<br>第三个参数fn是本次任务的回调函数。<br>举个栗子：</p><pre><code>gulp.task(&apos;task1&apos;,function(){
    console.log(&quot;task1 done&quot;);
});
gulp.task(&apos;task2&apos;,function(){
    console.log(&quot;task2 done&quot;);
});
gulp.task(&apos;task3&apos;,function(){
    console.log(&quot;task3 done&quot;);
});
gulp.task(&apos;build&apos;,[&apos;task1&apos;,&apos;task2&apos;,&apos;task3&apos;],function(){
    console.log(&quot;build done&quot;);
});
</code></pre><p>下图是执行build任务的结果，用gulp build</p><p>现在应该很清除这3个参数的作用了吧</p><p>//pipe（），管道函数，及</p><h3 id="2-gulp-src-‘-src-css-css’"><a href="#2-gulp-src-‘-src-css-css’" class="headerlink" title="//2.gulp.src(‘./src/css/*.css’)"></a>//2.gulp.src(‘./src/css/*.css’)</h3><p><em>这个API获得要处理的文件源路径并返回Vinyl files类型的输入流 官方API gulp.src(globs[, options])</em><br></p><p>&emsp;&emsp;globs是一个匹配模式，如gulpfile.js中写的 gulp.src(‘./src/css/<em>.css’)<br>‘./src/css/</em>.css’匹配同层路径下src目录下的css目录下的所有以.css结尾的文件<br>更多的匹配模式可以参考官方文档。<br>globs类型：String 或者 Array。string则说明它匹配单一模式。array表示它可以传入数组多个匹配字段，如[‘./src/css/index.css’,’./src/css/pomelo.css’]<br>[options]是可选的。主要是两个，options.base—-匹配的根目录，options-read<br>举个栗子：哈哈，这个得等学会gulp.dest() 这个API后才能具体说明。</p><p>###//3 .pipe(gulp_concat(“index.min.css”))</p><p>pipe（）方法是正如字面意思理解的那样，把一个文件流输入，通过pipe管道输出</p><p><em>下一个处理程序可以把上一级输出的流文件当做输入</em><br></p><p>这样可以实现文件流的高效处理,我认为这种方法很像jquery的写法。能够进行链式调用处理。<br>那么毫无疑问，第三段的代码.pipe(gulp_concat(“index.min.css”))//3 的意思就是把获取到匹配gulp.src()字段的文件通过pipe管道进入插件gulp_concat()的处理程序，并且合并后的文件名为index.min.css<br>这里插件gulp_concat是文件合并的插件，详细的使用方法请在gitbub或者npm网站中找到相关的api文档。</p><h3 id="4-pipe-minify-css-混淆压缩js插件"><a href="#4-pipe-minify-css-混淆压缩js插件" class="headerlink" title="//4 .pipe(minify_css())//混淆压缩js插件"></a>//4 .pipe(minify_css())//混淆压缩js插件</h3><p>方法和第三步是一样的</p><p>###//5 .pipe(gulp.dest(‘./dist/css’));</p><p><em>官方API gulp.dest(path[, options])</em><br></p><p>第一个参数 path：String 或者 Function<br>string类型——–输出文件的目标路径（或目录）’./dist/css’<br>function——–将接收一个 vinyl 文件实例 作为参数（具体请看分析“Gulp思维——Gulp高级技巧”）<br>第二个参数options有两个属性options.cwd 和 options.mode<br>options.cwd 用于计算输出目录的，只有提供的输出目录是相对路径时此参数才有用。<br>options.mode 用于创建的输出目录指定权限。默认值为077</p><p>前面提到过。想使用gulp.src的一些属性参数得先学会gulp.dest().这是因为源的参数设定（即输入端）会影响输出端的。</p><p><em>gulp.dest()的作用是将 目的地址（gulp.dest()）的基础路径（base）替换成 源地址(gulp.src())的基础路径（base）输出</em><br></p><p>那么什么是基础路径base呢？<br>gulp.src(‘./src/css/<em>.css’)中有第二个参数base，可以指定基础路径，如果不设置，则默认基础路径为 </em>之前的路径。</p><p><em>base：’./src/css’</em></p><p>如果设置了 gulp.src(‘./src/css/*.css’,{base：’./‘})<br>则base——‘./‘<br>gulp.dest(‘./dist/css’)传入的参数就是base路径</p><p><em>base:’./dist/css’</em></p><p>举个栗子来解释什么是替换</p><p>gulp.src(‘./src/css/*.css’).pipe().pipe(gulp.dest(‘./dist/css’))；</p><p>那么最后文件处理完成的最终路径是</p><p>./dist/css/*.css<br>如果是</p><p>gulp.src(‘./src/css/*.css’,{base：’./‘}).pipe().pipe(gulp.dest(‘./dist/css’))；<br>那么最后文件处理完成的最终路径是</p><p>./dist/css/src/css/*.css</p><h3 id="综上所述："><a href="#综上所述：" class="headerlink" title="综上所述："></a>综上所述：</h3><p>&emsp;&emsp;快速入门gulp就算结束了。我们已经学会如何装gulp，如何安装gulp插件，如何写package.json文件。如何写gulpfile.js配置文件<br>了解了gulp的3大APIgulp.src();gulp.task();gulp.dest()<br>实现的功能：完成了对多个css文件的合并与压缩并且输入到目标文件夹下</p><p>最后再次献上gulp官方网站，想学习更多就得自己修炼了。 ^0^</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;&amp;emsp;&amp;emsp;这几天和一个团队做项目用到gulp,这里写点自己的看法。&lt;br&gt;首先，来看这篇教程的肯定是听过gulp的，那么一定也
    
    </summary>
    
      <category term="gulp" scheme="http://xinliu.vip/categories/gulp/"/>
    
    
      <category term="gulp" scheme="http://xinliu.vip/tags/gulp/"/>
    
  </entry>
  
  <entry>
    <title>在activity中无法使用getFragmentManager()</title>
    <link href="http://xinliu.vip/xinliu/2b35168d/"/>
    <id>http://xinliu.vip/xinliu/2b35168d/</id>
    <published>2016-09-09T07:38:25.000Z</published>
    <updated>2018-03-30T14:45:29.765Z</updated>
    
    <content type="html"><![CDATA[<p>在activity中应该使用</p><pre><code>getSupportFragmentManager（）
</code></pre><p>如果使用</p><pre><code>getFragmentManager()
</code></pre><p>，在跳转自定义Fragment是会编译报错。</p><pre><code>wrong 2nd argument type....
</code></pre><p>而在自定义的Fragment中使用getFragmentManager()则没问题。</p><p>通过查看源码可知，Acrivity中getFragmentManager( )用的是</p><p>package android.app;<br>包下的代码，而Fragment是</p><p>package android.support.v4.app;<br>下的。这就好比有两大家族各族内的人员不能重名，</p><p>package android.app<br>下有一个小明，而V4下也有个小明。</p><p>那么自定义的Fragment是V4下的小明，如果在activity中用getFragmentManager( )强行给了android.app，那android.app坑定不会认同的。</p><p>如果使用</p><pre><code>getSupportFragmentManager（）
</code></pre><p>就没问题了，因为他是V4下的，所以可用把这个小明送回V4。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在activity中应该使用&lt;/p&gt;&lt;pre&gt;&lt;code&gt;getSupportFragmentManager（）
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果使用&lt;/p&gt;&lt;pre&gt;&lt;code&gt;getFragmentManager()
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;，在跳转自定义F
    
    </summary>
    
      <category term="Android" scheme="http://xinliu.vip/categories/Android/"/>
    
    
      <category term="Android" scheme="http://xinliu.vip/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Android studio使用过程中遇到的问题</title>
    <link href="http://xinliu.vip/xinliu/64d0b5f2/"/>
    <id>http://xinliu.vip/xinliu/64d0b5f2/</id>
    <published>2016-09-09T07:27:55.000Z</published>
    <updated>2018-03-30T14:45:29.762Z</updated>
    
    <content type="html"><![CDATA[<p>好多问题都是修改gradle文件解决的，如果以下问题没有注明修改什么地方，那就是gradle文件了</p><p>问题汇总：</p><p>1、</p><p>NinePatch（.9.png）图片的问题<br>如果某个图片命名成了.9.png,实际图片并不是Ninepatch格式的，或格式错误，会编译出错，解决办法是按Ninepatch格式修改图片，严格安规范，四周都要限制。</p><p>2、</p><p>android studio 非法字符: \65279 Error:(1, 10) 错误: 需要class, interface或enum<br>这个错误是文件BOM导致的<br>只要将文件编码方式改掉就行，不要使用UTF-8 WITH BOM(UTF-8包含签名)<br>简单的把文件删除，在Android Studio新建文件，再把原文件内容粘贴过去就行<br>如果需要改的文件太多，给大家推荐一个小工具 BOM头小工具。</p><p>3、</p><p>AndroidMenifest.xml重复权限问题<br>需要把重复的权限去掉，就不会再报警告了</p><p>4、</p><pre><code>Error:(26, 9) Attribute application@icon value=(@drawable/logo) from AndroidManifest.xml:26:9
Error:(28, 9) Attribute application@theme value=(@style/ThemeActionBar) from AndroidManifest.xml:28:9
is also present at XXXX-trunk:XXXXLib:unspecified:15:9 value=(@style/AppTheme)
Suggestion: add ‘tools:replace=”android:theme”‘ to &lt;application&gt; element at AndroidManifest.xml:24:5 to override
Error:Execution failed for task ‘:XXXX:processDebugManifest’.
&gt; Manifest merger failed with multiple errors, see logs
</code></pre><p>原因：</p><p>AS的Gradle插件默认会启用Manifest Merger Tool，若Library项目中也定义了与主项目相同的属性（例如默认生成的android:icon和android:theme），则此时会合并失败，并报上面的错误。</p><p>解决方法有以下2种：</p><pre><code>方法1：在Manifest.xml的application标签下添加tools:replace=”android:icon, android:theme”（多个属性用,隔开，并且记住在manifest根标签上加入xmlns:tools=”http://schemas.android.com/tools”，否则会找不到namespace哦）
</code></pre><p>方法2：在build.gradle根标签上加上useOldManifestMerger true （懒人方法）</p><p>参考官方介绍：<br><a href="http://tools.android.com/tech-docs/new-build-system/user-guide/manifest-merger" target="_blank" rel="external">http://tools.android.com/tech-docs/new-build-system/user-guide/manifest-merger</a></p><p>5、</p><p>Library Project里面的BuildConfig.DEBUG永远都是false。这是Android Studio的一个已知问题，某Google的攻城狮说，Library projects目前只会生成release的包。</p><pre><code>Issue 52962: https://code.google.com/p/android/issues/detail?id=52962
</code></pre><p>解决方法：（某Google的攻城狮推荐的方法）</p><pre><code>Workaround: instaed of BuildConfig.DEBUG create another boolean variable at lib-project’s e.g. BuildConfig.RELEASE and link it with application’s buildType.
</code></pre><p>参考stackoverflow上的这篇帖：</p><p><a href="http://stackoverflow.com/questions/20176284/buildconfig-debug-always-false-when-building-library-projects-with-gradle" target="_blank" rel="external">http://stackoverflow.com/questions/20176284/buildconfig-debug-always-false-when-building-library-projects-with-gradle</a></p><p>6、</p><p>每次保存的时候，每行多余的空格和TAB会被自动删除（例如结尾、空行的多余空格或TAB）</p><p>特别是每次准备提交SVN，Review代码时候你就蛋疼了，显示一堆不相关的更改，看的眼花。</p><p>解决方法：</p><p>Settings-&gt;IDE Settings-&gt;Editor-&gt;Other-&gt;Strip trailing spaces on Save-&gt;None</p><p>7、</p><p>编译的时候，报：Failure [INSTALL_FAILED_OLDER_SDK]。一般是系统自动帮你设置了compileSdkVersion</p><p>解决方法：</p><p>修改build.gradle下的compileSdkVersion ‘android-L’为compileSdkVersion 19（或者你本机已有的SDK即可）</p><p>8、</p><pre><code>&gt; com.android.build.api.transform.TransformException: com.android.ide.common.process.ProcessException: org.gradle.process.internal.ExecException: Process &apos;command &apos;/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/bin/java&apos;&apos; finished with non-zero exit value 2
</code></pre><p>解决方法：</p><p>在工程的gradle中设置</p><p>可以支持超过65k的方法数</p><pre><code>defaultConfig {        
    // Enabling multidex support.
    multiDexEnabled true
}
</code></pre><p>9、</p><pre><code>com.android.build.api.transform.TransformException: java.util.zip.ZipException: duplicate entry: ch/boye/httpclientandroidlib/ConnectionClosedException.class
</code></pre><p>解决方法：</p><p>重复包，把对应重复的删除即可一般为v4冲突</p><p>10、</p><pre><code>Suggestion: add &apos;tools:replace=&quot;android:icon&quot;&apos; to &lt;application&gt; element at AndroidManifest.xml
</code></pre><p>解决办法：</p><p>在Manifest标签下添加<br>xmlns:tools=”<a href="http://schemas.android.com/tools" target="_blank" rel="external">http://schemas.android.com/tools</a>“<br>在Application标签下添加<br>tools:replace=”android:icon”<br>11、</p><pre><code>Error:Execution failed for task &apos;:transformClassesWithDexForArmv7Release&apos;.&gt; com.android.build.api.transform.TransformException: com.android.ide.common.process.ProcessException: java.util.concurrent.ExecutionException: com.android.ide.common.process.ProcessException: org.gradle.process.internal.ExecException: Process &apos;command &apos;/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/bin/java&apos;&apos; finished with non-zero exit value 3
</code></pre><p>解决：</p><pre><code>dexOptions {    
javaMaxHeapSize &quot;4g&quot;
}
</code></pre><p>12、<br>多语言未翻译问题</p><p>解决：<br>可以在lint.xml中加入</p><pre><code>&lt;issue
id=&quot;MissingTtanslation&quot;
severity=&quot;ignore&quot;
/&gt;
</code></pre><p>或者更干脆点，按照studio的提示来<br>打开项目目录下的build.gradle文件（这就是gradle的配置文件，gradle就是编译工具了），然后按照提示一股脑把新参数全部加到android里面。</p><pre><code>android {
lintOptions{
checkReleaseBuilds false
abortOnError false
}}
</code></pre><p>这样打包就不成问题了。checkReleaseBuilds就是在打包Release版本的时候进行检测，这里就直接关掉了，也可以打开，这样报错还会显示出来。关键的就是abortOnError一定要设为false，这样即使有报错也不会停止打包了。</p><p>15、</p><pre><code>FATAL EXCEPTION: main
Process: com.wanda.property_client, PID: 11910
java.lang.NoClassDefFoundError: org.apache.cordova.PluginEntry
</code></pre><p>导致4.4系统安装程序直接崩掉</p><p>解决：</p><p>在application中加入：</p><pre><code>protected void attachBaseContext(Context base) {
    super.attachBaseContext(base);    
　　 MultiDex.install(this);
}
</code></pre><p>16、</p><pre><code>Gradle sync failed: &apos;com.android.build.gradle.BasePlugin&apos; does not implement the Plugin interface
</code></pre><p>解决：</p><p>在gradle中修改</p><pre><code>classpath &apos;com.android.tools.build:gradle:0.14.0+&apos;
</code></pre><p>到</p><pre><code>classpath &apos;com.android.tools.build:gradle:2.1.0&apos;
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;好多问题都是修改gradle文件解决的，如果以下问题没有注明修改什么地方，那就是gradle文件了&lt;/p&gt;&lt;p&gt;问题汇总：&lt;/p&gt;&lt;p&gt;1、&lt;/p&gt;&lt;p&gt;NinePatch（.9.png）图片的问题&lt;br&gt;如果某个图片命名成了.9.png,实际图片并不是Ninepatch格
    
    </summary>
    
      <category term="Android" scheme="http://xinliu.vip/categories/Android/"/>
    
    
      <category term="Android" scheme="http://xinliu.vip/tags/Android/"/>
    
  </entry>
  
</feed>
